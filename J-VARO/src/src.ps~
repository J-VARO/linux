%!PS-Adobe-3.0
%%Title: Project.java, MetabolicNetwork.java, MetabolicNetworkItf.java, Reaction.java, Metabolite.java, ElementaryMode.java, Format.java, SBMLFormat.java, MetatoolFormat.java, ProjectFormat.java
%%For: Lucas Marmiesse
%%Creator: a2ps version 4.14
%%CreationDate: Fri Feb 15 16:18:00 2013
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 121
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black Blue Green Red 
%%DocumentSuppliedResources: procset a2ps-color-prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  0 setgray
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.5 0.5 1 setrgbcolor
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    1 setgray
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def
%%BeginResource: procset a2ps-color-prolog 2.0 1

%% Definition of the color faces.
/p {
  0 0 0 FG
  false BG
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  0 0 0 FG
  false BG
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false BG
  false UL
  false BX
  0 0 0.9 FG
  fCourier bfs scalefont setfont
  Show
} bind def

/K {
  false BG
  false UL
  false BX
  0 0 0.8 FG
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false BG
  false UL
  false BX
  0.8 0 0 FG
  fCourier bfs scalefont setfont
  Show
} bind def

/C {
  false BG
  false UL
  false BX
  0.8 0 0 FG
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/l {
  0 0 0 FG
  0.8 0.8 0 true BG
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/L {
  0 0 0 FG
  1 1 0 true BG
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/str {
  false BG
  false UL
  false BX
  0 0.5 0 FG
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  1 0 0 true BG
  false UL
  true BX
  1 1 1 FG
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul 2 div neg 0 rmoveto
    f# setfont
    0.8 0.1 0.1 FG
    c-show
  grestore
} bind def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.542439 def
/cw 4.525463 def

% Dictionary for ISO-8859-1 support
/iso1dict 6 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 86.400000 mul
def
/ph
   503.080648 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 5 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model;) p n
(20) # () N
(21) # () S
(import) K
( java.io.Serializable;) p n
(22) # () S
(import) K
( java.util.HashMap;) p n
(23) # () S
(import) K
( java.util.HashSet;) p n
(24) # () S
(import) K
( java.util.Map;) p n
(25) # () S
(import) K
( java.util.Set;) p n
(26) # () N
(27) # () S
(public) K
( ) p
(class) K
( ) p
(Project) L
( ) p
(implements) K
( Serializable {) p n
(28) # () N
(29) # () S 8 T () S
(private) K
( MetabolicNetworkItf network;) p n
(30) # () S 8 T () S
(private) K
( String name;) p n
(31) # () S 8 T () S
(private) K
( String path;) p n
(32) # () S 8 T () S
(private) K
( Set<String> imagePaths = ) p
(new) K
( HashSet<String>\(\);) p n
(33) # () S 8 T () S
(private) K
( Map<String,String[]> resultsPaths = ) p
(new) K
( HashMap<String,String[]>) p n
0 T (\(\);) N
(34) # () S 8 T () N
(35) # () N
(36) # () S 8 T () S
(public) K
( Project\(String name\) {) p n
(37) # () S 8 T () S 16 T (this.name = name;) N
(38) # () S 8 T () S 16 T (this.network = ) S
(new) K
( MetabolicNetwork\(\);) p n
(39) # () S 8 T (}) N
(40) # () N
(41) # () S 8 T () S
(public) K
( Project\(String name, String path\) {) p n
(42) # () S 8 T () S 16 T (this.name = name;) N
(43) # () S 8 T () S 16 T (this.path = path;) N
(44) # () S 8 T () S 16 T (this.network = ) S
(new) K
( MetabolicNetwork\(\);) p n
(45) # () S 8 T (}) N
(46) # () N
(47) # () S 8 T () S
(public) K
( ) p
(boolean) k
( hasPath\(\) {) p n
(48) # () N
(49) # () S 8 T () S 16 T () S
(return) K
( path != ) p
(null) k
(;) p n
(50) # () S 8 T (}) N
(51) # () N
(52) # () S 8 T () S
(public) K
( ) p
(void) k
( setNetwork\(MetabolicNetworkItf network\) {) p n
(53) # () S 8 T () S 16 T (this.network = network;) N
(54) # () S 8 T (}) N
(55) # () N
(56) # () S 8 T () S
(public) K
( MetabolicNetworkItf getNetwork\(\) {) p n
(57) # () S 8 T () S 16 T () S
(return) K
( network;) p n
(58) # () S 8 T (}) N
(59) # () N
(60) # () S 8 T () S
(public) K
( String getName\(\) {) p n
(61) # () S 8 T () S 16 T () S
(return) K
( name;) p n
(62) # () S 8 T (}) N
(63) # () N
(64) # () S 8 T () S
(public) K
( String getPath\(\) {) p n
(Project.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p n
(66) # () S 8 T () S 16 T () S
(return) K
( path;) p n
(67) # () S 8 T (}) N
(68) # () N
(69) # () S 8 T () S
(public) K
( ) p
(void) k
( setNameAndPath\(String name, String path\) {) p n
(70) # () S 8 T () S 16 T (this.name = name;) N
(71) # () S 8 T () S 16 T (this.path = path;) N
(72) # () S 8 T (}) N
(73) # () N
(74) # () S 8 T () S
(public) K
( ) p
(void) k
( addImagePath\(String path\) {) p n
(75) # () S 8 T () S 16 T (imagePaths.add\(path\);) N
(76) # () S 8 T (}) N
(77) # () S 8 T () N
(78) # () S 8 T () S
(public) K
( ) p
(void) k
( addResultsPath\(String path,String[] command\) {) p n
(79) # () S 8 T () S 16 T (resultsPaths.put\(path,command\);) N
(80) # () S 8 T (}) N
(81) # () S 8 T () N
(82) # () S 8 T () S
(public) K
( ) p
(void) k
( removeResultsPath\(String path\) {) p n
(83) # () S 8 T () S 16 T (resultsPaths.remove\(path\);) N
(84) # () S 8 T (}) N
(85) # () S 8 T () N
(86) # () S 8 T () S
(public) K
( ) p
(void) k
( removeImagePath\(String path\) {) p n
(87) # () S 8 T () S 16 T (imagePaths.remove\(path\);) N
(88) # () S 8 T (}) N
(89) # () N
(90) # () S 8 T () S
(public) K
( Set<String> getImagePaths\(\) {) p n
(91) # () S 8 T () S 16 T () S
(return) K
( imagePaths;) p n
(92) # () S 8 T (}) N
(93) # () S 8 T () N
(94) # () S 8 T () S
(public) K
( Map<String,String[]> getResultsPaths\(\) {) p n
(95) # () S 8 T () S 16 T () S
(return) K
( resultsPaths;) p n
(96) # () S 8 T (}) N
(97) # (}) N
(Project.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/Project.java) (1/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model;) p n
(20) # () N
(21) # () S
(import) K
( java.io.Serializable;) p n
(22) # () S
(import) K
( java.util.ArrayList;) p n
(23) # () S
(import) K
( java.util.Collections;) p n
(24) # () S
(import) K
( java.util.List;) p n
(25) # () S
(import) K
( java.util.Map;) p n
(26) # () N
(27) # () S
(public) K
( ) p
(class) K
( ) p
(MetabolicNetwork) L
( ) p
(implements) K
( MetabolicNetworkItf, Serializable {) p n
(28) # () N
(29) # () S 8 T () S
(private) K
( List<Metabolite> metabolites;) p n
(30) # () S 8 T () S
(private) K
( List<Reaction> reactions;) p n
(31) # () S 8 T () S
(private) K
( List<String> rules;) p n
(32) # () N
(33) # () S 8 T () S
(public) K
( MetabolicNetwork\(\) {) p n
(34) # () S 8 T () S 16 T (metabolites = ) S
(new) K
( ArrayList<Metabolite>\(\);) p n
(35) # () S 8 T () S 16 T (reactions = ) S
(new) K
( ArrayList<Reaction>\(\);) p n
(36) # () S 8 T () S 16 T (rules = ) S
(new) K
( ArrayList<String>\(\);) p n
(37) # () S 8 T (}) N
(38) # () N
(39) # () S 8 T () S
(public) K
( ) p
(void) k
( addReaction\(String name, Map<Metabolite, Double> reactants,) p n
(40) # () S 8 T () S 16 T () S 24 T (Map<Metabolite, Double> products, ) S
(boolean) k
( reversible\) {) p n
(41) # () S 8 T () S 16 T (name = formatName\(name\);) N
(42) # () S 8 T () S 16 T () S
(if) K
( \(!this.hasName\(name\)\) {) p n
(43) # () S 8 T () S 16 T () S 24 T (reactions.add\() S
(new) K
( Reaction\(name, reactants, products, re) p n
0 T (versible\)\);) N
(44) # () S 8 T () S 16 T (}) N
(45) # () S 8 T (}) N
(46) # () N
(47) # () S 8 T () S
(public) K
( ) p
(void) k
( delReaction\(String name\) {) p n
(48) # () S 8 T () S 16 T (name = formatName\(name\);) N
(49) # () S 8 T () S 16 T (Reaction toRemove = ) S
(null) k
(;) p n
(50) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : reactions\) {) p n
(51) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(reac.getName\(\).equals\(name\)\) {) p n
(52) # () S 8 T () S 16 T () S 24 T () S 32 T (toRemove = reac;) N
(53) # () S 8 T () S 16 T () S 24 T (}) N
(54) # () S 8 T () S 16 T (}) N
(55) # () N
(56) # () S 8 T () S 16 T () S
(if) K
( \(toRemove != ) p
(null) k
(\) {) p n
(57) # () S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Reaction ) str
(" + toRemove.getName\(\) + ") p
( delet) str n
0 T (ed) S
("\);) p n
(58) # () S 8 T () S 16 T () S 24 T (reactions.remove\(toRemove\);) N
(59) # () N
(60) # () S 8 T () S 16 T (}) N
(61) # () S 8 T (}) N
(62) # () N
(63) # () S 8 T () S
(public) K
( ) p
(void) k
( delMetabolite\(String name\) {) p n
(MetabolicNetwork.java) (Page 1/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(64) # () p 8 T () S 16 T (name = formatName\(name\);) N
(65) # () S 8 T () S 16 T (Metabolite toRemove = ) S
(null) k
(;) p n
(66) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite met : metabolites\) {) p n
(67) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(met.getName\(\).equals\(name\)\) {) p n
(68) # () S 8 T () S 16 T () S 24 T () S 32 T (toRemove = met;) N
(69) # () S 8 T () S 16 T () S 24 T (}) N
(70) # () S 8 T () S 16 T (}) N
(71) # () N
(72) # () S 8 T () S 16 T () S
(if) K
( \(toRemove != ) p
(null) k
(\) {) p n
(73) # () S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Metabolite ) str
(" + toRemove.getName\(\) + ") p
( de) str n
0 T (leted) S
("\);) p n
(74) # () S 8 T () S 16 T () S 24 T (metabolites.remove\(toRemove\);) N
(75) # () S 8 T () S 16 T (}) N
(76) # () N
(77) # () S 8 T (}) N
(78) # () N
(79) # () S 8 T () S
(public) K
( ) p
(boolean) k
( getReversible\(String name\) {) p n
(80) # () S 8 T () S 16 T (name = formatName\(name\);) N
(81) # () S 8 T () S 16 T () S
(return) K
( getReaction\(name\).isReversible\(\);) p n
(82) # () S 8 T (}) N
(83) # () N
(84) # () S 8 T () S
(public) K
( List<Reaction> getReactions\(\) {) p n
(85) # () N
(86) # () S 8 T () S 16 T () S
(return) K
( Collections.unmodifiableList\(reactions\);) p n
(87) # () N
(88) # () S 8 T (}) N
(89) # () N
(90) # () S 8 T () S
(public) K
( List<Metabolite> getMetabolites\(\) {) p n
(91) # () N
(92) # () S 8 T () S 16 T () S
(return) K
( Collections.unmodifiableList\(metabolites\);) p n
(93) # () N
(94) # () S 8 T (}) N
(95) # () N
(96) # () S 8 T () S
(public) K
( ) p
(void) k
( AddMetabolite\(String name, String description, ) p
(boolean) k
( inter) p n
0 T (nal\) {) N
(97) # () S 8 T () S 16 T (name = formatName\(name\);) N
(98) # () S 8 T () S 16 T () S
(if) K
( \(!this.hasName\(name\)\) {) p n
(99) # () S 8 T () S 16 T () S 24 T (metabolites.add\() S
(new) K
( Metabolite\(name, description, intern) p n
0 T (al\)\);) N
(100) # () S 8 T () S 16 T (}) N
(101) # () S 8 T (}) N
(102) # () N
(103) # () S 8 T () S
(public) K
( ) p
(void) k
( addRule\(String rule\) {) p n
(104) # () S 8 T () S 16 T (rules.add\(rule\);) N
(105) # () S 8 T (}) N
(106) # () N
(107) # () S 8 T () S
(public) K
( ) p
(void) k
( delRule\(String rule\) {) p n
(108) # () S 8 T () S 16 T (rules.remove\(rule\);) N
(109) # () S 8 T (}) N
(110) # () N
(111) # () S 8 T () S
(public) K
( Reaction getReaction\(String name\) {) p n
(112) # () S 8 T () S 16 T (name = formatName\(name\);) N
(113) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : reactions\) {) p n
(114) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(reac.getName\(\).equals\(name\)\) {) p n
(115) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( reac;) p n
(116) # () S 8 T () S 16 T () S 24 T (}) N
(117) # () S 8 T () S 16 T (}) N
(118) # () S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
(119) # () S 8 T (}) N
(120) # () N
(121) # () S 8 T () S
(public) K
( Metabolite getMetabolite\(String name\) {) p n
(122) # () S 8 T () S 16 T (name = formatName\(name\);) N
(123) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite metab : metabolites\) {) p n
(124) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(metab.getName\(\).equals\(name\)\) {) p n
(125) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( metab;) p n
(126) # () S 8 T () S 16 T () S 24 T (}) N
(MetabolicNetwork.java) (Page 2/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/MetabolicNetwork.java) (2/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(127) # () p 8 T () S 16 T (}) N
(128) # () S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
(129) # () S 8 T (}) N
(130) # () N
(131) # () S 8 T () S
(public) K
( ) p
(void) k
( setReactionReversible\(String name, ) p
(boolean) k
( reversible\) {) p n
(132) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : reactions\) {) p n
(133) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(reac.getName\(\) == name\) {) p n
(134) # () S 8 T () S 16 T () S 24 T () S 32 T (reac.setReversible\(reversible\);) N
(135) # () S 8 T () S 16 T () S 24 T (}) N
(136) # () S 8 T () S 16 T (}) N
(137) # () S 8 T (}) N
(138) # () N
(139) # () S 8 T () S
(public) K
( ) p
(void) k
( setReactionName\(String name, String newName\) {) p n
(140) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : reactions\) {) p n
(141) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(reac.getName\(\) == name\) {) p n
(142) # () S 8 T () S 16 T () S 24 T () S 32 T (reac.setName\(name, newName\);) N
(143) # () S 8 T () S 16 T () S 24 T (}) N
(144) # () S 8 T () S 16 T (}) N
(145) # () S 8 T (}) N
(146) # () N
(147) # () S 8 T () S
(public) K
( ) p
(void) k
( setMetaboInternal\(String name, ) p
(boolean) k
( i\) {) p n
(148) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite metab : metabolites\) {) p n
(149) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(metab.getName\(\) == name\) {) p n
(150) # () S 8 T () S 16 T () S 24 T () S 32 T (metab.setInternal\(i\);) N
(151) # () S 8 T () S 16 T () S 24 T (}) N
(152) # () S 8 T () S 16 T (}) N
(153) # () S 8 T (}) N
(154) # () N
(155) # () S 8 T () S
(public) K
( ) p
(void) k
( setMetabolite\(String oldName, String newName, String descrip) p n
0 T (tion\) {) N
(156) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite metab : metabolites\) {) p n
(157) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(metab.getName\(\) == oldName\) {) p n
(158) # () S 8 T () S 16 T () S 24 T () S 32 T (metab.setName\(newName\);) N
(159) # () S 8 T () S 16 T () S 24 T () S 32 T (metab.setDescription\(description\);) N
(160) # () S 8 T () S 16 T () S 24 T (}) N
(161) # () S 8 T () S 16 T (}) N
(162) # () N
(163) # () S 8 T (}) N
(164) # () N
(165) # () S 8 T () S
(public) K
( List<String> getRules\(\) {) p n
(166) # () S 8 T () S 16 T () S
(return) K
( rules;) p n
(167) # () S 8 T (}) N
(168) # () N
(169) # () S 8 T () S
(public) K
( ) p
(void) k
( editRule\(String oldRule, String newRule\) {) p n
(170) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < rules.size\(\); i++\) {) p n
(171) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(rules.get\(i\) == oldRule\) {) p n
(172) # () S 8 T () S 16 T () S 24 T () S 32 T (rules.set\(i, newRule\);) N
(173) # () S 8 T () S 16 T () S 24 T (}) N
(174) # () S 8 T () S 16 T (}) N
(175) # () N
(176) # () S 8 T (}) N
(177) # () N
(178) # () S 8 T () S
(public) K
( ) p
(boolean) k
( hasName\(String name\) {) p n
(179) # () S 8 T () S 16 T (name = formatName\(name\);) N
(180) # () S 8 T () S 16 T () S
(for) K
( \(Reaction r : getReactions\(\)\) {) p n
(181) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(r.getName\(\).toLowerCase\(\).equals\(name.toLowerCase\(\)\)) p n
0 T (\) {) N
(182) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(true) k
(;) p n
(183) # () S 8 T () S 16 T () S 24 T (}) N
(184) # () S 8 T () S 16 T (}) N
(185) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite m : getMetabolites\(\)\) {) p n
(186) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(m.getName\(\).toLowerCase\(\).equals\(name.toLowerCase\(\)\)) p n
0 T (\) {) N
(187) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(true) k
(;) p n
(188) # () S 8 T () S 16 T () S 24 T (}) N
(189) # () S 8 T () S 16 T (}) N
(MetabolicNetwork.java) (Page 3/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(190) # () p 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
(191) # () S 8 T (}) N
(192) # () N
(193) # () S 8 T () S
(public) K
( String formatName\(String name\) {) p n
(194) # () S 8 T () S 16 T (name = name.replaceAll\(") S
([^a-zA-Z 0-9]+) str
(", ") p
(_) str
("\);) p n
(195) # () S 8 T () S 16 T (name = name.replaceAll\(") S
( ) str
(", ") p
(_) str
("\);) p n
(196) # () S 8 T () S 16 T () S
(if) K
( \(Character.isDigit\(name.charAt\(0\)\)\) {) p n
(197) # () S 8 T () S 16 T () S 24 T (name = ") S
(_) str
(" + name;) p n
(198) # () S 8 T () S 16 T (}) N
(199) # () S 8 T () S 16 T () S
(return) K
( name;) p n
(200) # () S 8 T (}) N
(201) # () N
(202) # (}) N
(MetabolicNetwork.java) (Page 4/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/MetabolicNetwork.java) (3/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model;) p n
(20) # () N
(21) # () S
(import) K
( java.util.List;) p n
(22) # () S
(import) K
( java.util.Map;) p n
(23) # () N
(24) # () S
(public) K
( ) p
(interface) K
( ) p
(MetabolicNetworkItf) L
( {) p n
(25) # () S 8 T () S
(public) K
( ) p
(void) k
( AddMetabolite\(String name, String description, ) p
(boolean) k
( inter) p n
0 T (nal\);) N
(26) # () N
(27) # () S 8 T () S
(public) K
( ) p
(void) k
( addReaction\(String name, Map<Metabolite, Double> reactants,) p n
(28) # () S 8 T () S 16 T () S 24 T (Map<Metabolite, Double> products, ) S
(boolean) k
( reversible\);) p n
(29) # () N
(30) # () S 8 T () S
(public) K
( ) p
(void) k
( delReaction\(String name\);) p n
(31) # () N
(32) # () S 8 T () S
(public) K
( List<Reaction> getReactions\(\);) p n
(33) # () N
(34) # () S 8 T () S
(public) K
( List<Metabolite> getMetabolites\(\);) p n
(35) # () N
(36) # () S 8 T () S
(public) K
( Metabolite getMetabolite\(String name\);) p n
(37) # () N
(38) # () S 8 T () S
(public) K
( Reaction getReaction\(String name\);) p n
(39) # () N
(40) # () S 8 T () S
(public) K
( ) p
(void) k
( setReactionReversible\(String name, ) p
(boolean) k
( r\);) p n
(41) # () N
(42) # () S 8 T () S
(public) K
( ) p
(void) k
( setMetaboInternal\(String name, ) p
(boolean) k
( i\);) p n
(43) # () N
(44) # () S 8 T () S
(public) K
( ) p
(void) k
( delMetabolite\(String name\);) p n
(45) # () N
(46) # () S 8 T () S
(public) K
( ) p
(void) k
( setMetabolite\(String oldName, String newName, String descrip) p n
0 T (tion\);) N
(47) # () N
(48) # () S 8 T () S
(public) K
( ) p
(void) k
( setReactionName\(String name, String newName\);) p n
(49) # () N
(50) # () S 8 T () S
(public) K
( ) p
(void) k
( addRule\(String rule\);) p n
(51) # () N
(52) # () S 8 T () S
(public) K
( ) p
(void) k
( delRule\(String rule\);) p n
(53) # () N
(54) # () S 8 T () S
(public) K
( List<String> getRules\(\);) p n
(55) # () N
(56) # () S 8 T () S
(public) K
( ) p
(void) k
( editRule\(String oldRule, String newRule\);) p n
(57) # () N
(58) # () S 8 T () S
(public) K
( ) p
(boolean) k
( hasName\(String name\);) p n
(59) # () N
(60) # () S 8 T () S
(public) K
( String formatName\(String name\);) p n
(61) # (}) N
(MetabolicNetworkItf.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/MetabolicNetworkItf.java) (4/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model;) p n
(20) # () N
(21) # () S
(import) K
( java.io.Serializable;) p n
(22) # () S
(import) K
( java.text.DecimalFormat;) p n
(23) # () S
(import) K
( java.util.ArrayList;) p n
(24) # () S
(import) K
( java.util.List;) p n
(25) # () S
(import) K
( java.util.Map;) p n
(26) # () S
(import) K
( java.util.Map.Entry;) p n
(27) # () N
(28) # () S
(public) K
( ) p
(class) K
( ) p
(Reaction) L
( ) p
(implements) K
( Serializable {) p n
(29) # () S 8 T () S
(private) K
( String name;) p n
(30) # () S 8 T () S
(private) K
( Map<Metabolite, Double> reactants;) p
(// metabolite +  stoechimoetri) c n
0 T (e) N
(31) # () S
() p 8 T () S
(private) K
( Map<Metabolite, Double> products;) p n
(32) # () S 8 T () S
(private) K
( ) p
(boolean) k
( reversible;) p n
(33) # () N
(34) # () S 8 T () S
(public) K
( Reaction\(String name, Map<Metabolite, Double> reactants,) p n
(35) # () S 8 T () S 16 T () S 24 T (Map<Metabolite, Double> products, ) S
(boolean) k
( reversible\) {) p n
(36) # () N
(37) # () S 8 T () S 16 T (this.name = name;) N
(38) # () S 8 T () S 16 T (this.reactants = reactants;) N
(39) # () S 8 T () S 16 T (this.products = products;) N
(40) # () S 8 T () S 16 T (this.reversible = reversible;) N
(41) # () N
(42) # () S 8 T (}) N
(43) # () N
(44) # () S 8 T () S
(public) K
( String getName\(\) {) p n
(45) # () S 8 T () S 16 T () S
(return) K
( name;) p n
(46) # () S 8 T (}) N
(47) # () N
(48) # () S 8 T () S
(public) K
( ) p
(void) k
( setReversible\() p
(boolean) k
( r\) {) p n
(49) # () S 8 T () S 16 T (reversible = r;) N
(50) # () S 8 T (}) N
(51) # () N
(52) # () S 8 T () S
(public) K
( ) p
(boolean) k
( isReversible\(\) {) p n
(53) # () S 8 T () S 16 T () S
(return) K
( reversible;) p n
(54) # () S 8 T (}) N
(55) # () N
(56) # () S 8 T () S
(public) K
( List<Object[]> getObjetReactantsTable\(\) {) p n
(57) # () S 8 T () S 16 T (DecimalFormat df = ) S
(new) K
( DecimalFormat\(") p
(0.###) str
("\);) p n
(58) # () S 8 T () S 16 T (List<Object[]> listeObj = ) S
(new) K
( ArrayList<Object[]>\(\);) p n
(59) # () S 8 T () S 16 T () S
(for) K
( \(Entry<Metabolite, Double> entry : reactants.entrySet\(\)\) {) p n
(60) # () S 8 T () S 16 T () S 24 T (listeObj.add\() S
(new) K
( Object[] { entry.getKey\(\),) p n
(61) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (df.format\(entry.getValue\(\)\).toString\(\).r) N
0 T (eplace\(") S
(,) str
(", ") p
(.) str
("\) }\);) p n
(62) # () S 8 T () S 16 T (}) N
(63) # () S 8 T () S 16 T () S
(return) K
( listeObj;) p n
(Reaction.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(64) # () p 8 T (}) N
(65) # () N
(66) # () S 8 T () S
(public) K
( List<Object[]> getProductsTable\(\) {) p n
(67) # () S 8 T () S 16 T (DecimalFormat df = ) S
(new) K
( DecimalFormat\(") p
(0.###) str
("\);) p n
(68) # () S 8 T () S 16 T (List<Object[]> listeObj = ) S
(new) K
( ArrayList<Object[]>\(\);) p n
(69) # () S 8 T () S 16 T () S
(for) K
( \(Entry<Metabolite, Double> entry : products.entrySet\(\)\) {) p n
(70) # () S 8 T () S 16 T () S 24 T (listeObj.add\() S
(new) K
( Object[] { entry.getKey\(\),) p n
(71) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (df.format\(entry.getValue\(\)\).toString\(\).r) N
0 T (eplace\(") S
(,) str
(", ") p
(.) str
("\) }\);) p n
(72) # () S 8 T () S 16 T (}) N
(73) # () S 8 T () S 16 T () S
(return) K
( listeObj;) p n
(74) # () S 8 T (}) N
(75) # () N
(76) # () S 8 T () S
(public) K
( Map<Metabolite, Double> getReactants\(\) {) p n
(77) # () S 8 T () S 16 T () S
(return) K
( reactants;) p n
(78) # () S 8 T (}) N
(79) # () N
(80) # () S 8 T () S
(public) K
( Map<Metabolite, Double> getProducts\(\) {) p n
(81) # () S 8 T () S 16 T () S
(return) K
( products;) p n
(82) # () S 8 T (}) N
(83) # () N
(84) # () S 8 T () S
(public) K
( ) p
(void) k
( addProduct\(Metabolite m, Double d\) {) p n
(85) # () S 8 T () S 16 T (products.put\(m, d\);) N
(86) # () S 8 T (}) N
(87) # () N
(88) # () S 8 T () S
(public) K
( ) p
(void) k
( addReactant\(Metabolite m, Double d\) {) p n
(89) # () S 8 T () S 16 T (reactants.put\(m, d\);) N
(90) # () S 8 T (}) N
(91) # () N
(92) # () S 8 T () S
(public) K
( ) p
(void) k
( delMetabolites\(\) {) p n
(93) # () S 8 T () S 16 T (reactants.clear\(\);) N
(94) # () S 8 T () S 16 T (products.clear\(\);) N
(95) # () S 8 T (}) N
(96) # () N
(97) # () S 8 T () S
(public) K
( String getStringReaction\(\) {) p n
(98) # () S 8 T () N
(99) # () S 8 T () S 16 T (String stringReaction = "";) N
(100) # () S 8 T () S 16 T () S
(// display only int when float number) c n
(101) # () S
() p 8 T () S 16 T (DecimalFormat df = ) S
(new) K
( DecimalFormat\(") p
(0.###) str
("\);) p n
(102) # () N
(103) # () S 8 T () S 16 T () S
(int) k
( indice = 0;) p n
(104) # () S 8 T () S 16 T () S
(for) K
( \(Entry<Metabolite, Double> entry : reactants.entrySet\(\)\) {) p n
(105) # () S 8 T () S 16 T () S 24 T (indice++;) N
(106) # () S 8 T () S 16 T () S 24 T (stringReaction += df.format\(entry.getValue\(\)\) + ") S
( ) str
(";) p n
(107) # () S 8 T () S 16 T () S 24 T (stringReaction += entry.getKey\(\).getName\(\) + ") S
( ) str
(";) p n
(108) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(indice != reactants.size\(\)\)) p n
(109) # () S 8 T () S 16 T () S 24 T () S 32 T (stringReaction += ") S
(+ ) str
(";) p n
(110) # () S 8 T () S 16 T (}) N
(111) # () N
(112) # () S 8 T () S 16 T (stringReaction += ") S
( = ) str
(";) p n
(113) # () N
(114) # () S 8 T () S 16 T (indice = 0;) N
(115) # () S 8 T () S 16 T () S
(for) K
( \(Entry<Metabolite, Double> entry : products.entrySet\(\)\) {) p n
(116) # () S 8 T () S 16 T () S 24 T (indice++;) N
(117) # () S 8 T () S 16 T () S 24 T (stringReaction += df.format\(entry.getValue\(\)\) + ") S
( ) str
(";) p n
(118) # () S 8 T () S 16 T () S 24 T (stringReaction += entry.getKey\(\).getName\(\) + ") S
( ) str
(";) p n
(119) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(indice != products.size\(\)\)) p n
(120) # () S 8 T () S 16 T () S 24 T () S 32 T (stringReaction += ") S
(+ ) str
(";) p n
(121) # () S 8 T () S 16 T (}) N
(122) # () S 8 T () S 16 T () S
(return) K
( stringReaction;) p n
(123) # () S 8 T (}) N
(124) # () N
(125) # () S 8 T () S
(public) K
( List<Metabolite> getListMetabolite\(\) {) p n
(126) # () S 8 T () S 16 T (List<Metabolite> list = ) S
(new) K
( ArrayList<Metabolite>\(\);) p n
(127) # () N
(128) # () S 8 T () S 16 T () S
(for) K
( \(Entry<Metabolite, Double> entry : reactants.entrySet\(\)\) {) p n
(Reaction.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/Reaction.java) (5/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(129) # () p 8 T () S 16 T () S 24 T (list.add\(entry.getKey\(\)\);) N
(130) # () S 8 T () S 16 T (}) N
(131) # () S 8 T () S 16 T () S
(for) K
( \(Entry<Metabolite, Double> entry : products.entrySet\(\)\) {) p n
(132) # () S 8 T () S 16 T () S 24 T (list.add\(entry.getKey\(\)\);) N
(133) # () S 8 T () S 16 T (}) N
(134) # () N
(135) # () S 8 T () S 16 T () S
(return) K
( list;) p n
(136) # () S 8 T (}) N
(137) # () N
(138) # () S 8 T () S
(public) K
( List<Metabolite> getListReactants\(\) {) p n
(139) # () S 8 T () S 16 T (List<Metabolite> list = ) S
(new) K
( ArrayList<Metabolite>\(\);) p n
(140) # () N
(141) # () S 8 T () S 16 T () S
(for) K
( \(Entry<Metabolite, Double> entry : reactants.entrySet\(\)\) {) p n
(142) # () S 8 T () S 16 T () S 24 T (list.add\(entry.getKey\(\)\);) N
(143) # () S 8 T () S 16 T (}) N
(144) # () N
(145) # () S 8 T () S 16 T () S
(return) K
( list;) p n
(146) # () S 8 T (}) N
(147) # () N
(148) # () S 8 T () S
(public) K
( List<Metabolite> getListProducts\(\) {) p n
(149) # () S 8 T () S 16 T (List<Metabolite> list = ) S
(new) K
( ArrayList<Metabolite>\(\);) p n
(150) # () N
(151) # () S 8 T () S 16 T () S
(for) K
( \(Entry<Metabolite, Double> entry : products.entrySet\(\)\) {) p n
(152) # () S 8 T () S 16 T () S 24 T (list.add\(entry.getKey\(\)\);) N
(153) # () S 8 T () S 16 T (}) N
(154) # () N
(155) # () S 8 T () S 16 T () S
(return) K
( list;) p n
(156) # () S 8 T (}) N
(157) # () N
(158) # () S 8 T () S
(public) K
( ) p
(void) k
( setName\(String name, String newName\) {) p n
(159) # () S 8 T () S 16 T (this.name = newName;) N
(160) # () N
(161) # () S 8 T (}) N
(162) # () S 8 T () N
(163) # () S 8 T () S
(public) K
( String toString\(\){) p n
(164) # () S 8 T () S 16 T () S
(return) K
( this.getName\(\);) p n
(165) # () S 8 T (}) N
(166) # () S 8 T () N
(167) # () N
(168) # (}) N
(Reaction.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/Reaction.java) (6/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model;) p n
(20) # () N
(21) # () S
(import) K
( java.io.Serializable;) p n
(22) # () N
(23) # () S
(public) K
( ) p
(class) K
( ) p
(Metabolite) L
( ) p
(implements) K
( Serializable {) p n
(24) # () S 8 T () S
(private) K
( String name;) p n
(25) # () S 8 T () S
(private) K
( String description;) p n
(26) # () S 8 T () S
(private) K
( ) p
(boolean) k
( internal;) p n
(27) # () N
(28) # () S 8 T () S
(public) K
( Metabolite\(String name, String description, ) p
(boolean) k
( internal\) {) p n
(29) # () S 8 T () S 16 T (this.description = description;) N
(30) # () S 8 T () S 16 T (this.name = name;) N
(31) # () S 8 T () S 16 T (this.internal = internal;) N
(32) # () S 8 T (}) N
(33) # () N
(34) # () S 8 T () S
(public) K
( String getName\(\) {) p n
(35) # () S 8 T () S 16 T () S
(return) K
( name;) p n
(36) # () S 8 T (}) N
(37) # () N
(38) # () S 8 T () S
(public) K
( String getDescription\(\) {) p n
(39) # () S 8 T () S 16 T () S
(return) K
( description;) p n
(40) # () S 8 T (}) N
(41) # () N
(42) # () S 8 T () S
(public) K
( ) p
(boolean) k
( isInternal\(\) {) p n
(43) # () S 8 T () S 16 T () S
(return) K
( internal;) p n
(44) # () S 8 T (}) N
(45) # () N
(46) # () S 8 T () S
(public) K
( ) p
(boolean) k
( equals\(Object o\) {) p n
(47) # () S 8 T () S 16 T () S
(return) K
( name.equals\(\(\(Metabolite\) o\).getName\(\)\);) p n
(48) # () S 8 T (}) N
(49) # () N
(50) # () S 8 T () S
(public) K
( ) p
(void) k
( setInternal\() p
(boolean) k
( i\) {) p n
(51) # () S 8 T () S 16 T (this.internal = i;) N
(52) # () N
(53) # () S 8 T (}) N
(54) # () N
(55) # () S 8 T () S
(public) K
( String toString\(\) {) p n
(56) # () S 8 T () S 16 T () S
(return) K
( name;) p n
(57) # () S 8 T (}) N
(58) # () N
(59) # () S 8 T () S
(public) K
( ) p
(void) k
( setName\(String newName\) {) p n
(60) # () S 8 T () S 16 T (this.name = newName;) N
(61) # () N
(62) # () S 8 T (}) N
(63) # () N
(64) # () S 8 T () S
(public) K
( ) p
(void) k
( setDescription\(String description\) {) p n
(65) # () S 8 T () S 16 T (this.description = description;) N
(Metabolite.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T (}) N
(67) # () N
(68) # (}) N
(Metabolite.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/Metabolite.java) (7/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model;) p n
(20) # () N
(21) # () S
(import) K
( java.util.ArrayList;) p n
(22) # () S
(import) K
( java.util.HashMap;) p n
(23) # () S
(import) K
( java.util.List;) p n
(24) # () S
(import) K
( java.util.Map;) p n
(25) # () N
(26) # () S
(public) K
( ) p
(class) K
( ) p
(ElementaryMode) L
( {) p n
(27) # () N
(28) # () S 8 T () S
(private) K
( Map<Reaction,Double> content;) p n
(29) # () S 8 T () N
(30) # () S 8 T () N
(31) # () S 8 T () N
(32) # () S 8 T () S
(public) K
( ElementaryMode\(\){) p n
(33) # () S 8 T () S 16 T () N
(34) # () S 8 T () S 16 T (content=) S
(new) K
( HashMap<Reaction,Double>\(\);) p n
(35) # () S 8 T () S 16 T () N
(36) # () S 8 T (}) N
(37) # () S 8 T () N
(38) # () S 8 T () S
(public) K
( ) p
(void) k
( addReaction\(Reaction reac, ) p
(double) k
( stoe\){) p n
(39) # () S 8 T () S 16 T () N
(40) # () S 8 T () S 16 T (content.put\(reac, stoe\);) N
(41) # () S 8 T (}) N
(42) # () S 8 T () N
(43) # () S 8 T () S
(public) K
( Map<Reaction,Double> getContent\(\){) p n
(44) # () S 8 T () S 16 T () N
(45) # () S 8 T () S 16 T () S
(return) K
( content;) p n
(46) # () S 8 T () S 16 T () N
(47) # () S 8 T (}) N
(48) # () N
(49) # () S 8 T () S
(public) K
( List<Metabolite> getListMetabolite\(\) {) p n
(50) # () S 8 T () S 16 T () N
(51) # () S 8 T () S 16 T (List<Metabolite> metabs = ) S
(new) K
( ArrayList<Metabolite>\(\);) p n
(52) # () S 8 T () S 16 T () N
(53) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : content.keySet\(\)\) {) p n
(54) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Metabolite m : reac.getListMetabolite\(\)\){) p n
(55) # () S 8 T () S 16 T () S 24 T () S 32 T (metabs.add\(m\);) N
(56) # () S 8 T () S 16 T () S 24 T (}) N
(57) # () S 8 T () S 16 T (}) N
(58) # () S 8 T () S 16 T () N
(59) # () S 8 T () S 16 T () S
(return) K
( metabs;) p n
(60) # () S 8 T (}) N
(61) # () N
(62) # (}) N
(ElementaryMode.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/ElementaryMode.java) (8/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model.data;) p n
(20) # () N
(21) # () S
(import) K
( java.io.File;) p n
(22) # () S
(import) K
( java.io.FileNotFoundException;) p n
(23) # () S
(import) K
( java.io.IOException;) p n
(24) # () N
(25) # () S
(import) K
( javax.xml.stream.XMLStreamException;) p n
(26) # () N
(27) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(28) # () N
(29) # () S
(import) K
( org.sbml.jsbml.SBMLException;) p n
(30) # () N
(31) # () N
(32) # () S
(public) K
( ) p
(interface) K
( ) p
(Format) L
( {) p n
(33) # () N
(34) # () S 8 T () S
(public) K
( MetabolicNetworkItf load\(File[] file\) ) p
(throws) K
( FileNotFoundExceptio) p n
0 T (n,) N
(35) # () S 8 T () S 16 T () S 24 T (IOException, ClassNotFoundException;) N
(36) # () N
(37) # () S 8 T () S
(public) K
( ) p
(void) k
( save\(File file, MetabolicNetworkItf network, ) p
(boolean) k
( message) p n
0 T (\)) N
(38) # () S 8 T () S 16 T () S 24 T () S
(throws) K
( IOException, SBMLException, XMLStreamException;) p n
(39) # () N
(40) # (}) N
(Format.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/Format.java) (9/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model.data;) p n
(20) # () N
(21) # () S
(import) K
( java.io.File;) p n
(22) # () S
(import) K
( java.io.IOException;) p n
(23) # () S
(import) K
( java.util.HashMap;) p n
(24) # () S
(import) K
( java.util.Map;) p n
(25) # () S
(import) K
( java.util.Map.Entry;) p n
(26) # () N
(27) # () S
(import) K
( javax.swing.JOptionPane;) p n
(28) # () S
(import) K
( javax.xml.stream.XMLStreamException;) p n
(29) # () N
(30) # () S
(import) K
( model.MetabolicNetwork;) p n
(31) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(32) # () S
(import) K
( model.Metabolite;) p n
(33) # () N
(34) # () S
(import) K
( org.sbml.jsbml.Compartment;) p n
(35) # () S
(import) K
( org.sbml.jsbml.Model;) p n
(36) # () S
(import) K
( org.sbml.jsbml.Reaction;) p n
(37) # () S
(import) K
( org.sbml.jsbml.SBMLDocument;) p n
(38) # () S
(import) K
( org.sbml.jsbml.SBMLException;) p n
(39) # () S
(import) K
( org.sbml.jsbml.SBMLReader;) p n
(40) # () S
(import) K
( org.sbml.jsbml.SBMLWriter;) p n
(41) # () S
(import) K
( org.sbml.jsbml.Species;) p n
(42) # () S
(import) K
( org.sbml.jsbml.SpeciesReference;) p n
(43) # () N
(44) # () N
(45) # () S
(public) K
( ) p
(class) K
( ) p
(SBMLFormat) L
( ) p
(implements) K
( Format {) p n
(46) # () N
(47) # () S 8 T () S
(public) K
( MetabolicNetworkItf load\(File[] file\) {) p n
(48) # () N
(49) # () S 8 T () S 16 T (MetabolicNetworkItf network = ) S
(new) K
( MetabolicNetwork\(\);) p n
(50) # () N
(51) # () S 8 T () S 16 T (System.out.println\(") S
(loading SBML file : ) str
(" + file[0].getAbsolutePath\(\)\)) p n
0 T (;) N
(52) # () N
(53) # () S 8 T () S 16 T (SBMLDocument document = ) S
(null) k
(;) p n
(54) # () S 8 T () S 16 T () S
(try) K
( {) p n
(55) # () S 8 T () S 16 T () S 24 T (document = SBMLReader.read\(file[0]\);) N
(56) # () S 8 T () S 16 T (} ) S
(catch) K
( \(Exception e\) {) p n
(57) # () S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Could not load file) str
("\);) p n
(58) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Could not load the file ) str
(") p n
(59) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ file[0].getName\(\), ") S
(Loading error) str
(",) p n
(60) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(61) # () N
(62) # () S 8 T () S 16 T (}) N
(63) # () N
(64) # () S 8 T () S 16 T () S
(// If the file was parsed successfully.) c n
(SBMLFormat.java) (Page 1/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T () S
(if) K
( \(document != ) p
(null) k
(\) {) p n
(66) # () N
(67) # () S 8 T () S 16 T () S 24 T (Model m = document.getModel\(\);) N
(68) # () N
(69) # () S 8 T () S 16 T () S 24 T () S
(// First collect the metabolites) c n
(70) # () S
() p 8 T () S 16 T () S 24 T () S
(for) K
( \(Species s : m.getListOfSpecies\(\)\) {) p n
(71) # () N
(72) # () S 8 T () S 16 T () S 24 T () S 32 T (network.AddMetabolite\(s.getId\(\), s.toString\(\),) N
(73) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (!s.getBoundaryCondition\(\)\);) N
(74) # () N
(75) # () S 8 T () S 16 T () S 24 T (}) N
(76) # () N
(77) # () S 8 T () S 16 T () S 24 T () S
(// then create the reactions) c n
(78) # () S
() p 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction r : m.getListOfReactions\(\)\) {) p n
(79) # () N
(80) # () S 8 T () S 16 T () S 24 T () S 32 T (Map<Metabolite, Double> reactants = ) S
(new) K
( HashMap<) p n
0 T (Metabolite, Double>\(\);) N
(81) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(SpeciesReference sr : r.getListOfReactants\() p n
0 T (\)\) {) N
(82) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// we look for each reactants in the mea) c n
0 T (tbolites list) N
(83) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Metabolite metab = network.getMetabolite) N
0 T (\(sr.getSpecies\(\)\);) N
(84) # () N
(85) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (reactants.put\(metab, sr.getStoichiometry) N
0 T (\(\)\);) N
(86) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(87) # () N
(88) # () S 8 T () S 16 T () S 24 T () S 32 T (Map<Metabolite, Double> products = ) S
(new) K
( HashMap<M) p n
0 T (etabolite, Double>\(\);) N
(89) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(SpeciesReference sr : r.getListOfProducts\(\)) p n
0 T (\) {) N
(90) # () N
(91) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Metabolite metab = network.getMetabolite) N
0 T (\(sr.getSpecies\(\)\);) N
(92) # () N
(93) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (products.put\(metab, sr.getStoichiometry\() N
0 T (\)\);) N
(94) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(95) # () N
(96) # () S 8 T () S 16 T () S 24 T () S 32 T (network.addReaction\(r.getId\(\), reactants, produc) N
0 T (ts,) N
(97) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (r.isReversible\(\)\);) N
(98) # () N
(99) # () S 8 T () S 16 T () S 24 T (}) N
(100) # () N
(101) # () S 8 T () S 16 T (}) N
(102) # () S 8 T () S 16 T () S
(// if the file couldn't be parsed successfully) c n
(103) # () S
() p 8 T () S 16 T () S
(else) K
( {) p n
(104) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(null) k
(;) p n
(105) # () S 8 T () S 16 T (}) N
(106) # () S 8 T () S 16 T () S
(return) K
( network;) p n
(107) # () S 8 T (}) N
(108) # () N
(109) # () S 8 T () S
(public) K
( ) p
(void) k
( save\(File file, MetabolicNetworkItf network, ) p
(boolean) k
( message) p n
0 T (\)) N
(110) # () S 8 T () S 16 T () S 24 T () S
(throws) K
( IOException, SBMLException, XMLStreamException {) p n
(111) # () N
(112) # () S 8 T () S 16 T () S
(// Create a new SBMLDocument object, using SBML Level 2 Version ) c n
0 T (4.) N
(113) # () S
() p 8 T () S 16 T (SBMLDocument doc = ) S
(new) K
( SBMLDocument\(2, 1\);) p n
(114) # () S 8 T () S 16 T (Model model = doc.createModel\(") S
(model) str
("\);) p n
(115) # () N
(116) # () S 8 T () S 16 T (Compartment internal = ) S
(new) K
( Compartment\(") p
(internal) str
("\);) p n
(117) # () S 8 T () S 16 T (Compartment external = ) S
(new) K
( Compartment\(") p
(external) str
("\);) p n
(118) # () N
(SBMLFormat.java) (Page 2/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/SBMLFormat.java) (10/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(119) # () p 8 T () S 16 T (model.addCompartment\() S
(new) K
( Compartment\(internal\)\);) p n
(120) # () S 8 T () S 16 T (model.addCompartment\() S
(new) K
( Compartment\(external\)\);) p n
(121) # () N
(122) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite m : network.getMetabolites\(\)\) {) p n
(123) # () N
(124) # () S 8 T () S 16 T () S 24 T (Species s = ) S
(new) K
( Species\(m.getName\(\)\);) p n
(125) # () S 8 T () S 16 T () S 24 T (s.setName\(m.getDescription\(\)\);) N
(126) # () S 8 T () S 16 T () S 24 T (s.setBoundaryCondition\(!m.isInternal\(\)\);) N
(127) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(m.isInternal\(\)\) {) p n
(128) # () S 8 T () S 16 T () S 24 T () S 32 T (s.setCompartment\(internal\);) N
(129) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(130) # () S 8 T () S 16 T () S 24 T () S 32 T (s.setCompartment\(external\);) N
(131) # () S 8 T () S 16 T () S 24 T (}) N
(132) # () N
(133) # () S 8 T () S 16 T () S 24 T (model.addSpecies\(s\);) N
(134) # () N
(135) # () S 8 T () S 16 T (}) N
(136) # () N
(137) # () S 8 T () S 16 T () S
(for) K
( \(model.Reaction r : network.getReactions\(\)\) {) p n
(138) # () S 8 T () S 16 T () S 24 T (org.sbml.jsbml.Reaction jr = ) S
(new) K
( org.sbml.jsbml.Reaction) p n
0 T (\() N
(139) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (r.getName\(\)\);) N
(140) # () N
(141) # () S 8 T () S 16 T () S 24 T (jr.setReversible\(r.isReversible\(\)\);) N
(142) # () N
(143) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Entry<Metabolite, Double> entry : r.getReactants\(\).) p n
0 T (entrySet\(\)\) {) N
(144) # () N
(145) # () S 8 T () S 16 T () S 24 T () S 32 T (Species s = model.getSpecies\(entry.getKey\(\).getN) N
0 T (ame\(\)\);) N
(146) # () N
(147) # () S 8 T () S 16 T () S 24 T () S 32 T (SpeciesReference sr = jr.createReactant\(s\);) N
(148) # () S 8 T () S 16 T () S 24 T () S 32 T (sr.setStoichiometry\(entry.getValue\(\)\);) N
(149) # () N
(150) # () S 8 T () S 16 T () S 24 T (}) N
(151) # () N
(152) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Entry<Metabolite, Double> entry : r.getProducts\(\).e) p n
0 T (ntrySet\(\)\) {) N
(153) # () N
(154) # () S 8 T () S 16 T () S 24 T () S 32 T (Species s = model.getSpecies\(entry.getKey\(\).getN) N
0 T (ame\(\)\);) N
(155) # () N
(156) # () S 8 T () S 16 T () S 24 T () S 32 T (SpeciesReference sr = jr.createProduct\(s\);) N
(157) # () S 8 T () S 16 T () S 24 T () S 32 T (sr.setStoichiometry\(entry.getValue\(\)\);) N
(158) # () N
(159) # () S 8 T () S 16 T () S 24 T (}) N
(160) # () N
(161) # () S 8 T () S 16 T () S 24 T (model.addReaction\(jr\);) N
(162) # () S 8 T () S 16 T (}) N
(163) # () N
(164) # () S 8 T () S 16 T () S
(// Write the SBML document to a file.) c n
(165) # () N
(166) # () S
() p 8 T () S 16 T (String outputPath = file.getAbsolutePath\(\);) N
(167) # () S 8 T () S 16 T (String outputName = file.getName\(\);) N
(168) # () N
(169) # () S 8 T () S 16 T () S
(if) K
( \(!outputPath.endsWith\(") p
(.xml) str
("\)\) {) p n
(170) # () S 8 T () S 16 T () S 24 T (outputPath += ") S
(.xml) str
(";) p n
(171) # () S 8 T () S 16 T () S 24 T (outputName += ") S
(.xml) str
(";) p n
(172) # () S 8 T () S 16 T (}) N
(173) # () N
(174) # () S 8 T () S 16 T (SBMLWriter.write\(doc, outputPath, ") S
(JSBMLexample) str
(", ") p
(1.0) str
("\);) p n
(175) # () N
(176) # () S 8 T () S 16 T (System.out.println\(") S
(saving a SBML file : ) str
(" + outputPath\);) p n
(177) # () S 8 T () S 16 T () S
(if) K
( \(message\) {) p n
(178) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Successfully saved SBML f) str n
0 T (ile ) S
(") p n
(SBMLFormat.java) (Page 3/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(179) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ outputName + ") S
( !) str
(", ") p
(Succes) str
(",) p n
(180) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.INFORMATION_MESSAGE\);) N
(181) # () S 8 T () S 16 T (}) N
(182) # () N
(183) # () S 8 T (}) N
(184) # (}) N
(SBMLFormat.java) (Page 4/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/SBMLFormat.java) (11/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model.data;) p n
(20) # () N
(21) # () S
(import) K
( java.io.BufferedReader;) p n
(22) # () S
(import) K
( java.io.File;) p n
(23) # () S
(import) K
( java.io.FileReader;) p n
(24) # () S
(import) K
( java.io.FileWriter;) p n
(25) # () S
(import) K
( java.io.IOException;) p n
(26) # () S
(import) K
( java.util.ArrayList;) p n
(27) # () S
(import) K
( java.util.HashMap;) p n
(28) # () S
(import) K
( java.util.HashSet;) p n
(29) # () S
(import) K
( java.util.Set;) p n
(30) # () S
(import) K
( java.util.StringTokenizer;) p n
(31) # () N
(32) # () S
(import) K
( javax.swing.JOptionPane;) p n
(33) # () N
(34) # () S
(import) K
( model.MetabolicNetwork;) p n
(35) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(36) # () S
(import) K
( model.Metabolite;) p n
(37) # () S
(import) K
( model.Reaction;) p n
(38) # () N
(39) # () S
(public) K
( ) p
(class) K
( ) p
(MetatoolFormat) L
( ) p
(implements) K
( Format {) p n
(40) # () S 8 T () S
(public) K
( MetabolicNetworkItf load\(File[] file\) {) p n
(41) # () N
(42) # () S 8 T () S 16 T (System.out.println\(") S
(loading Metatool file : ) str
(") p n
(43) # () S 8 T () S 16 T () S 24 T () S 32 T (+ file[0].getAbsolutePath\(\)\);) N
(44) # () S 8 T () S 16 T () N
(45) # () S 8 T () S 16 T () N
(46) # () S 8 T () S 16 T (MetabolicNetwork network = ) S
(new) K
( MetabolicNetwork\(\);) p n
(47) # () S 8 T () S 16 T () N
(48) # () S 8 T () S 16 T () N
(49) # () S 8 T () S 16 T (ArrayList<String> reactionEquations = ) S
(new) K
( ArrayList<String>\(\);) p n
(50) # () S 8 T () S 16 T (String enzRevData = "", enzIrevData = "", metIntData = "",) N
(51) # () S 8 T () S 16 T () S 24 T () S 32 T (metExtData = "";) N
(52) # () N
(53) # () S 8 T () S 16 T () S
(try) K
( {) p n
(54) # () S 8 T () S 16 T (BufferedReader in = ) S
(new) K
( BufferedReader\() p
(new) K
( FileReader\(file[0]\)\);) p n
(55) # () S 8 T () S 16 T (String input;) N
(56) # () S 8 T () S 16 T (input = in.readLine\(\);) N
(57) # () N
(58) # () N
(59) # () S 8 T () S 16 T (String mode = "";) N
(60) # () N
(61) # () S 8 T () S 16 T () S
(while) K
( \(input != ) p
(null) k
(\) {) p n
(62) # () S 8 T () S 16 T () S 24 T (input = input.trim\(\);) N
(63) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(input.equals\(") p
(-ENZREV) str
("\)\) {) p n
(64) # () S 8 T () S 16 T () S 24 T () S 32 T (mode = ") S
(ENZREV) str
(";) p n
(65) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(input.equals\(") p
(-ENZIRREV) str
("\)\) {) p n
(MetatoolFormat.java) (Page 1/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T () S 24 T () S 32 T (mode = ") S
(ENZIRREV) str
(";) p n
(67) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(input.equals\(") p
(-METINT) str
("\)\) {) p n
(68) # () S 8 T () S 16 T () S 24 T () S 32 T (mode = ") S
(METINT) str
(";) p n
(69) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(input.equals\(") p
(-METEXT) str
("\)\) {) p n
(70) # () S 8 T () S 16 T () S 24 T () S 32 T (mode = ") S
(METEXT) str
(";) p n
(71) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(input.equals\(") p
(-CAT) str
("\)\) {) p n
(72) # () S 8 T () S 16 T () S 24 T () S 32 T (mode = ") S
(CAT) str
(";) p n
(73) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(74) # () S 8 T () S 16 T () S 24 T () S 32 T (input += ") S
( ) str
(";) p n
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(mode.equals\(") p
(ENZREV) str
("\)\) {) p n
(76) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (enzRevData += input;) N
(77) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(mode.equals\(") p
(ENZIRREV) str
("\)\) {) p n
(78) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (enzIrevData += input;) N
(79) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(mode.equals\(") p
(METINT) str
("\)\) {) p n
(80) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (metIntData += input;) N
(81) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(mode.equals\(") p
(METEXT) str
("\)\) {) p n
(82) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (metExtData += input;) N
(83) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(mode.equals\(") p
(CAT) str
("\)\) {) p n
(84) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (String equation = input.trim\(\);) N
(85) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(equation.length\(\) > 0\) {) p n
(86) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (reactionEquations.add\(equation\);) N
(87) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(88) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(89) # () S 8 T () S 16 T () S 24 T (}) N
(90) # () N
(91) # () S 8 T () S 16 T () S 24 T () S 32 T (input = in.readLine\(\);) N
(92) # () S 8 T () S 16 T () S 24 T (} ) N
(93) # () S 8 T () S 16 T (}) S
(catch) K
( \(IOException e\) {) p n
(94) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(95) # () S 8 T () S 16 T (}) N
(96) # () N
(97) # () S 8 T () S 16 T (metIntData = metIntData.trim\(\);) N
(98) # () S 8 T () S 16 T (metExtData = metExtData.trim\(\);) N
(99) # () S 8 T () S 16 T (enzRevData = enzRevData.trim\(\);) N
(100) # () S 8 T () S 16 T (enzIrevData = enzIrevData.trim\(\);) N
(101) # () N
(102) # () S 8 T () S 16 T () N
(103) # () S 8 T () S 16 T () N
(104) # () N
(105) # () S 8 T () S 16 T () S
(// if the file is correct) c n
(106) # () S
() p 8 T () S 16 T () S
(if) K
( \(isMetatoolInputFile\(file[0]\)\) {) p n
(107) # () N
(108) # () S 8 T () S 16 T () S 24 T () S
(// recover metabolites) c n
(109) # () S
() p 8 T () S 16 T () S 24 T () S
(for) K
( \(String metabo : extractItems\(metIntData\)\) {) p n
(110) # () S 8 T () S 16 T () S 24 T () S 32 T (network.AddMetabolite\(metabo, "", ) S
(true) k
(\);) p n
(111) # () S 8 T () S 16 T () S 24 T (}) N
(112) # () N
(113) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(String metabo : extractItems\(metExtData\)\) {) p n
(114) # () N
(115) # () S 8 T () S 16 T () S 24 T () S 32 T (network.AddMetabolite\(metabo, "", ) S
(false) k
(\);) p n
(116) # () S 8 T () S 16 T () S 24 T (}) N
(117) # () N
(118) # () S 8 T () S 16 T () S 24 T () S
(// create reactions) c n
(119) # () S
() p 8 T () S 16 T () S 24 T () S
(for) K
( \(String equation : reactionEquations\) {) p n
(120) # () N
(121) # () S 8 T () S 16 T () S 24 T () S 32 T (network.addReaction\(getEnzyme\(equation\),) N
(122) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (getReactants\(network, equation\),) N
(123) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (getProducts\(network, equation\),) N
(124) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (isReversible\(equation, enzRevDat) N
0 T (a\)\);) N
(125) # () N
(126) # () S 8 T () S 16 T () S 24 T (}) N
(127) # () N
(128) # () S 8 T () S 16 T (}) N
(129) # () S 8 T () S 16 T () S
(// if the file could not be parsed) c n
(130) # () S
() p 8 T () S 16 T () S
(else) K
( {) p n
(MetatoolFormat.java) (Page 2/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/MetatoolFormat.java) (12/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 13
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(131) # () p 8 T () S 16 T () S 24 T (System.out.println\(") S
(Could not load file) str
("\);) p n
(132) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Could not load the file ) str
(") p n
(133) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ file[0].getName\(\), ") S
(Loading error) str
(",) p n
(134) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(135) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(null) k
(;) p n
(136) # () S 8 T () S 16 T (}) N
(137) # () S 8 T () S 16 T () S
(return) K
( network;) p n
(138) # () S 8 T (}) N
(139) # () N
(140) # () S 8 T () S
(public) K
( ) p
(void) k
( save\(File file, MetabolicNetworkItf network, ) p
(boolean) k
( message) p n
0 T (\) {) N
(141) # () N
(142) # () S 8 T () S 16 T (String outputName = file.getName\(\);) N
(143) # () S 8 T () S 16 T (String outputPath = file.getAbsolutePath\(\);) N
(144) # () N
(145) # () S 8 T () S 16 T () S
(if) K
( \(!outputPath.endsWith\(") p
(.dat) str
("\)\) {) p n
(146) # () S 8 T () S 16 T () S 24 T (outputPath += ") S
(.dat) str
(";) p n
(147) # () S 8 T () S 16 T () S 24 T (outputName += ") S
(.dat) str
(";) p n
(148) # () S 8 T () S 16 T (}) N
(149) # () N
(150) # () S 8 T () S 16 T (System.out.println\(") S
(saving a Metatool file : ) str
(" + outputName\);) p n
(151) # () N
(152) # () S 8 T () S 16 T (FileWriter fw;) N
(153) # () S 8 T () S 16 T () S
(try) K
( {) p n
(154) # () S 8 T () S 16 T () S 24 T (fw = ) S
(new) K
( FileWriter\(outputPath\);) p n
(155) # () S 8 T () S 16 T () S 24 T (fw.write\(") S
(#Generated by J-Varo \\n) str
("\);) p n
(156) # () N
(157) # () S 8 T () S 16 T () S 24 T (fw.write\(") S
(-METINT) str
(" + ") p
(\\n) str
("\);) p n
(158) # () S 8 T () S 16 T () S 24 T (String w = "";) N
(159) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Metabolite metabolite : network.getMetabolites\(\)\) {) p n
(160) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(metabolite.isInternal\(\)\) {) p n
(161) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (w += metabolite + ") S
( ) str
(";) p n
(162) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(163) # () S 8 T () S 16 T () S 24 T (}) N
(164) # () S 8 T () S 16 T () S 24 T (fw.write\(w + ") S
(\\n) str
("\);) p n
(165) # () S 8 T () S 16 T () S 24 T (fw.write\(") S
(-METEXT) str
(" + ") p
(\\n) str
("\);) p n
(166) # () S 8 T () S 16 T () S 24 T (w = "";) N
(167) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Metabolite metabolite : network.getMetabolites\(\)\) {) p n
(168) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!metabolite.isInternal\(\)\) {) p n
(169) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (w += metabolite + ") S
( ) str
(";) p n
(170) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(171) # () S 8 T () S 16 T () S 24 T (}) N
(172) # () S 8 T () S 16 T () S 24 T (fw.write\(w + ") S
(\\n) str
("\);) p n
(173) # () S 8 T () S 16 T () S 24 T (fw.write\(") S
(-ENZREV) str
(" + ") p
(\\n) str
("\);) p n
(174) # () S 8 T () S 16 T () S 24 T (w = "";) N
(175) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction reaction : network.getReactions\(\)\) {) p n
(176) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(reaction.isReversible\(\)\) {) p n
(177) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (w += reaction.getName\(\) + ") S
( ) str
(";) p n
(178) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(179) # () S 8 T () S 16 T () S 24 T (}) N
(180) # () S 8 T () S 16 T () S 24 T (fw.write\(w + ") S
(\\n) str
("\);) p n
(181) # () S 8 T () S 16 T () S 24 T (fw.write\(") S
(-ENZIRREV) str
(" + ") p
(\\n) str
("\);) p n
(182) # () S 8 T () S 16 T () S 24 T (w = "";) N
(183) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction reaction : network.getReactions\(\)\) {) p n
(184) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!reaction.isReversible\(\)\) {) p n
(185) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (w += reaction.getName\(\) + ") S
( ) str
(";) p n
(186) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(187) # () S 8 T () S 16 T () S 24 T (}) N
(188) # () S 8 T () S 16 T () S 24 T (fw.write\(w + ") S
(\\n) str
("\);) p n
(189) # () S 8 T () S 16 T () S 24 T (fw.write\(") S
(-CAT) str
(" + ") p
(\\n) str
("\);) p n
(190) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction reaction : network.getReactions\(\)\) {) p n
(191) # () S 8 T () S 16 T () S 24 T () S 32 T (fw.write\(reaction.getName\(\) + ") S
( : ) str
(") p n
(192) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ reaction.getStringReaction\(\).r) N
0 T (eplace\(") S
(,) str
(", ") p
(.) str
("\) + ") p
(.) str
(") p n
(193) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(\\n) str
("\);) p n
(194) # () S 8 T () S 16 T () S 24 T (}) N
(MetatoolFormat.java) (Page 3/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(195) # () p 8 T () S 16 T () S 24 T (fw.close\(\);) N
(196) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(197) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(198) # () S 8 T () S 16 T (}) N
(199) # () N
(200) # () N
(201) # () S 8 T () S 16 T () S
(if) K
( \(message\) {) p n
(202) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(203) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Successfully saved METATOOL file ) str
(" + outputNam) p n
0 T (e + ") S
( !) str
(",) p n
(204) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Succes) str
(", JOptionPane.INFORMATION_MESSAGE) p n
0 T (\);) N
(205) # () S 8 T () S 16 T (}) N
(206) # () N
(207) # () S 8 T (}) N
(208) # () S 8 T () N
(209) # () S 8 T () S
(private) K
( Set<String> extractItems\(String text\) {) p n
(210) # () S 8 T () S 16 T (Set<String> data = ) S
(new) K
( HashSet<String>\(\);) p n
(211) # () S 8 T () S 16 T (StringTokenizer token = ) S
(new) K
( StringTokenizer\(text, ") p
( ) str
(", ) p
(false) k
(\);) p n
(212) # () S 8 T () S 16 T () S
(while) K
( \(token.hasMoreTokens\(\)\) {) p n
(213) # () S 8 T () S 16 T () S 24 T (String item = token.nextToken\(\).trim\(\);) N
(214) # () S 8 T () S 16 T () S 24 T (data.add\(item\);) N
(215) # () S 8 T () S 16 T (}) N
(216) # () S 8 T () S 16 T () S
(return) K
( data;) p n
(217) # () S 8 T (}) N
(218) # () S 8 T () N
(219) # () S 8 T () S
(public) K
( HashMap<Metabolite, Double> getProducts\(MetabolicNetwork network,) p n
(220) # () S 8 T () S 16 T () S 24 T (String equation\) {) N
(221) # () S 8 T () S 16 T (HashMap<Metabolite, Double> products = ) S
(new) K
( HashMap<Metabolite, D) p n
0 T (ouble>\(\);) N
(222) # () S 8 T () S 16 T (equation = equation.replaceAll\(") S
(\\\\s+) str
(", ") p
( ) str
("\);) p n
(223) # () S 8 T () S 16 T () N
(224) # () S 8 T () S 16 T () S
(if) K
( \(!equation.contains\(") p
(= .) str
("\)\){) p n
(225) # () S 8 T () S 16 T () S 24 T () S
(//String[] p = equation.split\(" : "\)[1].split\(" = "\)[1].) c n
0 T (trim\(\).split\(" "\);) N
(226) # () S
() p 8 T () S 16 T () S 24 T (String[] p = equation.substring\(equation.indexOf\(") S
( = ) str
("\)+3) p n
0 T (, equation.indexOf\(") S
( .) str
("\)\).trim\(\).split\(") p
( ) str
("\);) p n
(227) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < p.length; i++\) {) p n
(228) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(isNumeric\(p[i]\)\) {) p n
(229) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (products.put\(network.getMetabolite\(p[i +) N
0 T ( 1].trim\(\)\),) N
(230) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (Double.parseDouble\(p[i].) N
0 T (trim\(\)\)\);) N
(231) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (i += 2;) N
(232) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
(233) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (products.put\(network.getMetabolite\(p[i].) N
0 T (trim\(\)\), 1.0\);) N
(234) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (i++;) N
(235) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(236) # () S 8 T () S 16 T () S 24 T (}) N
(237) # () S 8 T () S 16 T (}) N
(238) # () S 8 T () S 16 T () S
(return) K
( products;) p n
(239) # () S 8 T (}) N
(240) # () N
(241) # () S 8 T () S
(public) K
( HashMap<Metabolite, Double> getReactants\(MetabolicNetwork network) p n
0 T (,) N
(242) # () S 8 T () S 16 T () S 24 T (String equation\) {) N
(243) # () S 8 T () S 16 T (HashMap<Metabolite, Double> reactants = ) S
(new) K
( HashMap<Metabolite, ) p n
0 T (Double>\(\);) N
(244) # () S 8 T () S 16 T (equation = equation.replaceAll\(") S
(\\\\s+) str
(", ") p
( ) str
("\);) p n
(245) # () S 8 T () S 16 T () S
(if) K
( \(!equation.contains\(") p
(: =) str
("\)\){) p n
(246) # () S 8 T () S 16 T () S 24 T () S
(//String[] p = equation.split\(" : "\)[1].split\("="\)[0].tr) c n
0 T (im\(\).split\(" "\);) N
(247) # () S
() p 8 T () S 16 T () S 24 T (String[] p = equation.substring\(equation.indexOf\(") S
( : ) str
("\)+3) p n
0 T (, equation.indexOf\(") S
( = ) str
("\)\).trim\(\).split\(") p
( ) str
("\);) p n
(248) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < p.length; i++\) {) p n
(MetatoolFormat.java) (Page 4/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/MetatoolFormat.java) (13/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 14
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(249) # () p n
(250) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(isNumeric\(p[i]\)\) {) p n
(251) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (reactants.put\(network.getMetabolite\(p[i ) N
0 T (+ 1].trim\(\)\),) N
(252) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (Double.parseDouble\(p[i]\)) N
0 T (\);) N
(253) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (i += 2;) N
(254) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
(255) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (reactants.put\(network.getMetabolite\(p[i]) N
0 T (.trim\(\)\), 1.0\);) N
(256) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (i++;) N
(257) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(258) # () S 8 T () S 16 T () S 24 T (}) N
(259) # () S 8 T () S 16 T (}) N
(260) # () S 8 T () S 16 T () S
(return) K
( reactants;) p n
(261) # () S 8 T (}) N
(262) # () N
(263) # () S 8 T () S
(public) K
( String getEnzyme\(String equation\) {) p n
(264) # () S 8 T () S 16 T () S
(return) K
( equation.split\(") p
(:) str
("\)[0].trim\(\);) p n
(265) # () S 8 T (}) N
(266) # () S 8 T () S
(public) K
( ) p
(static) K
( ) p
(boolean) k
( isNumeric\(String str\) {) p n
(267) # () S 8 T () S 16 T () S
(try) K
( {) p n
(268) # () S 8 T () S 16 T () S 24 T () S
(double) k
( d = Double.parseDouble\(str\);) p n
(269) # () S 8 T () S 16 T (} ) S
(catch) K
( \(NumberFormatException nfe\) {) p n
(270) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(271) # () S 8 T () S 16 T (}) N
(272) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(273) # () S 8 T (}) N
(274) # () S 8 T () N
(275) # () S 8 T () S
(public) K
( ) p
(boolean) k
( isReversible\(String equation, String enzRevData\) {) p n
(276) # () S 8 T () S 16 T (String enzyme = getEnzyme\(equation\);) N
(277) # () S 8 T () S 16 T () S
(if) K
( \(enzRevData.contains\(enzyme\)\) {) p n
(278) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(true) k
(;) p n
(279) # () S 8 T () S 16 T (}) N
(280) # () S 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
(281) # () S 8 T (}) N
(282) # () S 8 T () N
(283) # () S 8 T () S
(public) K
( ) p
(static) K
( ) p
(boolean) k
( isMetatoolInputFile\(File file\) {) p n
(284) # () S 8 T () S 16 T () S
(boolean) k
( retval = ) p
(true) k
(;) p n
(285) # () S 8 T () S 16 T (StringBuffer content = ) S
(new) K
( StringBuffer\(\);) p n
(286) # () S 8 T () S 16 T () S
(try) K
( {) p n
(287) # () S 8 T () S 16 T () S 24 T (BufferedReader in = ) S
(new) K
( BufferedReader\() p
(new) K
( FileReader\(fi) p n
0 T (le\)\);) N
(288) # () S 8 T () S 16 T () S 24 T (String input = in.readLine\(\);) N
(289) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \(input != ) p
(null) k
(\) {) p n
(290) # () S 8 T () S 16 T () S 24 T () S 32 T (content.append\(input\);) N
(291) # () S 8 T () S 16 T () S 24 T () S 32 T (input = in.readLine\(\);) N
(292) # () S 8 T () S 16 T () S 24 T (}) N
(293) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException ex\) {) p n
(294) # () S 8 T () S 16 T () S 24 T (retval = ) S
(false) k
(;) p n
(295) # () S 8 T () S 16 T (}) N
(296) # () N
(297) # () S 8 T () S 16 T (String all = content.toString\(\);) N
(298) # () S 8 T () S 16 T (retval = \(all.indexOf\(") S
(-ENZREV) str
("\) >= 0\)) p n
(299) # () S 8 T () S 16 T () S 24 T () S 32 T (&& \(all.indexOf\(") S
(-ENZIRREV) str
("\) >= 0\)) p n
(300) # () S 8 T () S 16 T () S 24 T () S 32 T (&& \(all.indexOf\(") S
(-METINT) str
("\) >= 0\)) p n
(301) # () S 8 T () S 16 T () S 24 T () S 32 T (&& \(all.indexOf\(") S
(-METEXT) str
("\) >= 0\) && \(all.indexO) p n
0 T (f\(") S
(-CAT) str
("\) >= 0\);) p n
(302) # () S 8 T () S 16 T () S
(return) K
( retval;) p n
(303) # () S 8 T (}) N
(304) # () N
(305) # (}) N
(MetatoolFormat.java) (Page 5/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/MetatoolFormat.java) (14/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 15
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model.data;) p n
(20) # () N
(21) # () S
(import) K
( java.io.File;) p n
(22) # () S
(import) K
( java.io.FileInputStream;) p n
(23) # () S
(import) K
( java.io.FileOutputStream;) p n
(24) # () S
(import) K
( java.io.IOException;) p n
(25) # () S
(import) K
( java.io.ObjectInputStream;) p n
(26) # () S
(import) K
( java.io.ObjectOutputStream;) p n
(27) # () N
(28) # () S
(import) K
( javax.swing.JOptionPane;) p n
(29) # () N
(30) # () S
(import) K
( view.GeneralFrame;) p n
(31) # () N
(32) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(33) # () S
(import) K
( model.Project;) p n
(34) # () S
(import) K
( controler.MainControler;) p n
(35) # () S
(import) K
( controler.Var;) p n
(36) # () N
(37) # () S
(public) K
( ) p
(class) K
( ) p
(ProjectFormat) L
( ) p
(implements) K
( Format {) p n
(38) # () N
(39) # () S 8 T (Project project;) N
(40) # () S 8 T (MainControler controler;) N
(41) # () N
(42) # () S 8 T () S
(public) K
( ProjectFormat\(MainControler controler\) {) p n
(43) # () S 8 T () S 16 T (this.controler = controler;) N
(44) # () S 8 T (}) N
(45) # () N
(46) # () S 8 T () S
(public) K
( MetabolicNetworkItf load\(File[] file\) ) p
(throws) K
( IOException,) p n
(47) # () S 8 T () S 16 T () S 24 T (ClassNotFoundException {) N
(48) # () N
(49) # () S 8 T () S 16 T (System.out.println\(") S
(loading Project file : ) str
(") p n
(50) # () S 8 T () S 16 T () S 24 T () S 32 T (+ file[0].getAbsolutePath\(\)\);) N
(51) # () N
(52) # () S 8 T () S 16 T () S
(try) K
( {) p n
(53) # () S 8 T () S 16 T () S 24 T (FileInputStream fis = ) S
(new) K
( FileInputStream\(file[0].getAbs) p n
0 T (olutePath\(\)\);) N
(54) # () N
(55) # () S 8 T () S 16 T () S 24 T (ObjectInputStream ois = ) S
(new) K
( ObjectInputStream\(fis\);) p n
(56) # () N
(57) # () S 8 T () S 16 T () S 24 T (project = \(Project\) ois.readObject\(\);) N
(58) # () N
(59) # () S 8 T () S 16 T () S 24 T (ois.close\(\);) N
(60) # () S 8 T () S 16 T () S 24 T (fis.close\(\);) N
(61) # () S 8 T () S 16 T (} ) S
(catch) K
( \(Exception e\) {) p n
(62) # () S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Could not load file) str
("\);) p n
(63) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Could not load the file ) str
(") p n
(64) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ file[0].getName\(\), ") S
(Loading error) str
(",) p n
(ProjectFormat.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(66) # () S 8 T () S 16 T (}) N
(67) # () N
(68) # () S 8 T () S 16 T () S
(// on change le nom du projet en enlevant l'extenssion) c n
(69) # () N
(70) # () S
() p 8 T () S 16 T () S
(if) K
( \(project != ) p
(null) k
(\) {) p n
(71) # () S 8 T () S 16 T () S 24 T (controler.createProject\(project\);) N
(72) # () N
(73) # () S 8 T () S 16 T (}) N
(74) # () S 8 T () S 16 T () S
(else) K
({) p n
(75) # () S 8 T () S 16 T () S 24 T (System.out.println\(") S
(error) str
("\);) p n
(76) # () S 8 T () S 16 T (}) N
(77) # () N
(78) # () S 8 T () S 16 T (GeneralFrame.getInstance\(controler\).getRightPanel\(\).resetPanes\(\)) N
0 T (;) N
(79) # () S 8 T () S 16 T () N
(80) # () S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
(81) # () S 8 T (}) N
(82) # () N
(83) # () S 8 T () S
(public) K
( ) p
(void) k
( save\(File file, MetabolicNetworkItf network, ) p
(boolean) k
( message) p n
0 T (\)) N
(84) # () S 8 T () S 16 T () S 24 T () S
(throws) K
( IOException {) p n
(85) # () N
(86) # () S 8 T () S 16 T (String outputPath = file.getAbsolutePath\(\);) N
(87) # () S 8 T () S 16 T (String outputName = file.getName\(\);) N
(88) # () N
(89) # () S 8 T () S 16 T () S
(if) K
( \(!file.getAbsolutePath\(\).endsWith\(Var.extension\)\) {) p n
(90) # () S 8 T () S 16 T () S 24 T (outputPath += Var.extension;) N
(91) # () S 8 T () S 16 T () S 24 T (outputName += Var.extension;) N
(92) # () S 8 T () S 16 T (}) N
(93) # () N
(94) # () S 8 T () S 16 T () S
(// update project name) c n
(95) # () S
() p 8 T () S 16 T (controler.setProjectNameAndPath\() N
(96) # () S 8 T () S 16 T () S 24 T () S 32 T (outputName.substring\(0, outputName.length\(\) - 4\)) N
0 T (, outputPath\);) N
(97) # () N
(98) # () S 8 T () S 16 T (FileOutputStream fos = ) S
(new) K
( FileOutputStream\(outputPath\);) p n
(99) # () N
(100) # () S 8 T () S 16 T (ObjectOutputStream oos = ) S
(new) K
( ObjectOutputStream\(fos\);) p n
(101) # () N
(102) # () S 8 T () S 16 T (oos.writeObject\(controler.getProject\(\)\);) N
(103) # () S 8 T () S 16 T (oos.flush\(\);) N
(104) # () N
(105) # () S 8 T () S 16 T (oos.close\(\);) N
(106) # () S 8 T () S 16 T (fos.close\(\);) N
(107) # () N
(108) # () S 8 T () S 16 T (controler.notifyObservers\(\);) N
(109) # () N
(110) # () S 8 T () S 16 T (System.out.println\(") S
(saving a Project file : ) str
(" + outputPath\);) p n
(111) # () N
(112) # () S 8 T () S 16 T () S
(if) K
( \(message\) {) p n
(113) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(114) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Successfully saved project file ) str
(" + outputName + ") p
() str n
0 T ( !) S
(",) p n
(115) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Succes) str
(", JOptionPane.INFORMATION_MESSAGE) p n
0 T (\);) N
(116) # () S 8 T () S 16 T (}) N
(117) # () N
(118) # () S 8 T (}) N
(119) # (}) N
(ProjectFormat.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/ProjectFormat.java) (15/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 16
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model.data;) p n
(20) # () N
(21) # () S
(import) K
( java.io.BufferedReader;) p n
(22) # () S
(import) K
( java.io.File;) p n
(23) # () S
(import) K
( java.io.FileNotFoundException;) p n
(24) # () S
(import) K
( java.io.FileReader;) p n
(25) # () S
(import) K
( java.io.FileWriter;) p n
(26) # () S
(import) K
( java.io.IOException;) p n
(27) # () S
(import) K
( java.util.HashMap;) p n
(28) # () S
(import) K
( java.util.Map;) p n
(29) # () N
(30) # () S
(import) K
( javax.swing.JOptionPane;) p n
(31) # () S
(import) K
( javax.xml.stream.XMLStreamException;) p n
(32) # () N
(33) # () S
(import) K
( org.sbml.jsbml.SBMLException;) p n
(34) # () N
(35) # () S
(import) K
( model.MetabolicNetwork;) p n
(36) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(37) # () S
(import) K
( model.Metabolite;) p n
(38) # () S
(import) K
( model.Reaction;) p n
(39) # () N
(40) # () S
(public) K
( ) p
(class) K
( ) p
(RegEfmToolFormat) L
( ) p
(implements) K
( Format {) p n
(41) # () N
(42) # () S 8 T () S
(private) K
( File mFile;) p n
(43) # () S 8 T () S
(private) K
( File rFile;) p n
(44) # () S 8 T () S
(private) K
( File rvFile;) p n
(45) # () S 8 T () S
(private) K
( File sFile;) p n
(46) # () S 8 T () S
(private) K
( File grFile;) p n
(47) # () N
(48) # () S 8 T () S
(public) K
( MetabolicNetworkItf load\(File[] file\) ) p
(throws) K
( FileNotFoundExceptio) p n
0 T (n,) N
(49) # () S 8 T () S 16 T () S 24 T (IOException, ClassNotFoundException {) N
(50) # () N
(51) # () S 8 T () S 16 T (System.out.println\(") S
(loading RegEfmtool files ) str
("\);) p n
(52) # () S 8 T () S 16 T (MetabolicNetwork network = ) S
(new) K
( MetabolicNetwork\(\);) p n
(53) # () N
(54) # () S 8 T () S 16 T () S
(// searching the correct files according to their extension) c n
(55) # () S
() p 8 T () S 16 T () S
(for) K
( \(File f : file\) {) p n
(56) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(getFileExtension\(f\).equals\(") p
(mfile) str
("\)\) {) p n
(57) # () S 8 T () S 16 T () S 24 T () S 32 T (mFile = f;) N
(58) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(getFileExtension\(f\).equals\(") p
(rfile) str
("\)\) {) p n
(59) # () S 8 T () S 16 T () S 24 T () S 32 T (rFile = f;) N
(60) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(getFileExtension\(f\).equals\(") p
(rvfile) str
("\)\) {) p n
(61) # () S 8 T () S 16 T () S 24 T () S 32 T (rvFile = f;) N
(62) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(getFileExtension\(f\).equals\(") p
(sfile) str
("\)\) {) p n
(63) # () S 8 T () S 16 T () S 24 T () S 32 T (sFile = f;) N
(64) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(getFileExtension\(f\).equals\(") p
(grfile) str
("\)\) {) p n
(RegEfmToolFormat.java) (Page 1/6) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T () S 24 T () S 32 T (grFile = f;) N
(66) # () S 8 T () S 16 T () S 24 T (}) N
(67) # () S 8 T () S 16 T (}) N
(68) # () N
(69) # () S 8 T () S 16 T () S
(// check if all the files were selected) c n
(70) # () S
() p 8 T () S 16 T () S
(if) K
( \(\(mFile == ) p
(null) k
(\) || rFile == ) p
(null) k
( || rvFile == ) p
(null) k
( || sFile ) p n
0 T (== ) S
(null) k
(\) {) p n
(71) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(72) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Could not load the files, missing file\(s\) ) str
(",) p n
(73) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Loading error) str
(", JOptionPane.ERROR_MESSAGE\)) p n
0 T (;) N
(74) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(null) k
(;) p n
(75) # () S 8 T () S 16 T (}) N
(76) # () N
(77) # () S 8 T () S 16 T (FileReader mfr = ) S
(new) K
( FileReader\(mFile\);) p n
(78) # () S 8 T () S 16 T (BufferedReader mbr = ) S
(new) K
( BufferedReader\(mfr\);) p n
(79) # () S 8 T () S 16 T (String s = mbr.readLine\(\);) N
(80) # () S 8 T () S 16 T (String[] metabos = s.split\(") S
( ) str
("\);) p n
(81) # () S 8 T () S 16 T () S
(for) K
( \(String m : metabos\) {) p n
(82) # () S 8 T () S 16 T () S 24 T (String metName = m.replace\(") S
(\\") str
(", ""\);) p n
(83) # () S 8 T () S 16 T () S 24 T (network.AddMetabolite\(metName, "", ) S
(true) k
(\);) p n
(84) # () S 8 T () S 16 T (}) N
(85) # () N
(86) # () S 8 T () S 16 T () S
(// names of reactions) c n
(87) # () S
() p 8 T () S 16 T (FileReader rfr = ) S
(new) K
( FileReader\(rFile\);) p n
(88) # () S 8 T () S 16 T (BufferedReader rbr = ) S
(new) K
( BufferedReader\(rfr\);) p n
(89) # () S 8 T () S 16 T (String rs = rbr.readLine\(\);) N
(90) # () S 8 T () S 16 T (String[] reactions = rs.split\(") S
( ) str
("\);) p n
(91) # () N
(92) # () S 8 T () S 16 T () S
(// reversible or not) c n
(93) # () S
() p 8 T () S 16 T (FileReader rvfr = ) S
(new) K
( FileReader\(rvFile\);) p n
(94) # () S 8 T () S 16 T (BufferedReader rvbr = ) S
(new) K
( BufferedReader\(rvfr\);) p n
(95) # () S 8 T () S 16 T (String rvs = rvbr.readLine\(\);) N
(96) # () S 8 T () S 16 T (String[] reversible = rvs.split\(") S
( ) str
("\);) p n
(97) # () N
(98) # () S 8 T () S 16 T () S
(// add reactions) c n
(99) # () S
() p 8 T () S 16 T () S
(for) K
( \() p
(int) k
( a = 0; a < reactions.length; a++\) {) p n
(100) # () S 8 T () S 16 T () S 24 T (Map<Metabolite, Double> reactants = ) S
(new) K
( HashMap<Metaboli) p n
0 T (te, Double>\(\);) N
(101) # () S 8 T () S 16 T () S 24 T (Map<Metabolite, Double> products = ) S
(new) K
( HashMap<Metabolit) p n
0 T (e, Double>\(\);) N
(102) # () S 8 T () S 16 T () S 24 T (String reacName = reactions[a].replace\(") S
(\\") str
(", ""\);) p n
(103) # () S 8 T () S 16 T () S 24 T () S
(int) k
( rev = Integer.parseInt\(reversible[a].replace\(") p
(\\") str
(", ") p n
0 T ("\)\);) N
(104) # () S 8 T () S 16 T () S 24 T () S
(boolean) k
( r = \(rev != 0\);) p n
(105) # () S 8 T () S 16 T () S 24 T (network.addReaction\(reacName, reactants, products, r\);) N
(106) # () S 8 T () S 16 T (}) N
(107) # () N
(108) # () S 8 T () S 16 T () S
(// run through matrix) c n
(109) # () S
() p 8 T () S 16 T (FileReader sfr = ) S
(new) K
( FileReader\(sFile\);) p n
(110) # () S 8 T () S 16 T (BufferedReader sbr = ) S
(new) K
( BufferedReader\(sfr\);) p n
(111) # () S 8 T () S 16 T (String stoech;) N
(112) # () S 8 T () S 16 T () S
(int) k
( i = 0;) p n
(113) # () S 8 T () S 16 T () S
(while) K
( \(\(stoech = sbr.readLine\(\)\) != ) p
(null) k
(\) {) p n
(114) # () N
(115) # () S 8 T () S 16 T () S 24 T (String sto = stoech.replace\(") S
(  ) str
(", ") p
( ) str
("\); ) p
(// if several spa) c n
0 T (ces) N
(116) # () S
() p 8 T () S 16 T () S 24 T (String verif = "";) N
(117) # () N
(118) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \(verif != sto\) {) p n
(119) # () S 8 T () S 16 T () S 24 T () S 32 T (verif = sto;) N
(120) # () S 8 T () S 16 T () S 24 T () S 32 T (sto = sto.replace\(") S
(  ) str
(", ") p
( ) str
("\);) p
(// if several spaces) c n
(121) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (sto = sto.replace\(") S
() str 56 T () S
(", ") p
( ) str
("\); ) p
(// if tabulatio) c n
0 T (n) N
(122) # () S
() p 8 T () S 16 T () S 24 T (}) N
(123) # () N
(RegEfmToolFormat.java) (Page 2/6) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/RegEfmToolFormat.java) (16/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 17
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(124) # () p 8 T () S 16 T () S 24 T () S
(if) K
( \(sto.startsWith\(") p
( ) str
("\)\) {) p n
(125) # () S 8 T () S 16 T () S 24 T () S 32 T (sto = sto.replaceFirst\(") S
( ) str
(", ""\);) p n
(126) # () S 8 T () S 16 T () S 24 T (}) N
(127) # () N
(128) # () S 8 T () S 16 T () S 24 T (String[] tabLine = sto.split\(") S
( ) str
("\);) p n
(129) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( j = 0; j < tabLine.length; j++\) {) p n
(130) # () N
(131) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(double) k
( n = Double.parseDouble\(tabLine[j]\);) p n
(132) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(n < 0\) {) p n
(133) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (network.getMetabolite\(metabos[i].replace) N
0 T (\(") S
(\\") str
(", ""\)\);) p n
(134) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (network.getReaction\(reactions[j].replace) N
0 T (\(") S
(\\") str
(", ""\)\)) p n
(135) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.addReactant\() N
(136) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (network.) N
0 T (getMetabolite\(metabos[i].replace\() N
(137) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
0 T () S 0 T (") S
(\\") str
(", ""\)\), -n\);) p n
(138) # () N
(139) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(140) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(n > 0\) {) p n
(141) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (network.getMetabolite\(metabos[i].replace) N
0 T (\(") S
(\\") str
(", ""\)\);) p n
(142) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (network.getReaction\(reactions[j].replace) N
0 T (\(") S
(\\") str
(", ""\)\)) p n
(143) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.addProduct\() N
(144) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (network.) N
0 T (getMetabolite\(metabos[i].replace\() N
(145) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
0 T () S 0 T (") S
(\\") str
(", ""\)\), n\);) p n
(146) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(147) # () S 8 T () S 16 T () S 24 T (}) N
(148) # () N
(149) # () S 8 T () S 16 T () S 24 T (i++;) N
(150) # () S 8 T () S 16 T (}) N
(151) # () N
(152) # () S 8 T () S 16 T () S
(// rules) c n
(153) # () S
() p 8 T () S 16 T () S
(if) K
( \(grFile != ) p
(null) k
(\) {) p n
(154) # () S 8 T () S 16 T () S 24 T (FileReader grfr = ) S
(new) K
( FileReader\(grFile\);) p n
(155) # () S 8 T () S 16 T () S 24 T (BufferedReader grbr = ) S
(new) K
( BufferedReader\(grfr\);) p n
(156) # () N
(157) # () S 8 T () S 16 T () S 24 T (String gr;) N
(158) # () N
(159) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \(\(gr = grbr.readLine\(\)\) != ) p
(null) k
(\) {) p n
(160) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!gr.startsWith\(") p
(#) str
("\)\) {) p n
(161) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (network.addRule\(gr\);) N
(162) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(163) # () S 8 T () S 16 T () S 24 T (}) N
(164) # () N
(165) # () S 8 T () S 16 T () S 24 T (grfr.close\(\);) N
(166) # () N
(167) # () S 8 T () S 16 T (}) N
(168) # () N
(169) # () S 8 T () S 16 T (sfr.close\(\);) N
(170) # () S 8 T () S 16 T (rvfr.close\(\);) N
(171) # () S 8 T () S 16 T (rfr.close\(\);) N
(172) # () S 8 T () S 16 T (mfr.close\(\);) N
(173) # () N
(174) # () S 8 T () S 16 T () S
(return) K
( network;) p n
(175) # () S 8 T (}) N
(176) # () N
(177) # () S 8 T () S
(public) K
( String getFileExtension\(File f\) {) p n
(178) # () S 8 T () S 16 T (String name = f.getName\(\);) N
(179) # () S 8 T () S 16 T () S
(int) k
( pos = name.lastIndexOf\('.'\);) p n
(180) # () S 8 T () S 16 T (String ext = name.substring\(pos + 1\);) N
(181) # () S 8 T () S 16 T () S
(return) K
( ext;) p n
(RegEfmToolFormat.java) (Page 3/6) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(182) # () p n
(183) # () S 8 T (}) N
(184) # () N
(185) # () S 8 T () S
(public) K
( ) p
(void) k
( save\(File file, MetabolicNetworkItf network, ) p
(boolean) k
( message) p n
0 T (\)) N
(186) # () S 8 T () S 16 T () S 24 T () S
(throws) K
( IOException, SBMLException, XMLStreamException {) p n
(187) # () S 8 T () S 16 T (System.out.println\(") S
(saving a regEfmtool file : ) str
(" + file.getName\(\)\);) p n
(188) # () S 8 T () S 16 T (File mfile = ) S
(new) K
( File\(file + ") p
(.mfile) str
("\);) p n
(189) # () S 8 T () S 16 T (FileWriter fwM = ) S
(new) K
( FileWriter\(mfile\);) p n
(190) # () N
(191) # () S 8 T () S 16 T (File rfile = ) S
(new) K
( File\(file + ") p
(.rfile) str
("\);) p n
(192) # () S 8 T () S 16 T (FileWriter fwR = ) S
(new) K
( FileWriter\(rfile\);) p n
(193) # () N
(194) # () S 8 T () S 16 T (File rvfile = ) S
(new) K
( File\(file + ") p
(.rvfile) str
("\);) p n
(195) # () S 8 T () S 16 T (FileWriter fwRv = ) S
(new) K
( FileWriter\(rvfile\);) p n
(196) # () N
(197) # () S 8 T () S 16 T (File sfile = ) S
(new) K
( File\(file + ") p
(.sfile) str
("\);) p n
(198) # () S 8 T () S 16 T (FileWriter fwS = ) S
(new) K
( FileWriter\(sfile\);) p n
(199) # () N
(200) # () S 8 T () S 16 T (File grfile = ) S
(new) K
( File\(file + ") p
(.grfile) str
("\);) p n
(201) # () S 8 T () S 16 T (FileWriter fwGr = ) S
(new) K
( FileWriter\(grfile\);) p n
(202) # () N
(203) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite metabolite : network.getMetabolites\(\)\) {) p n
(204) # () N
(205) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(metabolite.isInternal\(\)\) {) p n
(206) # () S 8 T () S 16 T () S 24 T () S 32 T (fwM.write\(") S
(\\") str
(" + metabolite + ") p
(\\") str
(" + ") p
( ) str
("\);) p n
(207) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Reaction reaction : network.getReactions\(\)\)) p n
0 T ( {) N
(208) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(reaction.getProducts\(\).containsKey\(m) p n
0 T (etabolite\)\) {) N
(209) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (fwS.write\(reaction.getProducts\(\)) N
0 T (.get\(metabolite\)) N
(210) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (.toString\(\)) N
(211) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (+ ") S
( ) str
("\);) p n
(212) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(else) K
( ) p
(if) K
( \(reaction.getReactants\(\).conta) p n
0 T (insKey\(metabolite\)\) {) N
(213) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (fwS.write\(") S
(-) str
(") p n
(214) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (+ reaction.getRe) N
0 T (actants\(\).get\(metabolite\)) N
(215) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
0 T (.toString\(\) + ") S
( ) str
("\);) p n
(216) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(else) K
( {) p n
(217) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (fwS.write\(0 + ") S
( ) str
("\);) p n
(218) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(219) # () N
(220) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(221) # () S 8 T () S 16 T () S 24 T () S 32 T (fwS.write\(") S
(\\n) str
("\);) p n
(222) # () S 8 T () S 16 T () S 24 T (}) N
(223) # () S 8 T () S 16 T (}) N
(224) # () S 8 T () S 16 T (fwM.close\(\);) N
(225) # () N
(226) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reaction : network.getReactions\(\)\) {) p n
(227) # () S 8 T () S 16 T () S 24 T (fwR.write\(") S
(\\") str
(" + reaction.getName\(\) + ") p
(\\") str
(" + ") p
( ) str
("\);) p n
(228) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(reaction.isReversible\(\)\) {) p n
(229) # () S 8 T () S 16 T () S 24 T () S 32 T (fwRv.write\(1 + ") S
( ) str
("\);) p n
(230) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K n
(231) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (fwRv.write\(0 + ") S
( ) str
("\);) p n
(232) # () S 8 T () S 16 T (}) N
(233) # () N
(234) # () S 8 T () S 16 T () S
(for) K
( \(String rule : network.getRules\(\)\) {) p n
(235) # () S 8 T () S 16 T () S 24 T () S
(// if rules created with interface) c n
(236) # () S
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(rule.startsWith\(") p
(IF) str
("\)\) {) p n
(237) # () S 8 T () S 16 T () S 24 T () S 32 T (String regRule = getRegEfmToolRule\(rule\);) N
(238) # () S 8 T () S 16 T () S 24 T () S 32 T (fwGr.write\(regRule\);) N
(239) # () N
(240) # () S 8 T () S 16 T () S 24 T (}) N
(RegEfmToolFormat.java) (Page 4/6) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/RegEfmToolFormat.java) (17/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 18
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(241) # () p 8 T () S 16 T () S 24 T () S
(// if already existing rules) c n
(242) # () S
() p 8 T () S 16 T () S 24 T () S
(else) K
( {) p n
(243) # () S 8 T () S 16 T () S 24 T () S 32 T (fwGr.write\(rule\);) N
(244) # () S 8 T () S 16 T () S 24 T (}) N
(245) # () S 8 T () S 16 T () S 24 T (fwGr.write\(") S
(\\n) str
("\);) p n
(246) # () S 8 T () S 16 T (}) N
(247) # () N
(248) # () S 8 T () S 16 T (fwR.close\(\);) N
(249) # () S 8 T () S 16 T (fwRv.close\(\);) N
(250) # () S 8 T () S 16 T (fwS.close\(\);) N
(251) # () S 8 T () S 16 T (fwGr.close\(\);) N
(252) # () N
(253) # () S 8 T () S 16 T () S
(if) K
( \(message\) {) p n
(254) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(255) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Successfully saved regEfmtool files !) str
(", ") p
(Succes) str
(",) p n
(256) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.INFORMATION_MESSAGE\);) N
(257) # () S 8 T () S 16 T (}) N
(258) # () N
(259) # () S 8 T (}) N
(260) # () N
(261) # () S 8 T () S
(// conversion string interface -> regEfMTool) c n
(262) # () S
() p 8 T () S
(public) K
( String getRegEfmToolRule\(String rule\) {) p n
(263) # () S 8 T () S 16 T (String regRule = \(""\);) N
(264) # () S 8 T () S 16 T (rule = rule.replace\(") S
(  ) str
(", ") p
( ) str
("\);) p n
(265) # () S 8 T () S 16 T (rule = rule.replace\(") S
(   ) str
(", ") p
( ) str
("\);) p n
(266) # () S 8 T () S 16 T (String[] tabRule = rule.split\(") S
( ) str
("\);) p n
(267) # () N
(268) # () S 8 T () S 16 T (String outputFlux = tabRule[tabRule.length - 1];) N
(269) # () S 8 T () S 16 T (String outputReaction = tabRule[tabRule.length - 3];) N
(270) # () N
(271) # () S 8 T () S 16 T (regRule += outputReaction;) N
(272) # () S 8 T () S 16 T (regRule += \(") S
( = ) str
("\);) p n
(273) # () N
(274) # () S 8 T () S 16 T () S
(// equal case) c n
(275) # () S
() p 8 T () S 16 T () S
(if) K
( \(tabRule.length == 8 && tabRule[3].equals\(tabRule[7]\)\) {) p n
(276) # () S 8 T () S 16 T () S 24 T (regRule += \(") S
(\() str
("\);) p n
(277) # () S 8 T () S 16 T () S 24 T (regRule += tabRule[3];) N
(278) # () S 8 T () S 16 T () S 24 T (regRule += tabRule[1];) N
(279) # () S 8 T () S 16 T () S 24 T (regRule += \(") S
( | ) str
("\);) p n
(280) # () S 8 T () S 16 T () S 24 T (regRule += tabRule[3];) N
(281) # () S 8 T () S 16 T () S 24 T (regRule += tabRule[1];) N
(282) # () S 8 T () S 16 T () S 24 T (regRule += \(") S
(\)) str
("\);) p n
(283) # () S 8 T () S 16 T (}) N
(284) # () N
(285) # () S 8 T () S 16 T () S
(else) K
( {) p n
(286) # () S 8 T () S 16 T () S 24 T () S
(// For closing the parenthesis in the end) c n
(287) # () S
() p 8 T () S 16 T () S 24 T () S
(int) k
( nbParenthesis = 0;) p n
(288) # () S 8 T () S 16 T () S 24 T () S
(// number of operators to know the number of parenthesis) c n
(289) # () S
() p 8 T () S 16 T () S 24 T () S
(int) k
( nbOperator = 0;) p n
(290) # () S 8 T () S 16 T () S 24 T (regRule += \(") S
(\() str
("\);) p n
(291) # () S 8 T () S 16 T () S 24 T (nbParenthesis++;) N
(292) # () N
(293) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < tabRule.length - 1; i++\) {) p n
(294) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(\(tabRule[i].equals\(") p
(AND) str
("\) || tabRule[i].equ) p n
0 T (als\(") S
(OR) str
("\)\)\) {) p n
(295) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbOperator++;) N
(296) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(297) # () S 8 T () S 16 T () S 24 T (}) N
(298) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(outputFlux.equals\(") p
(0) str
("\)\) && \(tabRule.length != 8\)\) {) p n
(299) # () S 8 T () S 16 T () S 24 T () S 32 T (regRule += \(") S
(!) str
("\);) p n
(300) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(nbOperator > 0\) {) p n
(301) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
(\() str
("\);) p n
(302) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbParenthesis++;) N
(303) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbOperator--;) N
(304) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(305) # () S 8 T () S 16 T () S 24 T (}) N
(RegEfmToolFormat.java) (Page 5/6) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(306) # () p 8 T () S 16 T () S 24 T () S
(if) K
( \(!\(outputFlux.equals\(") p
(0) str
("\)\) && \(tabRule.length != 8\)\) ) p n
0 T ({) N
(307) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(nbOperator > 1\) {) p n
(308) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
(\() str
("\);) p n
(309) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbParenthesis++;) N
(310) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbOperator--;) N
(311) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(312) # () S 8 T () S 16 T () S 24 T (}) N
(313) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 1; i < tabRule.length - 4; i += 4\) {) p n
(314) # () N
(315) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!outputFlux.equals\(tabRule[i + 2]\)) p n
(316) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& \(\(tabRule.length == 8\)\)\) {) N
(317) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
(!) str
("\);) p n
(318) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(319) # () N
(320) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tabRule[i + 2].equals\(") p
(0) str
("\) && \(!\(tabRule.len) p n
0 T (gth == 8\)\)\) {) N
(321) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
(\(!) str
("\);) p n
(322) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbParenthesis++;) N
(323) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(324) # () S 8 T () S 16 T () S 24 T () S 32 T (regRule += tabRule[i + 2]; ) S
(// flux) c n
(325) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (regRule += tabRule[i]; ) S
(// metabolite name) c n
(326) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tabRule[i + 2].equals\(") p
(0) str
("\) && tabRule.length) p n
0 T ( >= 12\) {) N
(327) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
(\)) str
("\);) p n
(328) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbParenthesis--;) N
(329) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(330) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tabRule[i + 2].equals\(") p
(0) str
("\) && \(!\(tabRule.len) p n
0 T (gth == 8\)\)) N
(331) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& i != 1\) {) N
(332) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
(\)) str
("\);) p n
(333) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbParenthesis--;) N
(334) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(335) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tabRule[i + 2].equals\(") p
(1) str
("\) && \(tabRule.lengt) p n
0 T (h > 16\)\) {) N
(336) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
(\)) str
("\);) p n
(337) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbParenthesis--;) N
(338) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(339) # () N
(340) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tabRule[i + 3].equals\(") p
(AND) str
("\)\) {) p n
(341) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
( & ) str
("\);) p n
(342) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(343) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tabRule[i + 3].equals\(") p
(OR) str
("\)\) {) p n
(344) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (regRule += \(") S
(|) str
("\);) p n
(345) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(346) # () N
(347) # () S 8 T () S 16 T () S 24 T (}) N
(348) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \(nbParenthesis > 0\) {) p n
(349) # () S 8 T () S 16 T () S 24 T () S 32 T (regRule += \(") S
(\)) str
("\);) p n
(350) # () S 8 T () S 16 T () S 24 T () S 32 T (nbParenthesis--;) N
(351) # () S 8 T () S 16 T () S 24 T (}) N
(352) # () S 8 T () S 16 T (}) N
(353) # () N
(354) # () S 8 T () S 16 T () S
(return) K
( regRule;) p n
(355) # () S 8 T (}) N
(356) # () N
(357) # (}) N
(RegEfmToolFormat.java) (Page 6/6) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/RegEfmToolFormat.java) (18/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 19
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model.data;) p n
(20) # () N
(21) # () S
(import) K
( java.io.File;) p n
(22) # () S
(import) K
( java.io.FileWriter;) p n
(23) # () S
(import) K
( java.io.IOException;) p n
(24) # () S
(import) K
( java.io.PrintWriter;) p n
(25) # () S
(import) K
( java.text.DateFormat;) p n
(26) # () S
(import) K
( java.text.SimpleDateFormat;) p n
(27) # () S
(import) K
( java.util.Date;) p n
(28) # () S
(import) K
( java.util.HashMap;) p n
(29) # () S
(import) K
( java.util.List;) p n
(30) # () S
(import) K
( java.util.Map;) p n
(31) # () S
(import) K
( java.util.Map.Entry;) p n
(32) # () N
(33) # () S
(import) K
( model.Metabolite;) p n
(34) # () S
(import) K
( model.Reaction;) p n
(35) # () S
(import) K
( controler.Var;) p n
(36) # () N
(37) # () S
(public) K
( ) p
(class) K
( ) p
(ExportTlp) L
( {) p n
(38) # () N
(39) # () S 8 T () S
(public) K
( ExportTlp\(String outName, List<Metabolite> listMet,) p n
(40) # () S 8 T () S 16 T () S 24 T (List<Reaction> listReac\) ) S
(throws) K
( IOException {) p n
(41) # () N
(42) # () S 8 T () S 16 T (File file = ) S
(new) K
( File\(outName\);) p n
(43) # () S 8 T () S 16 T (FileWriter fw = ) S
(new) K
( FileWriter\(file\);) p n
(44) # () S 8 T () S 16 T (PrintWriter pw = ) S
(new) K
( PrintWriter\(fw\);) p n
(45) # () S 8 T () S 16 T (pw.println\(") S
(\(tlp \\"2.3\\") str
("\);) p n
(46) # () N
(47) # () S 8 T () S 16 T (DateFormat dateFormat = ) S
(new) K
( SimpleDateFormat\(") p
(MM-dd-yyyy) str
("\);) p n
(48) # () S 8 T () S 16 T (Date date = ) S
(new) K
( Date\(\);) p n
(49) # () N
(50) # () S 8 T () S 16 T (pw.println\(") S
(\(date \\") str
(" + dateFormat.format\(date\) + ") p
(\\"\)) str
("\);) p n
(51) # () S 8 T () S 16 T (pw.println\(") S
(\(comment \\"Generated by bioinfos\\"\)) str
("\);) p n
(52) # () N
(53) # () S 8 T () S 16 T () S
(// map to link a name to the ID of his node in the graph) c n
(54) # () S
() p 8 T () S 16 T (Map<String, Integer> nodeId = ) S
(new) K
( HashMap<String, Integer>\(\);) p n
(55) # () S 8 T () S 16 T () S
(int) k
( id = 0;) p n
(56) # () N
(57) # () S 8 T () S 16 T () S
(int) k
( nbNodes = 0;) p n
(58) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : listReac\) {) p n
(59) # () S 8 T () S 16 T () S 24 T (nodeId.put\(reac.getName\(\), id\);) N
(60) # () S 8 T () S 16 T () S 24 T (id++;) N
(61) # () S 8 T () S 16 T () S 24 T (nbNodes++;) N
(62) # () S 8 T () S 16 T (}) N
(63) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite metab : listMet\) {) p n
(64) # () S 8 T () S 16 T () S 24 T (nodeId.put\(metab.getName\(\), id\);) N
(65) # () S 8 T () S 16 T () S 24 T (id++;) N
(ExportTlp.java) (Page 1/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T () S 24 T (nbNodes++;) N
(67) # () S 8 T () S 16 T (}) N
(68) # () N
(69) # () S 8 T () S 16 T (pw.println\(") S
(\(nb_nodes ) str
(" + nbNodes + ") p
(\)) str
("\);) p n
(70) # () S 8 T () S 16 T (pw.println\(") S
(\(nodes 0..) str
(" + \(nbNodes - 1\) + ") p
(\)) str
("\);) p n
(71) # () N
(72) # () S 8 T () S 16 T () S
(int) k
( nbEdges = 0;) p n
(73) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : listReac\) {) p n
(74) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Metabolite met : reac.getListMetabolite\(\)\) {) p n
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// if the metabolite is in the list) c n
(76) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(nodeId.containsKey\(met.getName\(\)\)\) {) p n
(77) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nbEdges++;) N
(78) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(79) # () S 8 T () S 16 T () S 24 T (}) N
(80) # () S 8 T () S 16 T (}) N
(81) # () S 8 T () S 16 T (pw.println\(") S
(\(nb_edges ) str
(" + nbEdges + ") p
(\)) str
("\);) p n
(82) # () N
(83) # () S 8 T () S 16 T () S
(int) k
( idEdge = 0;) p n
(84) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : listReac\) {) p n
(85) # () N
(86) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Metabolite reactant : reac.getListReactants\(\)\) {) p n
(87) # () N
(88) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// if the metabolite is in the list) c n
(89) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(nodeId.containsKey\(reactant.getName\(\)\)\) {) p n
(90) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (pw.println\(") S
(\(edge ) str
(" + idEdge + ") p
( ) str
(") p n
(91) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ nodeId.get\(reactant.ge) N
0 T (tName\(\)\) + ") S
( ) str
(") p n
(92) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ nodeId.get\(reac.getNam) N
0 T (e\(\)\) + ") S
(\)) str
("\);) p n
(93) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (idEdge++;) N
(94) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(95) # () S 8 T () S 16 T () S 24 T (}) N
(96) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Metabolite product : reac.getListProducts\(\)\) {) p n
(97) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// if the metabolite is in the list) c n
(98) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(nodeId.containsKey\(product.getName\(\)\)\) {) p n
(99) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (pw.println\(") S
(\(edge ) str
(" + idEdge + ") p
( ) str
(") p n
(100) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ nodeId.get\(reac.getNam) N
0 T (e\(\)\) + ") S
( ) str
(") p n
(101) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ nodeId.get\(product.get) N
0 T (Name\(\)\) + ") S
(\)) str
("\);) p n
(102) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (idEdge++;) N
(103) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(104) # () S 8 T () S 16 T () S 24 T (}) N
(105) # () S 8 T () S 16 T (}) N
(106) # () N
(107) # () S 8 T () S 16 T () S
(// Add labels on nodes) c n
(108) # () S
() p 8 T () S 16 T (pw.println\(") S
(\(property  0 string \\"viewLabel\\") str
("\);) p n
(109) # () S 8 T () S 16 T (pw.println\(") S
(\(default \\"\\" \\"\\"\)) str
("\);) p n
(110) # () S 8 T () S 16 T () S
(for) K
( \(Entry<String, Integer> entry : nodeId.entrySet\(\)\) {) p n
(111) # () S 8 T () S 16 T () S 24 T (pw.println\(") S
(\(node ) str
(" + entry.getValue\(\) + ") p
( \\") str
(" + entry.getK) p n
0 T (ey\(\)) N
(112) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ ") S
(\\"\)) str
("\);) p n
(113) # () N
(114) # () S 8 T () S 16 T (}) N
(115) # () S 8 T () S 16 T (pw.println\(") S
(\)) str
("\);) p n
(116) # () S 8 T () S 16 T () S
(// sizes of nodes and edges) c n
(117) # () S
() p 8 T () S 16 T (pw.println\(") S
(\(property  0 size \\"viewSize\\") str
("\);) p n
(118) # () S 8 T () S 16 T (pw.println\(") S
(\(default \\"\(13,13,5\)\\" \\"\(0.125,0.125,0\)\\"\)) str
("\);) p n
(119) # () S 8 T () S 16 T (pw.println\(") S
(\)) str
("\);) p n
(120) # () N
(121) # () S 8 T () S 16 T () S
(// size of labels) c n
(122) # () S
() p 8 T () S 16 T (pw.println\(") S
(\(property  0 int \\"viewFontSize\\") str
("\);) p n
(123) # () S 8 T () S 16 T (pw.println\(") S
(\(default \\"5\\" \\"5\\"\)) str
("\);) p n
(124) # () S 8 T () S 16 T (pw.println\(") S
(\)) str
("\);) p n
(125) # () N
(126) # () S 8 T () S 16 T () S
(// Position of labels) c n
(ExportTlp.java) (Page 2/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/ExportTlp.java) (19/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 20
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(127) # () p 8 T () S 16 T (pw.println\(") S
(\(property  0 int \\"viewLabelPosition\\") str
("\);) p n
(128) # () S 8 T () S 16 T (pw.println\(") S
(\(default \\"1\\" \\"1\\"\)) str
("\);) p n
(129) # () S 8 T () S 16 T (pw.println\(") S
(\)) str
("\);) p n
(130) # () N
(131) # () S 8 T () S 16 T () S
(// shape nodes) c n
(132) # () S
() p 8 T () S 16 T (pw.println\(") S
(\(property  0 int \\"viewShape\\") str
("\);) p n
(133) # () S 8 T () S 16 T (pw.println\(") S
(\(default \\"2\\" \\"0\\"\)) str
("\);) p n
(134) # () N
(135) # () S 8 T () S 16 T () S
(// reactions in square shape) c n
(136) # () S
() p 8 T () S 16 T () S
(for) K
( \(Reaction reac : listReac\) {) p n
(137) # () S 8 T () S 16 T () S 24 T (pw.println\(") S
(\(node ) str
(" + nodeId.get\(reac.getName\(\)\) + ") p
( ) str
(" + ") p
() str n
0 T (\\"4\\"\)) S
("\);) p n
(138) # () N
(139) # () S 8 T () S 16 T (}) N
(140) # () S 8 T () S 16 T (pw.println\(") S
(\)) str
("\);) p n
(141) # () S 8 T () S 16 T () S
(//) c n
(142) # () S
() p 8 T () S 16 T () S
(// different color for reactions and metabolites) c n
(143) # () S
() p 8 T () S 16 T (pw.println\(") S
(\(property  0 color \\"viewColor\\") str
("\);) p n
(144) # () S 8 T () S 16 T (pw.println\(") S
(\(default \\"\(102,178,255,255\)\\" \\"\(0,0,0,255\)\\"\)) str
("\);) p n
(145) # () S 8 T () S 16 T () S
(// reactions color) c n
(146) # () S
() p 8 T () S 16 T () S
(for) K
( \(Reaction reac : listReac\) {) p n
(147) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(reac.isReversible\(\)\) {) p n
(148) # () S 8 T () S 16 T () S 24 T () S 32 T (pw.println\(") S
(\(node ) str
(" + nodeId.get\(reac.getName\(\)\) ) p n
0 T (+ ") S
( ) str
(" + ") p
(\\"\() str
(") p n
(149) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.reacRevColor.getRed\(\) + ") S
(,) str
() p n
0 T (") N
(150) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.reacRevColor.getGreen\(\) + ) N
0 T (") S
(,) str
(") p n
(151) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.reacRevColor.getBlue\(\) + ") S
() str n
0 T (,) S
(") p n
(152) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.reacRevColor.getAlpha\(\) + ) N
0 T (") S
(\)\\"\)) str
("\);) p n
(153) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(154) # () S 8 T () S 16 T () S 24 T () S 32 T (pw.println\(") S
(\(node ) str
(" + nodeId.get\(reac.getName\(\)\) ) p n
0 T (+ ") S
( ) str
(" + ") p
(\\"\() str
(") p n
(155) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.reacIrrevColor.getRed\(\) + ) N
0 T (") S
(,) str
(") p n
(156) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.reacIrrevColor.getGreen\(\) ) N
0 T (+ ") S
(,) str
(") p n
(157) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.reacIrrevColor.getBlue\(\) +) N
0 T ( ") S
(,) str
(") p n
(158) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.reacIrrevColor.getAlpha\(\) ) N
0 T (+ ") S
(\)\\"\)) str
("\);) p n
(159) # () S 8 T () S 16 T () S 24 T (}) N
(160) # () N
(161) # () S 8 T () S 16 T (}) N
(162) # () S 8 T () S 16 T () S
(// metab colors) c n
(163) # () S
() p 8 T () S 16 T () S
(for) K
( \(Metabolite metab : listMet\) {) p n
(164) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(metab.isInternal\(\)\) {) p n
(165) # () S 8 T () S 16 T () S 24 T () S 32 T (pw.println\(") S
(\(node ) str
(" + nodeId.get\(metab.getName\(\)\)) p n
0 T ( + ") S
( ) str
(" + ") p
(\\"\() str
(") p n
(166) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.metabIntColor.getRed\(\) + ") S
() str n
0 T (,) S
(") p n
(167) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.metabIntColor.getGreen\(\) +) N
0 T ( ") S
(,) str
(") p n
(168) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.metabIntColor.getBlue\(\) + ) N
0 T (") S
(,) str
(") p n
(169) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.metabIntColor.getAlpha\(\) +) N
0 T ( ") S
(\)\\"\)) str
("\);) p n
(170) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(171) # () S 8 T () S 16 T () S 24 T () S 32 T (pw.println\(") S
(\(node ) str
(" + nodeId.get\(metab.getName\(\)\)) p n
0 T ( + ") S
( ) str
(" + ") p
(\\"\() str
(") p n
(172) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.metabExtColor.getRed\(\) + ") S
() str n
0 T (,) S
(") p n
(173) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.metabExtColor.getGreen\(\) +) N
0 T ( ") S
(,) str
(") p n
(ExportTlp.java) (Page 3/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(174) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.metabExtColor.getBlue\(\) + ) N
0 T (") S
(,) str
(") p n
(175) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Var.metabExtColor.getAlpha\(\) +) N
0 T ( ") S
(\)\\"\)) str
("\);) p n
(176) # () S 8 T () S 16 T () S 24 T (}) N
(177) # () S 8 T () S 16 T (}) N
(178) # () S 8 T () S 16 T (pw.println\(") S
(\)) str
("\);) p n
(179) # () S 8 T () S 16 T () S
(//) c n
(180) # () S
() p 8 T () S 16 T (pw.println\(") S
(\)) str
("\);) p n
(181) # () S 8 T () S 16 T (pw.close\(\);) N
(182) # () S 8 T (}) N
(183) # (}) N
(ExportTlp.java) (Page 4/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/ExportTlp.java) (20/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 21
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( model.data;) p n
(20) # () N
(21) # () S
(import) K
( java.io.File;) p n
(22) # () S
(import) K
( java.io.FileNotFoundException;) p n
(23) # () S
(import) K
( java.io.IOException;) p n
(24) # () N
(25) # () S
(import) K
( javax.swing.JOptionPane;) p n
(26) # () S
(import) K
( javax.xml.stream.XMLStreamException;) p n
(27) # () N
(28) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(29) # () N
(30) # () S
(import) K
( org.sbml.jsbml.SBMLException;) p n
(31) # () N
(32) # () N
(33) # () S
(public) K
( ) p
(class) K
( ) p
(TlpFormat) L
( ) p
(implements) K
( Format {) p n
(34) # () N
(35) # () S 8 T () S
(public) K
( MetabolicNetworkItf load\(File[] file\) ) p
(throws) K
( FileNotFoundExceptio) p n
0 T (n,) N
(36) # () S 8 T () S 16 T () S 24 T (IOException, ClassNotFoundException {) N
(37) # () N
(38) # () S 8 T () S 16 T () S
(// not implemented) c n
(39) # () N
(40) # () S
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
(41) # () S 8 T (}) N
(42) # () N
(43) # () S 8 T () S
(public) K
( ) p
(void) k
( save\(File file, MetabolicNetworkItf network, ) p
(boolean) k
( message) p n
0 T (\)) N
(44) # () S 8 T () S 16 T () S 24 T () S
(throws) K
( IOException, SBMLException, XMLStreamException {) p n
(45) # () N
(46) # () S 8 T () S 16 T (String outputName = file.getName\(\) + ") S
(.tlp) str
(";) p n
(47) # () N
(48) # () S 8 T () S 16 T (ExportTlp et = ) S
(new) K
( ExportTlp\(file.getAbsolutePath\(\) + ") p
(.tlp) str
(",) p n
(49) # () S 8 T () S 16 T () S 24 T () S 32 T (network.getMetabolites\(\), network.getReactions\(\)) N
0 T (\);) N
(50) # () N
(51) # () S 8 T () S 16 T () S
(if) K
( \(message\) {) p n
(52) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Successfully saved Tlp file ) str
() p n
0 T (") N
(53) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ outputName + ") S
( !) str
(", ") p
(Succes) str
(",) p n
(54) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.INFORMATION_MESSAGE\);) N
(55) # () S 8 T () S 16 T (}) N
(56) # () S 8 T (}) N
(57) # (}) N
(TlpFormat.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./model/data/TlpFormat.java) (21/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 22
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.load;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.io.BufferedReader;) p n
(24) # () S
(import) K
( java.io.BufferedWriter;) p n
(25) # () S
(import) K
( java.io.File;) p n
(26) # () S
(import) K
( java.io.FileReader;) p n
(27) # () S
(import) K
( java.io.FileWriter;) p n
(28) # () S
(import) K
( java.io.IOException;) p n
(29) # () S
(import) K
( java.util.ArrayList;) p n
(30) # () S
(import) K
( java.util.List;) p n
(31) # () N
(32) # () S
(import) K
( javax.swing.JButton;) p n
(33) # () S
(import) K
( javax.swing.JFileChooser;) p n
(34) # () S
(import) K
( javax.swing.JMenuItem;) p n
(35) # () S
(import) K
( javax.swing.SwingUtilities;) p n
(36) # () S
(import) K
( javax.swing.UIManager;) p n
(37) # () N
(38) # () S
(import) K
( model.data.MetatoolFormat;) p n
(39) # () S
(import) K
( model.data.ProjectFormat;) p n
(40) # () S
(import) K
( model.data.RegEfmToolFormat;) p n
(41) # () S
(import) K
( model.data.SBMLFormat;) p n
(42) # () S
(import) K
( controler.ExtensionFilter;) p n
(43) # () S
(import) K
( controler.MainControler;) p n
(44) # () S
(import) K
( controler.Var;) p n
(45) # () N
(46) # () S
(//load file depending on the type ) c n
(47) # () S
(public) K
( ) p
(class) K
( ) p
(MenuOpenListener) L
( ) p
(implements) K
( ActionListener {) p n
(48) # () N
(49) # () S 8 T () S
(private) K
( MainControler controler;) p n
(50) # () S 8 T () S
(private) K
( JMenuItem openProject;) p n
(51) # () S 8 T () S
(private) K
( JMenuItem openSBML;) p n
(52) # () S 8 T () S
(private) K
( JMenuItem openMetatool;) p n
(53) # () S 8 T () S
(private) K
( JMenuItem openRegefmtool;) p n
(54) # () S 8 T () S
(private) K
( JButton button;) p n
(55) # () S 8 T () S
(private) K
( JFileChooser fc;) p n
(56) # () S 8 T (List<String> extensions = ) S
(new) K
( ArrayList<String>\(\);) p n
(57) # () S 8 T () S
(private) K
( String type = "";) p n
(58) # () N
(59) # () S 8 T () S
(public) K
( MenuOpenListener\(MainControler controler, JMenuItem openProject,) p n
(60) # () S 8 T () S 16 T () S 24 T (JMenuItem openSBML, JMenuItem openMetatool, JMenuItem op) N
0 T (enRegefmtool\) {) N
(61) # () S 8 T () S 16 T (this.controler = controler;) N
(62) # () S 8 T () S 16 T (this.openProject = openProject;) N
(63) # () S 8 T () S 16 T (this.openSBML = openSBML;) N
(64) # () S 8 T () S 16 T (this.openMetatool = openMetatool;) N
(MenuOpenListener.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T (this.openRegefmtool = openRegefmtool;) N
(66) # () S 8 T () S 16 T (fc = ) S
(new) K
( JFileChooser\(\);) p n
(67) # () S 8 T (}) N
(68) # () N
(69) # () S 8 T () S
(public) K
( MenuOpenListener\(MainControler controler, JButton button\) {) p n
(70) # () S 8 T () S 16 T (this.controler = controler;) N
(71) # () S 8 T () S 16 T (this.button = button;) N
(72) # () S 8 T () S 16 T (fc = ) S
(new) K
( JFileChooser\(\);) p n
(73) # () S 8 T () S 16 T () N
(74) # () S 8 T (}) N
(75) # () N
(76) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(77) # () S 8 T () S 16 T (fc.setMultiSelectionEnabled\() S
(true) k
(\);) p n
(78) # () N
(79) # () S 8 T () S 16 T () S
(//The loader is defined by the clicked button) c n
(80) # () S
() p 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == openProject || e.getSource\(\) == button\) {) p n
(81) # () S 8 T () S 16 T () S 24 T (type=") S
(prj) str
(";) p n
(82) # () S 8 T () S 16 T () S 24 T (extensions.add\(Var.extension\);) N
(83) # () N
(84) # () S 8 T () S 16 T () S 24 T (fc.setFileFilter\() S
(new) K
( ExtensionFilter\(extensions, ") p
(Project f) str n
0 T (ile) S
("\)\);) p n
(85) # () N
(86) # () S 8 T () S 16 T () S 24 T (controler.setLoader\() S
(new) K
( ProjectFormat\(controler\)\);) p n
(87) # () S 8 T () S 16 T () S 24 T (UIManager.put\(") S
(FileChooser.openDialogTitleText) str
(",) p n
(88) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Open a project file) str
("\);) p n
(89) # () S 8 T () S 16 T (}) N
(90) # () S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == openSBML\) {) p n
(91) # () S 8 T () S 16 T () S 24 T (type=") S
(sbml) str
(";) p n
(92) # () S 8 T () S 16 T () S 24 T (extensions.add\(") S
(.xml) str
("\);) p n
(93) # () N
(94) # () S 8 T () S 16 T () S 24 T (fc.setFileFilter\() S
(new) K
( ExtensionFilter\(extensions, ") p
(SBML fi) str n
0 T (les) S
("\)\);) p n
(95) # () N
(96) # () S 8 T () S 16 T () S 24 T (controler.setLoader\() S
(new) K
( SBMLFormat\(\)\);) p n
(97) # () S 8 T () S 16 T () S 24 T (UIManager) N
(98) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.put\(") S
(FileChooser.openDialogTitleText) str
(", ") p
(Open a SB) str n
0 T (ML file) S
("\);) p n
(99) # () S 8 T () S 16 T (}) N
(100) # () S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == openMetatool\) {) p n
(101) # () S 8 T () S 16 T () S 24 T (type=") S
(met) str
(";) p n
(102) # () S 8 T () S 16 T () S 24 T (extensions.add\(") S
(.dat) str
("\);) p n
(103) # () S 8 T () S 16 T () S 24 T (extensions.add\(") S
(.txt) str
("\);) p n
(104) # () N
(105) # () S 8 T () S 16 T () S 24 T (fc.setFileFilter\() S
(new) K
( ExtensionFilter\(extensions,) p n
(106) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Metatool files \(.dat or .txt\)) str
("\)\);) p n
(107) # () N
(108) # () S 8 T () S 16 T () S 24 T (controler.setLoader\() S
(new) K
( MetatoolFormat\(\)\);) p n
(109) # () S 8 T () S 16 T () S 24 T (UIManager.put\(") S
(FileChooser.openDialogTitleText) str
(",) p n
(110) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Open a Metatool file) str
("\);) p n
(111) # () S 8 T () S 16 T (}) N
(112) # () S 8 T () S 16 T () N
(113) # () S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == openRegefmtool\) {) p n
(114) # () N
(115) # () S 8 T () S 16 T () S 24 T (extensions.add\(") S
(.rfile) str
("\);) p n
(116) # () S 8 T () S 16 T () S 24 T (extensions.add\(") S
(.sfile) str
("\);) p n
(117) # () S 8 T () S 16 T () S 24 T (extensions.add\(") S
(.rvfile) str
("\);) p n
(118) # () S 8 T () S 16 T () S 24 T (extensions.add\(") S
(.mfile) str
("\);) p n
(119) # () S 8 T () S 16 T () S 24 T (extensions.add\(") S
(.grfile) str
("\);) p n
(120) # () N
(121) # () S 8 T () S 16 T () S 24 T (fc.setFileFilter\() S
(new) K
( ExtensionFilter\(extensions,) p n
(122) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(regEfmTool Files) str
("\)\);) p n
(123) # () S 8 T () S 16 T () S 24 T () N
(124) # () S 8 T () S 16 T () S 24 T () N
(125) # () S 8 T () S 16 T () S 24 T (controler.setLoader\() S
(new) K
( RegEfmToolFormat\(\)\);) p n
(126) # () S 8 T () S 16 T () S 24 T (UIManager.put\(") S
(FileChooser.openDialogTitleText) str
(",) p n
(127) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Open regEfmTool files) str
("\);) p n
(MenuOpenListener.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/load/MenuOpenListener.java) (22/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 23
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(128) # () p 8 T () S 16 T (}) N
(129) # () N
(130) # () S 8 T () S 16 T (SwingUtilities.updateComponentTreeUI\(fc\);) N
(131) # () S 8 T () S 16 T () S
(int) k
( returnVal = fc.showOpenDialog\() p
(null) k
(\);) p n
(132) # () N
(133) # () S 8 T () S 16 T () S
(// if the file has the right extension) c n
(134) # () S
() p 8 T () S 16 T () S
(if) K
( \(returnVal == JFileChooser.APPROVE_OPTION\) {) p n
(135) # () S 8 T () S 16 T () S 24 T (File[] file = fc.getSelectedFiles\(\);) N
(136) # () S 8 T () S 16 T () S 24 T () N
(137) # () S 8 T () S 16 T () S 24 T (System.out.println\(file\);) N
(138) # () N
(139) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(140) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.loadNetwork\(file\);) N
(141) # () S 8 T () S 16 T () S 24 T () S 32 T () N
(142) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(type!=""\){) p n
(143) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(144) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(//first we open the file to get the firs) c n
0 T (t 4 lines) N
(145) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (BufferedReader in = ) S
(new) K
( BufferedReader\() p
(n) K n
0 T (ew) S
( FileReader\() p
(new) K
( File\() p n
(146) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (") S
(recent.txt) str
("\)\)\);) p n
(147) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (String input = in.readLine\(\);) N
(148) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (String content="";) N
(149) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(150) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(int) k
( nbligne=1;) p n
(151) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(while) K
( \(input != ) p
(null) k
(\) {) p n
(152) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(153) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(//we only get the first 4 lines) c n
(154) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(nbligne>4\){) p n
(155) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(break) K
(;) p n
(156) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
(157) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () N
(158) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (content+=input+") S
(\\n) str
(";) p n
(159) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () N
(160) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (nbligne++;) N
(161) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (input = in.readLine\(\);) N
(162) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(163) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(164) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (BufferedWriter out = ) S
(new) K
( BufferedWriter\() p
() K n
0 T (new) S
( FileWriter\() p
(new) K
( File\() p n
(165) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (") S
(recent.txt) str
("\),) p
(false) k
(\)\);) p n
(166) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(167) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (out.write\(file[0].getAbsolutePath\(\)+") S
( ) str
("+) p n
0 T (type+") S
(\\n) str
("\);) p n
(168) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (out.write\(content\);) N
(169) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(170) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (out.close\(\);) N
(171) # () S 8 T () S 16 T () S 24 T () S 32 T (}) S 40 T () N
(172) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(ClassNotFoundException e1\) {) p n
(173) # () S 8 T () S 16 T () S 24 T () S 32 T (e1.printStackTrace\(\);) N
(174) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(175) # () S 8 T () S 16 T () S 24 T () S 32 T (e1.printStackTrace\(\);) N
(176) # () S 8 T () S 16 T () S 24 T (}) N
(177) # () S 8 T () S 16 T (}) N
(178) # () S 8 T () S 16 T (fc = ) S
(new) K
( JFileChooser\(\);) p n
(179) # () S 8 T () S 16 T (extensions.clear\(\);) N
(180) # () S 8 T (}) N
(181) # () N
(182) # (}) N
(MenuOpenListener.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/load/MenuOpenListener.java) (23/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 24
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.save;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.io.IOException;) p n
(24) # () N
(25) # () S
(import) K
( controler.MainControler;) p n
(26) # () N
(27) # () S
(//Save the network) c n
(28) # () S
(public) K
( ) p
(class) K
( ) p
(ButtonSaveListener) L
( ) p
(implements) K
( ActionListener {) p n
(29) # () N
(30) # () S 8 T () S
(private) K
( MainControler controler;) p n
(31) # () N
(32) # () S 8 T () S
(public) K
( ButtonSaveListener\(MainControler controler\) {) p n
(33) # () S 8 T () S 16 T (this.controler = controler;) N
(34) # () S 8 T (}) N
(35) # () N
(36) # () S 8 T (@Override) N
(37) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(38) # () S 8 T () S 16 T () S
(try) K
( {) p n
(39) # () S 8 T () S 16 T () S 24 T (controler.saveProject\(\);) N
(40) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(41) # () S 8 T () S 16 T () S 24 T (e1.printStackTrace\(\);) N
(42) # () S 8 T () S 16 T (}) N
(43) # () N
(44) # () S 8 T (}) N
(45) # () N
(46) # (}) N
(ButtonSaveListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/save/ButtonSaveListener.java) (24/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 25
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.save;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.io.File;) p n
(24) # () S
(import) K
( java.io.IOException;) p n
(25) # () N
(26) # () S
(import) K
( javax.swing.JFileChooser;) p n
(27) # () S
(import) K
( javax.swing.JMenuItem;) p n
(28) # () S
(import) K
( javax.swing.SwingUtilities;) p n
(29) # () S
(import) K
( javax.swing.UIManager;) p n
(30) # () S
(import) K
( javax.xml.stream.XMLStreamException;) p n
(31) # () N
(32) # () S
(import) K
( model.data.MetatoolFormat;) p n
(33) # () S
(import) K
( model.data.ProjectFormat;) p n
(34) # () S
(import) K
( model.data.RegEfmToolFormat;) p n
(35) # () S
(import) K
( model.data.SBMLFormat;) p n
(36) # () S
(import) K
( model.data.TlpFormat;) p n
(37) # () N
(38) # () S
(import) K
( org.sbml.jsbml.SBMLException;) p n
(39) # () N
(40) # () S
(import) K
( controler.MainControler;) p n
(41) # () N
(42) # () S
(public) K
( ) p
(class) K
( ) p
(MenuSaveListener) L
( ) p
(implements) K
( ActionListener {) p n
(43) # () N
(44) # () S 8 T () S
(private) K
( MainControler controler;) p n
(45) # () S 8 T () S
(private) K
( JMenuItem saveProject;) p n
(46) # () S 8 T () S
(private) K
( JMenuItem saveSBML;) p n
(47) # () S 8 T () S
(private) K
( JMenuItem saveMetatool;) p n
(48) # () S 8 T () S
(private) K
( JMenuItem saveRegEfmTool;) p n
(49) # () S 8 T () S
(private) K
( JMenuItem saveTlp;) p n
(50) # () S 8 T () S
(private) K
( JMenuItem save;) p n
(51) # () S 8 T () S
(private) K
( JFileChooser fc = ) p
(new) K
( JFileChooser\(\);) p n
(52) # () N
(53) # () S 8 T () S
(public) K
( MenuSaveListener\(MainControler controler, JMenuItem saveProject,) p n
(54) # () S 8 T () S 16 T () S 24 T (JMenuItem saveSBML, JMenuItem saveMetatool,) N
(55) # () S 8 T () S 16 T () S 24 T (JMenuItem saveRegEfmTool, JMenuItem saveTlp, JMenuItem s) N
0 T (ave\) {) N
(56) # () S 8 T () S 16 T (this.controler = controler;) N
(57) # () S 8 T () S 16 T (this.saveProject = saveProject;) N
(58) # () S 8 T () S 16 T (this.saveSBML = saveSBML;) N
(59) # () S 8 T () S 16 T (this.save = save;) N
(60) # () S 8 T () S 16 T (this.saveMetatool = saveMetatool;) N
(61) # () S 8 T () S 16 T (this.saveRegEfmTool = saveRegEfmTool;) N
(62) # () S 8 T () S 16 T (this.saveTlp = saveTlp;) N
(63) # () S 8 T (}) N
(64) # () N
(MenuSaveListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(66) # () N
(67) # () S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == save\) {) p n
(68) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(69) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.saveProject\(\);) N
(70) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(71) # () S 8 T () S 16 T () S 24 T () S 32 T (e1.printStackTrace\(\);) N
(72) # () S 8 T () S 16 T () S 24 T (}) N
(73) # () S 8 T () S 16 T () S 24 T () S
(return) K
(;) p n
(74) # () S 8 T () S 16 T (}) N
(75) # () S 8 T () S 16 T () S
(// The loader is defined by the clicked button) c n
(76) # () S
() p 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == saveProject\) {) p n
(77) # () S 8 T () S 16 T () S 24 T (controler.setSaver\() S
(new) K
( ProjectFormat\(controler\)\);) p n
(78) # () S 8 T () S 16 T () S 24 T (UIManager.put\(") S
(FileChooser.saveDialogTitleText) str
(",) p n
(79) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Save as a project file) str
("\);) p n
(80) # () S 8 T () S 16 T (}) N
(81) # () S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == saveSBML\) {) p n
(82) # () S 8 T () S 16 T () S 24 T (controler.setSaver\() S
(new) K
( SBMLFormat\(\)\);) p n
(83) # () S 8 T () S 16 T () S 24 T (UIManager.put\(") S
(FileChooser.saveDialogTitleText) str
(",) p n
(84) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Save as a SBML file) str
("\);) p n
(85) # () S 8 T () S 16 T (}) N
(86) # () S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == saveMetatool\) {) p n
(87) # () S 8 T () S 16 T () S 24 T (controler.setSaver\() S
(new) K
( MetatoolFormat\(\)\);) p n
(88) # () S 8 T () S 16 T () S 24 T (UIManager.put\(") S
(FileChooser.saveDialogTitleText) str
(",) p n
(89) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Save as a Metatoolfile) str
("\);) p n
(90) # () S 8 T () S 16 T (}) N
(91) # () S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == saveRegEfmTool\) {) p n
(92) # () S 8 T () S 16 T () S 24 T (controler.setSaver\() S
(new) K
( RegEfmToolFormat\(\)\);) p n
(93) # () S 8 T () S 16 T () S 24 T (UIManager.put\(") S
(FileChooser.saveDialogTitleText) str
(",) p n
(94) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Save as a RegEfmToll files) str
("\);) p n
(95) # () S 8 T () S 16 T (}) N
(96) # () S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == saveTlp\) {) p n
(97) # () S 8 T () S 16 T () S 24 T (controler.setSaver\() S
(new) K
( TlpFormat\(\)\);) p n
(98) # () S 8 T () S 16 T () S 24 T (UIManager) N
(99) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.put\(") S
(FileChooser.saveDialogTitleText) str
(", ") p
(Save as tlp ) str n
0 T (file) S
("\);) p n
(100) # () S 8 T () S 16 T (}) N
(101) # () S 8 T () S 16 T (SwingUtilities.updateComponentTreeUI\(fc\);) N
(102) # () S 8 T () S 16 T () S
(int) k
( returnVal = fc.showSaveDialog\(fc\);) p n
(103) # () S 8 T () S 16 T () S
(// if the extension of the file is right) c n
(104) # () S
() p 8 T () S 16 T () S
(if) K
( \(returnVal == JFileChooser.APPROVE_OPTION\) {) p n
(105) # () S 8 T () S 16 T () S 24 T (File file = fc.getSelectedFile\(\);) N
(106) # () N
(107) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(108) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.saveNetworkAs\(file\);) N
(109) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(110) # () S 8 T () S 16 T () S 24 T () S 32 T (e1.printStackTrace\(\);) N
(111) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(SBMLException e1\) {) p n
(112) # () S 8 T () S 16 T () S 24 T () S 32 T (e1.printStackTrace\(\);) N
(113) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(XMLStreamException e1\) {) p n
(114) # () S 8 T () S 16 T () S 24 T () S 32 T (e1.printStackTrace\(\);) N
(115) # () S 8 T () S 16 T () S 24 T (}) N
(116) # () N
(117) # () S 8 T () S 16 T (}) N
(118) # () N
(119) # () S 8 T (}) N
(120) # () N
(121) # (}) N
(MenuSaveListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/save/MenuSaveListener.java) (25/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 26
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.reactions;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.awt.event.KeyEvent;) p n
(24) # () S
(import) K
( java.awt.event.KeyListener;) p n
(25) # () N
(26) # () S
(import) K
( javax.swing.JOptionPane;) p n
(27) # () S
(import) K
( javax.swing.JTable;) p n
(28) # () N
(29) # () S
(import) K
( controler.MainControler;) p n
(30) # () N
(31) # () S
(import) K
( view.ReactionsPanel;) p n
(32) # () N
(33) # () S
(public) K
( ) p
(class) K
( ) p
(DelReacListener) L
( ) p
(implements) K
( ActionListener, KeyListener  {) p n
(34) # () N
(35) # () S 8 T () S
(private) K
( JTable table;) p n
(36) # () S 8 T () S
(private) K
( ReactionsPanel panel;) p n
(37) # () S 8 T () S
(private) K
( MainControler controler;) p n
(38) # () N
(39) # () S 8 T () S
(public) K
( DelReacListener\(MainControler controler, ReactionsPanel panel\) {) p n
(40) # () S 8 T () S 16 T (this.controler = controler;) N
(41) # () S 8 T () S 16 T (this.panel = panel;) N
(42) # () S 8 T () S 16 T (this.table = panel.getTable\(\);) N
(43) # () N
(44) # () S 8 T (}) N
(45) # () N
(46) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(47) # () S 8 T () S 16 T (delReactions\(\);) N
(48) # () S 8 T () S 16 T () N
(49) # () S 8 T (}) N
(50) # () N
(51) # () S 8 T (@Override) N
(52) # () S 8 T () S
(public) K
( ) p
(void) k
( keyPressed\(KeyEvent e\) {) p n
(53) # () S 8 T () S 16 T () S
(if) K
( \(e.getKeyCode\(\)==127 && table.hasFocus\(\)\){) p n
(54) # () S 8 T () S 16 T () S 24 T (delReactions\(\);) N
(55) # () S 8 T () S 16 T (}) N
(56) # () S 8 T (}) N
(57) # () N
(58) # () S 8 T (@Override) N
(59) # () S 8 T () S
(public) K
( ) p
(void) k
( keyReleased\(KeyEvent e\) {) p n
(60) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(61) # () S
() p 8 T () S 16 T () N
(62) # () S 8 T (}) N
(63) # () N
(64) # () S 8 T (@Override) N
(65) # () S 8 T () S
(public) K
( ) p
(void) k
( keyTyped\(KeyEvent e\) {) p n
(DelReacListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(67) # () S
() p 8 T () S 16 T () N
(68) # () S 8 T (}) N
(69) # () S 8 T () N
(70) # () S 8 T () S
(public) K
( ) p
(void) k
( delReactions\(\){) p n
(71) # () S 8 T () S 16 T () S
(int) k
([] selectedIndices = table.getSelectedRows\(\);) p n
(72) # () S 8 T () S 16 T (String selectedReacs[] = ) S
(new) K
( String[selectedIndices.length];) p n
(73) # () N
(74) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < selectedIndices.length; i++\) {) p n
(75) # () S 8 T () S 16 T () S 24 T (selectedReacs[i] = \(String\) table.getValueAt\(selectedInd) N
0 T (ices[i], 0\);) N
(76) # () S 8 T () S 16 T (}) N
(77) # () N
(78) # () N
(79) # () S 8 T () S 16 T () S
(if) K
( \(JOptionPane.showConfirmDialog\() p
(null) k
(,) p n
(80) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(Are you sure you want to delete ) str
("+ selectedReacs.length+") p
() str n
0 T ( reaction\(s\) ) S
(") p n
(81) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ "", "", JOptionPane.OK_CANCEL_) N
0 T (OPTION\) == JOptionPane.OK_OPTION\) {) N
(82) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < selectedReacs.length; i++\) {) p n
(83) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.delReaction\(selectedReacs[i]\);) N
(84) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.notifyObservers\(\);) N
(85) # () S 8 T () S 16 T () S 24 T () S 32 T (panel.update\(controler, ""\);) N
(86) # () S 8 T () S 16 T () S 24 T (}) N
(87) # () S 8 T () S 16 T (}) N
(88) # () S 8 T (}) N
(89) # () N
(90) # (}) N
(91) # () N
(DelReacListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/reactions/DelReacListener.java) (26/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 27
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.reactions;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.util.Map;) p n
(24) # () S
(import) K
( java.util.Map.Entry;) p n
(25) # () N
(26) # () S
(import) K
( javax.swing.JOptionPane;) p n
(27) # () S
(import) K
( javax.swing.JTable;) p n
(28) # () N
(29) # () S
(import) K
( controler.MainControler;) p n
(30) # () N
(31) # () S
(import) K
( model.Metabolite;) p n
(32) # () N
(33) # () S
(import) K
( view.GeneralFrame;) p n
(34) # () S
(import) K
( view.ReactionsPanel;) p n
(35) # () S
(import) K
( view.popup.ReactionFrame;) p n
(36) # () N
(37) # () S
(public) K
( ) p
(class) K
( ) p
(EditReacListener) L
( ) p
(implements) K
( ActionListener {) p n
(38) # () S 8 T () S
(private) K
( MainControler controler;) p n
(39) # () S 8 T () S
(private) K
( JTable table;) p n
(40) # () N
(41) # () S 8 T () S
(public) K
( EditReacListener\(MainControler controler,) p n
(42) # () S 8 T () S 16 T () S 24 T (ReactionsPanel reactionsPanel\) {) N
(43) # () S 8 T () S 16 T (this.controler = controler;) N
(44) # () S 8 T () S 16 T (this.table = reactionsPanel.getTable\(\);) N
(45) # () S 8 T (}) N
(46) # () N
(47) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(48) # () S 8 T () S 16 T (String enzName = \(String\) table.getValueAt\(table.getSelectedRow\() N
0 T (\), 0\);) N
(49) # () S 8 T () S 16 T () S
(boolean) k
( isReversible = \(Boolean\) table.getValueAt\() p n
(50) # () S 8 T () S 16 T () S 24 T () S 32 T (table.getSelectedRow\(\), 1\);) N
(51) # () S 8 T () S 16 T (ReactionFrame f = ) S
(new) K
( ReactionFrame\() p n
(52) # () S 8 T () S 16 T () S 24 T () S 32 T (GeneralFrame.getInstance\(controler\), controler, ) N
0 T (enzName,) N
(53) # () S 8 T () S 16 T () S 24 T () S 32 T (isReversible\);) N
(54) # () N
(55) # () S 8 T () S 16 T () S
(if) K
( \(f.okPressed\(\)\) {) p n
(56) # () S 8 T () S 16 T () S 24 T () S
(boolean) k
( reversible = f.getReversible\(\);) p n
(57) # () S 8 T () S 16 T () S 24 T (Map<Metabolite, Double> r = f.getReactants\(\);) N
(58) # () S 8 T () S 16 T () S 24 T (Map<Metabolite, Double> p = f.getProducts\(\);) N
(59) # () S 8 T () S 16 T () S 24 T (controler.delMetabolitesReaction\(enzName\);) N
(60) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Entry<Metabolite, Double> entry : r.entrySet\(\)\) {) p n
(61) # () S 8 T () S 16 T () S 24 T () S 32 T (controler) N
(62) # () S 8 T () S 16 T () S 24 T () S 32 T (.addReactant\(enzName, entry.getKey\(\), entry.getV) N
0 T (alue\(\)\);) N
(EditReacListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(63) # () p 8 T () S 16 T () S 24 T (}) N
(64) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Entry<Metabolite, Double> entry : p.entrySet\(\)\) {) p n
(65) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.addProduct\(enzName, entry.getKey\(\), en) N
0 T (try.getValue\(\)\);) N
(66) # () S 8 T () S 16 T () S 24 T (}) N
(67) # () S 8 T () S 16 T () S 24 T (System.out.println\(f.getName\(\)\);) N
(68) # () S 8 T () S 16 T () S 24 T (System.out.println\(enzName\);) N
(69) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(!controler.getNetwork\(\).hasName\(f.getName\(\)\) || \(f.g) p n
0 T (etName\(\).toLowerCase\(\).equals\(enzName.toLowerCase\(\)\)\)\){) N
(70) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.setReactionReversible\(enzName, reversi) N
0 T (ble\);) N
(71) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.setReactionName\(enzName, f.getName\(\)\);) N
(72) # () S 8 T () S 16 T () S 24 T (}) N
(73) # () S 8 T () S 16 T () S 24 T () S
(else) K
( {) p n
(74) # () S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(Another reaction or metabolite has the same n) str n
0 T (ame) S
(", ") p
(Error) str
(",) p n
(76) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane.ERROR_MESSAGE\);) N
(77) # () S 8 T () S 16 T () S 24 T (}) N
(78) # () N
(79) # () S 8 T () S 16 T (}) N
(80) # () S 8 T () S 16 T (controler.notifyObservers\(\);) N
(81) # () S 8 T (}) N
(82) # () N
(83) # (}) N
(EditReacListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/reactions/EditReacListener.java) (27/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 28
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.reactions;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () N
(24) # () S
(import) K
( view.popup.ReactionFrame;) p n
(25) # () N
(26) # () N
(27) # () S
(//Add a metabolite in a reaction) c n
(28) # () S
(public) K
( ) p
(class) K
( ) p
(AddMetaboliteReactionListener) L
( ) p
(implements) K
( ActionListener {) p n
(29) # () S 8 T () S
(private) K
( ReactionFrame frame;) p n
(30) # () S 8 T () S
(private) K
( String type;) p n
(31) # () N
(32) # () S 8 T () S
(public) K
( AddMetaboliteReactionListener\(ReactionFrame frame, String type\) {) p n
(33) # () S 8 T () S 16 T (this.frame = frame;) N
(34) # () S 8 T () S 16 T (this.type = type;) N
(35) # () S 8 T (}) N
(36) # () N
(37) # () N
(38) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(39) # () S 8 T () S 16 T () S
(if) K
( \(type.equals\(") p
(reactant) str
("\)\) {) p n
(40) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(frame.getReactants\(\).containsKey\(frame.getMetabolite) p n
0 T (\(\)\)\) {) N
(41) # () S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(frame.getMetabolite\(\)\);) N
(42) # () N
(43) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(44) # () S 8 T () S 16 T () S 24 T () S 32 T (frame.addReactant\(\);) N
(45) # () S 8 T () S 16 T () S 24 T (}) N
(46) # () S 8 T () S 16 T (}) N
(47) # () S 8 T () S 16 T () S
(if) K
( \(type.equals\(") p
(product) str
("\)\) {) p n
(48) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(frame.getProducts\(\).containsKey\(frame.getMetabolite\() p n
0 T (\)\)\) {) N
(49) # () N
(50) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(51) # () S 8 T () S 16 T () S 24 T () S 32 T (frame.addProduct\(\);) N
(52) # () S 8 T () S 16 T () S 24 T (}) N
(53) # () S 8 T () S 16 T (}) N
(54) # () S 8 T (}) N
(55) # () N
(56) # (}) N
(AddMetaboliteReactionListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/reactions/AddMetaboliteReactionListener.java) (28/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 29
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.reactions;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.util.Map;) p n
(24) # () N
(25) # () S
(import) K
( javax.swing.JOptionPane;) p n
(26) # () N
(27) # () S
(import) K
( controler.MainControler;) p n
(28) # () N
(29) # () S
(import) K
( model.Metabolite;) p n
(30) # () N
(31) # () S
(import) K
( view.GeneralFrame;) p n
(32) # () S
(import) K
( view.popup.ReactionFrame;) p n
(33) # () N
(34) # () S
(//Add reaction) c n
(35) # () S
(public) K
( ) p
(class) K
( ) p
(AddReacListener) L
( ) p
(implements) K
( ActionListener {) p n
(36) # () N
(37) # () S 8 T () S
(private) K
( MainControler controler;) p n
(38) # () N
(39) # () S 8 T () S
(public) K
( AddReacListener\(MainControler controler\) {) p n
(40) # () S 8 T () S 16 T (this.controler = controler;) N
(41) # () S 8 T (}) N
(42) # () N
(43) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(44) # () N
(45) # () S 8 T () S 16 T () S
(if) K
( \(!\(controler.getListMetabos\(\).size\(\)==0\)\){) p n
(46) # () S 8 T () S 16 T () S 24 T (ReactionFrame f = ) S
(new) K
( ReactionFrame\() p n
(47) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (GeneralFrame.getInstance\(controler\), con) N
0 T (troler, ) S
(null) k
(, ) p
(false) k
(\);) p n
(48) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(f.okPressed\(\)\) {) p n
(49) # () S 8 T () S 16 T () S 24 T () S 32 T (String enzyme = controler.getNetwork\(\).formatNam) N
0 T (e\(f.getName\(\)\);) N
(50) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!controler.getNetwork\(\).hasName\(enzyme\)\){) p n
(51) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(boolean) k
( reversible = f.getReversible\(\);) p n
(52) # () S 8 T () S 16 T () S 24 T () S 32 T (Map<Metabolite, Double> r = f.getReactants\(\);) N
(53) # () S 8 T () S 16 T () S 24 T () S 32 T (Map<Metabolite, Double> p = f.getProducts\(\);) N
(54) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.addReaction\(enzyme, r, p, reversible\);) N
(55) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.notifyObservers\(\);) N
(56) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(57) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(else) K
( {) p n
(58) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(59) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (") S
(Another reaction or metabolite ha) str n
0 T (s the same name) S
(", ") p
(Error) str
(",) p n
(60) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (JOptionPane.ERROR_MESSAG) N
0 T (E\);) N
(61) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(AddReacListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(62) # () p 8 T () S 16 T () S 24 T () S 32 T () N
(63) # () S 8 T () S 16 T () S 24 T (}) N
(64) # () S 8 T () S 16 T (}) N
(65) # () S 8 T () S 16 T () S
(else) K
( {) p n
(66) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(67) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(You must have at least one metabolite in your network) str
(",) p n
0 T ( ") S
(Error) str
(",) p n
(68) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(69) # () S 8 T () S 16 T (}) N
(70) # () N
(71) # () S 8 T (}) N
(72) # () N
(73) # (}) N
(AddReacListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/reactions/AddReacListener.java) (29/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 30
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.reactions;) p n
(20) # () N
(21) # () S
(import) K
( javax.swing.JTable;) p n
(22) # () S
(import) K
( javax.swing.event.ListSelectionEvent;) p n
(23) # () S
(import) K
( javax.swing.event.ListSelectionListener;) p n
(24) # () N
(25) # () S
(import) K
( controler.MainControler;) p n
(26) # () N
(27) # () S
(import) K
( view.ReactionsPanel;) p n
(28) # () N
(29) # () S
(public) K
( ) p
(class) K
( ) p
(ReactionsTableSelectionListener) L
( ) p
(implements) K
( ListSelectionListener {) p n
(30) # () S 8 T () S
(private) K
( ReactionsPanel panel;) p n
(31) # () S 8 T () S
(private) K
( JTable table;) p n
(32) # () N
(33) # () S 8 T () S
(public) K
( ReactionsTableSelectionListener\(ReactionsPanel reactionsPanel,) p n
(34) # () S 8 T () S 16 T () S 24 T (String col2, MainControler controler\) {) N
(35) # () S 8 T () S 16 T (this.panel = reactionsPanel;) N
(36) # () S 8 T () S 16 T (this.table = reactionsPanel.getTable\(\);) N
(37) # () S 8 T (}) N
(38) # () N
(39) # () S 8 T () S
(public) K
( ) p
(void) k
( valueChanged\(ListSelectionEvent e\) {) p n
(40) # () S 8 T () S 16 T () S
(if) K
( \(!e.getValueIsAdjusting\(\) && table.getSelectedRow\(\) >= 0\) {) p n
(41) # () N
(42) # () S 8 T () S 16 T () S 24 T (panel.setButtons\(\);) N
(43) # () S 8 T () S 16 T (}) N
(44) # () N
(45) # () S 8 T (}) N
(46) # (}) N
(ReactionsTableSelectionListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/reactions/ReactionsTableSelectionListener.java) (30/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 31
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.reactions;) p n
(20) # () N
(21) # () S
(import) K
( javax.swing.JTable;) p n
(22) # () S
(import) K
( javax.swing.event.CellEditorListener;) p n
(23) # () S
(import) K
( javax.swing.event.ChangeEvent;) p n
(24) # () N
(25) # () S
(import) K
( controler.MainControler;) p n
(26) # () N
(27) # () S
(import) K
( view.GeneralFrame;) p n
(28) # () S
(import) K
( view.ReactionsPanel;) p n
(29) # () N
(30) # () S
(public) K
( ) p
(class) K
( ) p
(ReactionsTableCellEditorListener) L
( ) p
(implements) K
( CellEditorListener {) p n
(31) # () N
(32) # () S 8 T () S
(private) K
( ReactionsPanel panel;) p n
(33) # () S 8 T () S
(private) K
( JTable table;) p n
(34) # () S 8 T () S
(private) K
( MainControler controler;) p n
(35) # () N
(36) # () S 8 T () S
(public) K
( ReactionsTableCellEditorListener\(MainControler controler,) p n
(37) # () S 8 T () S 16 T () S 24 T (ReactionsPanel reactionsPanel\) {) N
(38) # () S 8 T () S 16 T (this.panel = reactionsPanel;) N
(39) # () S 8 T () S 16 T (this.controler = controler;) N
(40) # () S 8 T () S 16 T (this.table = reactionsPanel.getTable\(\);) N
(41) # () S 8 T (}) N
(42) # () N
(43) # () S 8 T () S
(public) K
( ) p
(void) k
( editingCanceled\(ChangeEvent arg0\) {) p n
(44) # () N
(45) # () S 8 T (}) N
(46) # () N
(47) # () S 8 T () S
(public) K
( ) p
(void) k
( editingStopped\(ChangeEvent e\) {) p n
(48) # () N
(49) # () S 8 T () S 16 T (String reacName = \(String\) table.getValueAt\(table.getSelectedRow) N
0 T (\(\), 0\);) N
(50) # () N
(51) # () S 8 T () S 16 T (controler.setReactionReversible\() N
(52) # () S 8 T () S 16 T () S 24 T () S 32 T (reacName,) N
(53) # () S 8 T () S 16 T () S 24 T () S 32 T (\(Boolean\) table.getValueAt\(table.getSelectedRow\() N
0 T (\),) N
(54) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (table.getSelectedColumn\(\)\)\);) N
(55) # () N
(56) # () S 8 T () S 16 T (table.clearSelection\(\);) N
(57) # () S 8 T () S 16 T (panel.setButtons\(\);) N
(58) # () S 8 T () S 16 T (GeneralFrame.getInstance\(controler\).enableSave\(\);) N
(59) # () N
(60) # () S 8 T (}) N
(61) # () N
(62) # (}) N
(ReactionsTableCellEditorListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/reactions/ReactionsTableCellEditorListener.java) (31/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 32
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.reactions;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () N
(24) # () S
(import) K
( view.popup.ReactionFrame;) p n
(25) # () N
(26) # () S
(public) K
( ) p
(class) K
( ) p
(RemoveMetaboliteReactionListener) L
( ) p
(implements) K
( ActionListener {) p n
(27) # () N
(28) # () S 8 T () S
(private) K
( ReactionFrame frame;) p n
(29) # () S 8 T () S
(private) K
( String type;) p n
(30) # () N
(31) # () S 8 T () S
(public) K
( RemoveMetaboliteReactionListener\(ReactionFrame frame, String type) p n
0 T (\) {) N
(32) # () S 8 T () S 16 T (this.frame = frame;) N
(33) # () S 8 T () S 16 T (this.type = type;) N
(34) # () S 8 T (}) N
(35) # () N
(36) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(37) # () S 8 T () S 16 T () S
(if) K
( \(type.equals\(") p
(reactant) str
("\)\) {) p n
(38) # () S 8 T () S 16 T () S 24 T (frame.delReactant\(\);) N
(39) # () S 8 T () S 16 T (}) N
(40) # () S 8 T () S 16 T () S
(if) K
( \(type.equals\(") p
(product) str
("\)\) {) p n
(41) # () S 8 T () S 16 T () S 24 T (frame.delProduct\(\);) N
(42) # () S 8 T () S 16 T (}) N
(43) # () N
(44) # () S 8 T (}) N
(45) # () N
(46) # (}) N
(RemoveMetaboliteReactionListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/reactions/RemoveMetaboliteReactionListener.java) (32/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 33
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.reactions;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.io.File;) p n
(24) # () S
(import) K
( java.io.IOException;) p n
(25) # () N
(26) # () S
(import) K
( javax.swing.JOptionPane;) p n
(27) # () S
(import) K
( javax.swing.JTable;) p n
(28) # () S
(import) K
( javax.xml.stream.XMLStreamException;) p n
(29) # () N
(30) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(31) # () S
(import) K
( model.Metabolite;) p n
(32) # () S
(import) K
( model.Reaction;) p n
(33) # () S
(import) K
( model.data.SBMLFormat;) p n
(34) # () N
(35) # () S
(import) K
( org.sbml.jsbml.SBMLException;) p n
(36) # () N
(37) # () S
(import) K
( view.ReactionsPanel;) p n
(38) # () S
(import) K
( controler.MainControler;) p n
(39) # () N
(40) # () S
(public) K
( ) p
(class) K
( ) p
(AddDbListener) L
( ) p
(implements) K
( ActionListener {) p n
(41) # () N
(42) # () S 8 T () S
(private) K
( MainControler controler;) p n
(43) # () S 8 T () S
(private) K
( JTable table;) p n
(44) # () N
(45) # () S 8 T () S
(public) K
( AddDbListener\(MainControler controler, ReactionsPanel reactionsPa) p n
0 T (nel\) {) N
(46) # () S 8 T () S 16 T (this.controler = controler;) N
(47) # () S 8 T () S 16 T (this.table = reactionsPanel.getTable\(\);) N
(48) # () S 8 T (}) N
(49) # () N
(50) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(51) # () N
(52) # () S 8 T () S 16 T (MetabolicNetworkItf dbNetwork = controler.getDataBaseNetwork\(\);) N
(53) # () N
(54) # () S 8 T () S 16 T () S
(int) k
([] selectedIndices = table.getSelectedRows\(\);) p n
(55) # () S 8 T () S 16 T (String selectedReacs[] = ) S
(new) K
( String[selectedIndices.length];) p n
(56) # () N
(57) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < selectedIndices.length; i++\) {) p n
(58) # () S 8 T () S 16 T () S 24 T (selectedReacs[i] = \(String\) table.getValueAt\(selectedInd) N
0 T (ices[i], 0\);) N
(59) # () S 8 T () S 16 T (}) N
(60) # () N
(61) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < selectedReacs.length; i++\) {) p n
(62) # () N
(63) # () S 8 T () S 16 T () S 24 T (Reaction r = controler.getReaction\(selectedReacs[i]\);) N
(AddDbListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(64) # () p n
(65) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Metabolite m  : r.getListMetabolite\(\)\){) p n
(66) # () S 8 T () S 16 T () S 24 T () S 32 T (dbNetwork.AddMetabolite\(m.getName\(\), m.getDescri) N
0 T (ption\(\), m.isInternal\(\)\);) N
(67) # () S 8 T () S 16 T () S 24 T (}) N
(68) # () N
(69) # () S 8 T () S 16 T () S 24 T (dbNetwork.addReaction\(r.getName\(\), r.getReactants\(\),) N
(70) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (r.getProducts\(\), r.isReversible\(\)\);) N
(71) # () N
(72) # () S 8 T () S 16 T (}) N
(73) # () N
(74) # () S 8 T () S 16 T () S
(try) K
( {) p n
(75) # () S 8 T () S 16 T () S 24 T () S
(new) K
( SBMLFormat\(\).save\() p
(new) K
( File\(") p
(dataBase.xml) str
("\), dbNetwork,) p n
0 T ( ) S
(false) k
(\);) p n
(76) # () S 8 T () S 16 T () S 24 T () N
(77) # () S 8 T () S 16 T () S 24 T () N
(78) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Reactions added to the data ) str n
0 T (base !) S
(", "",) p n
(79) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.INFORMATION_MESSAGE\);) N
(80) # () S 8 T () S 16 T (} ) S
(catch) K
( \(SBMLException e1\) {) p n
(81) # () S 8 T () S 16 T () S 24 T (e1.printStackTrace\(\);) N
(82) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(83) # () S 8 T () S 16 T () S 24 T (e1.printStackTrace\(\);) N
(84) # () S 8 T () S 16 T (} ) S
(catch) K
( \(XMLStreamException e1\) {) p n
(85) # () S 8 T () S 16 T () S 24 T (e1.printStackTrace\(\);) N
(86) # () S 8 T () S 16 T (}) N
(87) # () S 8 T () S 16 T () N
(88) # () S 8 T (}) N
(89) # () N
(90) # (}) N
(AddDbListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/reactions/AddDbListener.java) (33/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 34
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.io.File;) p n
(23) # () S
(import) K
( java.io.IOException;) p n
(24) # () S
(import) K
( java.util.ArrayList;) p n
(25) # () S
(import) K
( java.util.List;) p n
(26) # () S
(import) K
( java.util.Map;) p n
(27) # () S
(import) K
( java.util.Observable;) p n
(28) # () S
(import) K
( java.util.Observer;) p n
(29) # () N
(30) # () S
(import) K
( javax.swing.JFrame;) p n
(31) # () S
(import) K
( javax.swing.JLabel;) p n
(32) # () S
(import) K
( javax.swing.JProgressBar;) p n
(33) # () S
(import) K
( javax.xml.stream.XMLStreamException;) p n
(34) # () N
(35) # () S
(import) K
( model.MetabolicNetwork;) p n
(36) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(37) # () S
(import) K
( model.Metabolite;) p n
(38) # () S
(import) K
( model.Project;) p n
(39) # () S
(import) K
( model.Reaction;) p n
(40) # () S
(import) K
( model.data.Format;) p n
(41) # () S
(import) K
( model.data.ProjectFormat;) p n
(42) # () S
(import) K
( model.data.SBMLFormat;) p n
(43) # () N
(44) # () S
(import) K
( org.sbml.jsbml.SBMLException;) p n
(45) # () N
(46) # () S
(import) K
( view.GeneralFrame;) p n
(47) # () N
(48) # () S
(public) K
( ) p
(class) K
( ) p
(MainControler) L
( ) p
(extends) K
( Observable {) p n
(49) # () N
(50) # () S 8 T () S
(private) K
( List<Observer> observers;) p n
(51) # () S 8 T () S
(private) K
( Project project;) p n
(52) # () S 8 T () S
(private) K
( Format networkLoader;) p n
(53) # () S 8 T () S
(private) K
( Format networkSaver;) p n
(54) # () N
(55) # () S 8 T () S
(private) K
( MetabolicNetworkItf dataBaseNetwork;) p n
(56) # () N
(57) # () S 8 T () S
(public) K
( MainControler\(\) {) p n
(58) # () N
(59) # () S 8 T () S 16 T (observers = ) S
(new) K
( ArrayList<Observer>\(\);) p n
(60) # () S 8 T () S 16 T (cleanSvg\(\);) N
(61) # () S 8 T () S 16 T (dataBaseNetwork = loadDataBaseNetwork\(\);) N
(62) # () N
(63) # () S 8 T (}) N
(64) # () N
(65) # () S 8 T () S
(public) K
( ) p
(void) k
( notifyObservers\(\) {) p n
(MainControler.java) (Page 1/6) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T () S
(// Shows updates of the view) c n
(67) # () S
() p 8 T () S 16 T (System.out.println\(") S
(UPDATE) str
("\);) p n
(68) # () N
(69) # () S 8 T () S 16 T () S
(for) K
( \(Observer obs : observers\) {) p n
(70) # () S 8 T () S 16 T () S 24 T (obs.update\() S
(this) k
(, ""\);) p n
(71) # () S 8 T () S 16 T (}) N
(72) # () N
(73) # () S 8 T (}) N
(74) # () N
(75) # () S 8 T () S
(public) K
( ) p
(void) k
( addObserver\(Observer obs\) {) p n
(76) # () S 8 T () S 16 T (observers.add\(obs\);) N
(77) # () S 8 T (}) N
(78) # () N
(79) # () S 8 T () S
(public) K
( ) p
(void) k
( setLoader\(Format loader\) {) p n
(80) # () S 8 T () S 16 T (this.networkLoader = loader;) N
(81) # () S 8 T (}) N
(82) # () N
(83) # () S 8 T () S
(public) K
( ) p
(void) k
( setSaver\(Format saver\) {) p n
(84) # () S 8 T () S 16 T (this.networkSaver = saver;) N
(85) # () S 8 T (}) N
(86) # () N
(87) # () S 8 T () S
(public) K
( ) p
(boolean) k
( hasLoadedProject\(\) {) p n
(88) # () S 8 T () S 16 T () S
(return) K
( project != ) p
(null) k
(;) p n
(89) # () S 8 T (}) N
(90) # () N
(91) # () S 8 T () S
(public) K
( String getProjectName\(\) {) p n
(92) # () S 8 T () S 16 T () S
(return) K
( project.getName\(\);) p n
(93) # () S 8 T (}) N
(94) # () N
(95) # () S 8 T () S
(public) K
( String getProjectPath\(\) {) p n
(96) # () S 8 T () S 16 T () S
(return) K
( project.getPath\(\);) p n
(97) # () S 8 T (}) N
(98) # () N
(99) # () S 8 T () S
(public) K
( ) p
(void) k
( setProjectNameAndPath\(String name, String path\) {) p n
(100) # () N
(101) # () S 8 T () S 16 T () S
(if) K
( \(!this.hasLoadedProject\(\)\) {) p n
(102) # () S 8 T () S 16 T () S 24 T (project = ) S
(new) K
( Project\(name, path\);) p n
(103) # () S 8 T () S 16 T (} ) S
(else) K
( {) p n
(104) # () N
(105) # () S 8 T () S 16 T () S 24 T (project.setNameAndPath\(name, path\);) N
(106) # () S 8 T () S 16 T (}) N
(107) # () N
(108) # () S 8 T (}) N
(109) # () N
(110) # () S 8 T () S
(public) K
( List<Object[]> getReactions\(\) {) p n
(111) # () N
(112) # () S 8 T () S 16 T () S
(// Controller collects reactions of the model) c n
(113) # () S
() p 8 T () S 16 T (List<Object[]> listeObj = ) S
(new) K
( ArrayList<Object[]>\(\);) p n
(114) # () S 8 T () S 16 T (List<Reaction> reactions = project.getNetwork\(\).getReactions\(\);) N
(115) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : reactions\) {) p n
(116) # () S 8 T () S 16 T () S 24 T (listeObj.add\() S
(new) K
( Object[] { reac.getName\(\), reac.isRever) p n
0 T (sible\(\),) N
(117) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (reac.getStringReaction\(\) }\);) N
(118) # () N
(119) # () S 8 T () S 16 T (}) N
(120) # () S 8 T () S 16 T () S
(// return list of corresponding reactions) c n
(121) # () S
() p 8 T () S 16 T () S
(return) K
( listeObj;) p n
(122) # () N
(123) # () S 8 T (}) N
(124) # () N
(125) # () S 8 T () S
(public) K
( List<String> getRules\(\) {) p n
(126) # () S 8 T () S 16 T () S
(return) K
( project.getNetwork\(\).getRules\(\);) p n
(127) # () S 8 T (}) N
(128) # () N
(129) # () S 8 T () S
(public) K
( List<Object[]> getProducts\(String reacName\) {) p n
(130) # () S 8 T () S 16 T () S
(return) K
( project.getNetwork\(\).getReaction\(reacName\).getProductsTab) p n
(MainControler.java) (Page 2/6) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/MainControler.java) (34/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 35
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (le\(\);) p n
(131) # () S 8 T (}) N
(132) # () N
(133) # () S 8 T () S
(public) K
( List<Object[]> getReactants\(String reacName\) {) p n
(134) # () S 8 T () S 16 T () S
(return) K
( project.getNetwork\(\).getReaction\(reacName\)) p n
(135) # () S 8 T () S 16 T () S 24 T () S 32 T (.getObjetReactantsTable\(\);) N
(136) # () S 8 T (}) N
(137) # () N
(138) # () S 8 T () S
(public) K
( List<Object[]> getMetabos\(\) {) p n
(139) # () S 8 T () S 16 T () S
(// Controller collects metabolites of the model) c n
(140) # () S
() p 8 T () S 16 T (List<Object[]> listeObj = ) S
(new) K
( ArrayList<Object[]>\(\);) p n
(141) # () S 8 T () S 16 T (List<Metabolite> metabolites = project.getNetwork\(\).getMetabolit) N
0 T (es\(\);) N
(142) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite metab : metabolites\) {) p n
(143) # () S 8 T () S 16 T () S 24 T (listeObj.add\() S
(new) K
( Object[] { metab.getName\(\), metab.isInt) p n
0 T (ernal\(\),) N
(144) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (metab.getDescription\(\) }\);) N
(145) # () N
(146) # () S 8 T () S 16 T (}) N
(147) # () N
(148) # () S 8 T () S 16 T () S
(// return list of corresponding metabolites) c n
(149) # () S
() p 8 T () S 16 T () S
(return) K
( listeObj;) p n
(150) # () S 8 T (}) N
(151) # () N
(152) # () S 8 T () S
(public) K
( List<Metabolite> getListMetabos\(\) {) p n
(153) # () S 8 T () S 16 T (List<Metabolite> metabolites = project.getNetwork\(\).getMetabolit) N
0 T (es\(\);) N
(154) # () S 8 T () S 16 T () S
(return) K
( metabolites;) p n
(155) # () S 8 T (}) N
(156) # () N
(157) # () S 8 T () S
(public) K
( ) p
(boolean) k
( getReversible\(String name\) {) p n
(158) # () S 8 T () S 16 T () S
(return) K
( project.getNetwork\(\).getReaction\(name\).isReversible\(\);) p n
(159) # () S 8 T (}) N
(160) # () N
(161) # () S 8 T () S
(public) K
( ) p
(void) k
( delReaction\(String reacName\) {) p n
(162) # () S 8 T () S 16 T (project.getNetwork\(\).delReaction\(reacName\);) N
(163) # () S 8 T (}) N
(164) # () N
(165) # () S 8 T () S
(public) K
( Metabolite getMetabolite\(String name\) {) p n
(166) # () S 8 T () S 16 T () S
(return) K
( project.getNetwork\(\).getMetabolite\(name\);) p n
(167) # () S 8 T (}) N
(168) # () N
(169) # () S 8 T () S
(public) K
( ) p
(void) k
( delMetabolite\(String metName\) {) p n
(170) # () S 8 T () S 16 T (project.getNetwork\(\).delMetabolite\(metName\);) N
(171) # () N
(172) # () S 8 T (}) N
(173) # () N
(174) # () S 8 T () S
(public) K
( ) p
(void) k
( addProduct\(String name, Metabolite met, Double n\) {) p n
(175) # () S 8 T () S 16 T (project.getNetwork\(\).getReaction\(name\).addProduct\(met, n\);) N
(176) # () S 8 T (}) N
(177) # () N
(178) # () S 8 T () S
(public) K
( ) p
(void) k
( addReactant\(String name, Metabolite met, Double n\) {) p n
(179) # () S 8 T () S 16 T (project.getNetwork\(\).getReaction\(name\).addReactant\(met, n\);) N
(180) # () S 8 T (}) N
(181) # () N
(182) # () S 8 T () S
(public) K
( ) p
(void) k
( delMetabolitesReaction\(String name\) {) p n
(183) # () S 8 T () S 16 T (project.getNetwork\(\).getReaction\(name\).delMetabolites\(\);) N
(184) # () S 8 T (}) N
(185) # () N
(186) # () S 8 T () S
(public) K
( ) p
(void) k
( addMetabolite\(String name, String description, ) p
(boolean) k
( inter) p n
0 T (nal\) {) N
(187) # () S 8 T () S 16 T (project.getNetwork\(\).AddMetabolite\(name, description, internal\);) N
(188) # () S 8 T (}) N
(189) # () N
(190) # () S 8 T () S
(public) K
( ) p
(void) k
( addRule\(String rule\) {) p n
(191) # () S 8 T () S 16 T (project.getNetwork\(\).addRule\(rule\);) N
(MainControler.java) (Page 3/6) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(192) # () p 8 T (}) N
(193) # () N
(194) # () S 8 T () S
(public) K
( ) p
(void) k
( editRule\(String oldRule, String newRule\) {) p n
(195) # () S 8 T () S 16 T (project.getNetwork\(\).editRule\(oldRule, newRule\);) N
(196) # () S 8 T (}) N
(197) # () N
(198) # () S 8 T () S
(public) K
( ) p
(void) k
( delRule\(String rule\) {) p n
(199) # () S 8 T () S 16 T (project.getNetwork\(\).delRule\(rule\);) N
(200) # () S 8 T (}) N
(201) # () N
(202) # () S 8 T () S
(public) K
( ) p
(void) k
( setReactionReversible\(String name, ) p
(boolean) k
( reversible\) {) p n
(203) # () S 8 T () S 16 T (project.getNetwork\(\).setReactionReversible\(name, reversible\);) N
(204) # () N
(205) # () S 8 T (}) N
(206) # () N
(207) # () S 8 T () S
(public) K
( ) p
(void) k
( setReactionName\(String name, String newName\) {) p n
(208) # () S 8 T () S 16 T (project.getNetwork\(\).setReactionName\(name, newName\);) N
(209) # () N
(210) # () S 8 T (}) N
(211) # () N
(212) # () S 8 T () S
(public) K
( Reaction getReaction\(String name\) {) p n
(213) # () S 8 T () S 16 T () S
(return) K
( project.getNetwork\(\).getReaction\(name\);) p n
(214) # () S 8 T (}) N
(215) # () N
(216) # () S 8 T () S
(public) K
( ) p
(void) k
( setMetaboInternal\(String name, ) p
(boolean) k
( internal\) {) p n
(217) # () S 8 T () S 16 T (project.getNetwork\(\).setMetaboInternal\(name, internal\);) N
(218) # () N
(219) # () S 8 T (}) N
(220) # () N
(221) # () S 8 T () S
(public) K
( ) p
(void) k
( setMetabo\(String oldName, String newName, String description) p n
0 T (\) {) N
(222) # () S 8 T () S 16 T (project.getNetwork\(\).setMetabolite\(oldName, newName, description) N
0 T (\);) N
(223) # () N
(224) # () S 8 T (}) N
(225) # () N
(226) # () S 8 T () S
(public) K
( ) p
(void) k
( addReaction\(String enzyme, Map<Metabolite, Double> r,) p n
(227) # () S 8 T () S 16 T () S 24 T (Map<Metabolite, Double> p, ) S
(boolean) k
( reversible\) {) p n
(228) # () S 8 T () S 16 T (project.getNetwork\(\).addReaction\(enzyme, r, p, reversible\);) N
(229) # () S 8 T (}) N
(230) # () N
(231) # () S 8 T () S
(public) K
( ) p
(void) k
( loadNetwork\(File[] file\) ) p
(throws) K
( ClassNotFoundException,) p n
(232) # () S 8 T () S 16 T () S 24 T (IOException {) N
(233) # () N
(234) # () S 8 T () S 16 T () S
(// we load the file) c n
(235) # () S
() p 8 T () S 16 T (MetabolicNetworkItf network = networkLoader.load\(file\);) N
(236) # () N
(237) # () S 8 T () S 16 T () S
(if) K
( \(network != ) p
(null) k
(\) {) p n
(238) # () N
(239) # () S 8 T () S 16 T () S 24 T () S
(// if no project is loaded it creats one) c n
(240) # () S
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(!this.hasLoadedProject\(\)\) {) p n
(241) # () S 8 T () S 16 T () S 24 T () S 32 T (this.createProject\(file[0].getName\(\), file[0].ge) N
0 T (tAbsolutePath\(\)\);) N
(242) # () S 8 T () S 16 T () S 24 T (}) N
(243) # () N
(244) # () S 8 T () S 16 T () S 24 T (this.setNetwork\(network\);) N
(245) # () N
(246) # () S 8 T () S 16 T (}) N
(247) # () N
(248) # () S 8 T () S 16 T () S
(new) K
( Thread\(\) {) p n
(249) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( run\(\) {) p n
(250) # () S 8 T () S 16 T () S 24 T () S 32 T (JFrame running = ) S
(new) K
( JFrame\(\);) p n
(251) # () N
(252) # () S 8 T () S 16 T () S 24 T () S 32 T (running.setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(253) # () S 8 T () S 16 T () S 24 T () S 32 T (JProgressBar progressBar = ) S
(new) K
( JProgressBar\(\);) p n
(254) # () S 8 T () S 16 T () S 24 T () S 32 T (progressBar.setIndeterminate\() S
(true) k
(\);) p n
(MainControler.java) (Page 4/6) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/MainControler.java) (35/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 36
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(255) # () p n
(256) # () S 8 T () S 16 T () S 24 T () S 32 T (running.add\() S
(new) K
( JLabel\(") p
(Loading file ...) str
("\),) p n
(257) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (BorderLayout.PAGE_START\);) N
(258) # () S 8 T () S 16 T () S 24 T () S 32 T (running.add\(progressBar, BorderLayout.CENTER\);) N
(259) # () S 8 T () S 16 T () S 24 T () S 32 T (running.pack\(\);) N
(260) # () S 8 T () S 16 T () S 24 T () S 32 T (running.setLocationRelativeTo\() S
(null) k
(\);) p n
(261) # () S 8 T () S 16 T () S 24 T () S 32 T (running.setVisible\() S
(true) k
(\);) p n
(262) # () N
(263) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(try) K
( {) p n
(264) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (notifyObservers\(\);) N
(265) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (running.dispose\(\);) N
(266) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(catch) K
( \(NullPointerException e\) {) p n
(267) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (running.dispose\(\);) N
(268) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(269) # () S 8 T () S 16 T () S 24 T (}) N
(270) # () S 8 T () S 16 T (}.start\(\);) N
(271) # () N
(272) # () S 8 T (}) N
(273) # () N
(274) # () S 8 T () S
(public) K
( ) p
(void) k
( setNetwork\(MetabolicNetworkItf network\) {) p n
(275) # () S 8 T () S 16 T (project.setNetwork\(network\);) N
(276) # () S 8 T (}) N
(277) # () N
(278) # () S 8 T () S
(public) K
( ) p
(void) k
( saveNetworkAs\(File file\) ) p
(throws) K
( IOException, SBMLException,) p n
(279) # () S 8 T () S 16 T () S 24 T (XMLStreamException {) N
(280) # () N
(281) # () S 8 T () S 16 T (networkSaver.save\(file, project.getNetwork\(\), ) S
(true) k
(\);) p n
(282) # () S 8 T (}) N
(283) # () N
(284) # () S 8 T () S
(public) K
( ) p
(void) k
( saveProject\(\) ) p
(throws) K
( IOException {) p n
(285) # () N
(286) # () S 8 T () S 16 T (File f = ) S
(new) K
( File\(getProjectPath\(\)\);) p n
(287) # () N
(288) # () S 8 T () S 16 T (System.out.println\(f.getAbsolutePath\(\)\);) N
(289) # () N
(290) # () S 8 T () S 16 T () S
(new) K
( ProjectFormat\() p
(this) k
(\).save\(f, project.getNetwork\(\), ) p
(false) k
(\);) p n
(291) # () S 8 T () S 16 T () N
(292) # () S 8 T () S 16 T (GeneralFrame.getInstance\() S
(this) k
(\).disableSave\(\);) p n
(293) # () S 8 T (}) N
(294) # () N
(295) # () S 8 T () S
(public) K
( MetabolicNetworkItf getNetwork\(\) {) p n
(296) # () S 8 T () S 16 T () S
(return) K
( project.getNetwork\(\);) p n
(297) # () S 8 T (}) N
(298) # () N
(299) # () S 8 T () S
(public) K
( ) p
(boolean) k
( hasLoadedProjectWithPath\(\) {) p n
(300) # () S 8 T () S 16 T () S
(return) K
( project.hasPath\(\);) p n
(301) # () S 8 T (}) N
(302) # () N
(303) # () S 8 T () S
(public) K
( ) p
(void) k
( createProject\(String name, String path\) {) p n
(304) # () S 8 T () S 16 T (project = ) S
(new) K
( Project\(name, path\);) p n
(305) # () S 8 T (}) N
(306) # () N
(307) # () S 8 T () S
(public) K
( ) p
(void) k
( createProject\(Project project\) {) p n
(308) # () S 8 T () S 16 T (this.project = project;) N
(309) # () S 8 T (}) N
(310) # () N
(311) # () S 8 T () S
(public) K
( Project getProject\(\) {) p n
(312) # () S 8 T () S 16 T () S
(return) K
( project;) p n
(313) # () S 8 T (}) N
(314) # () N
(315) # () S 8 T () S
(public) K
( List<Reaction> getListReactions\(\) {) p n
(316) # () N
(317) # () S 8 T () S 16 T () S
(return) K
( project.getNetwork\(\).getReactions\(\);) p n
(318) # () S 8 T (}) N
(319) # () N
(320) # () S 8 T () S
(public) K
( ) p
(void) k
( cleanSvg\(\) {) p n
(MainControler.java) (Page 5/6) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(321) # () p 8 T () S 16 T () S
(// svg files unsaved are deleted) c n
(322) # () S
() p 8 T () S 16 T (File svgfolder = ) S
(new) K
( File\(") p
(tulip/svg) str
("\);) p n
(323) # () S 8 T () S 16 T () S
(for) K
( \() p
(final) K
( File file : svgfolder.listFiles\(\)\) {) p n
(324) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(file.isFile\(\)\) {) p n
(325) # () S 8 T () S 16 T () S 24 T () S 32 T (file.delete\(\);) N
(326) # () S 8 T () S 16 T () S 24 T (}) N
(327) # () S 8 T () S 16 T (}) N
(328) # () N
(329) # () S 8 T () S 16 T () S
(// and tlp files) c n
(330) # () S
() p 8 T () S 16 T (File tlpfolder = ) S
(new) K
( File\(") p
(tulip/tlp) str
("\);) p n
(331) # () S 8 T () S 16 T () S
(for) K
( \() p
(final) K
( File file : tlpfolder.listFiles\(\)\) {) p n
(332) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(file.isFile\(\)\) {) p n
(333) # () S 8 T () S 16 T () S 24 T () S 32 T (file.delete\(\);) N
(334) # () S 8 T () S 16 T () S 24 T (}) N
(335) # () S 8 T () S 16 T (}) N
(336) # () S 8 T (}) N
(337) # () N
(338) # () S 8 T () S
(private) K
( MetabolicNetworkItf loadDataBaseNetwork\(\) {) p n
(339) # () N
(340) # () S 8 T () S 16 T (File dataBase = ) S
(new) K
( File\(") p
(dataBase.xml) str
("\);) p n
(341) # () S 8 T () S 16 T () S
(if) K
( \(!dataBase.isFile\(\)\) {) p n
(342) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(343) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( SBMLFormat\(\).save\(dataBase, ) p
(new) K
( MetabolicNet) p n
0 T (work\(\), ) S
(false) k
(\);) p n
(344) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(SBMLException e\) {) p n
(345) # () S 8 T () S 16 T () S 24 T () S 32 T (e.printStackTrace\(\);) N
(346) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(IOException e\) {) p n
(347) # () S 8 T () S 16 T () S 24 T () S 32 T (e.printStackTrace\(\);) N
(348) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(XMLStreamException e\) {) p n
(349) # () S 8 T () S 16 T () S 24 T () S 32 T (e.printStackTrace\(\);) N
(350) # () S 8 T () S 16 T () S 24 T (}) N
(351) # () S 8 T () S 16 T (}) N
(352) # () N
(353) # () S 8 T () S 16 T (File[] f = ) S
(new) K
( File[1];) p n
(354) # () S 8 T () S 16 T (f[0] = dataBase;) N
(355) # () S 8 T () S 16 T () S
(return) K
( ) p
(new) K
( SBMLFormat\(\).load\(f\);) p n
(356) # () S 8 T (}) N
(357) # () N
(358) # () S 8 T () S
(public) K
( MetabolicNetworkItf getDataBaseNetwork\(\) {) p n
(359) # () S 8 T () S 16 T () S
(return) K
( dataBaseNetwork;) p n
(360) # () S 8 T (}) N
(361) # () N
(362) # (}) N
(MainControler.java) (Page 6/6) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/MainControler.java) (36/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 37
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( java.io.File;) p n
(22) # () S
(import) K
( java.util.List;) p n
(23) # () N
(24) # () S
(import) K
( javax.swing.filechooser.FileFilter;) p n
(25) # () N
(26) # () N
(27) # () S
(//test the extension of files) c n
(28) # () S
(public) K
( ) p
(class) K
( ) p
(ExtensionFilter) L
( ) p
(extends) K
( FileFilter {) p n
(29) # () N
(30) # () S 8 T () S
(private) K
( List<String> extension;) p n
(31) # () S 8 T () S
(private) K
( String description;) p n
(32) # () N
(33) # () S 8 T () S
(public) K
( ExtensionFilter\(List<String> extension, String description\) {) p n
(34) # () S 8 T () S 16 T (this.extension = extension;) N
(35) # () S 8 T () S 16 T (this.description = description;) N
(36) # () N
(37) # () S 8 T (}) N
(38) # () N
(39) # () S 8 T () S
(public) K
( ) p
(boolean) k
( accept\(File f\) {) p n
(40) # () S 8 T () S 16 T () S
(if) K
( \(f.isDirectory\(\)\) {) p n
(41) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(true) k
(;) p n
(42) # () S 8 T () S 16 T (}) N
(43) # () S 8 T () S 16 T (String nomFichier = f.getName\(\).toLowerCase\(\);) N
(44) # () N
(45) # () S 8 T () S 16 T () S
(for) K
( \(String ext : extension\) {) p n
(46) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(nomFichier.endsWith\(ext\)\)) p n
(47) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(true) k
(;) p n
(48) # () S 8 T () S 16 T (}) N
(49) # () S 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
(50) # () S 8 T (}) N
(51) # () N
(52) # () S 8 T () S
(public) K
( String getDescription\(\) {) p n
(53) # () S 8 T () S 16 T () S
(return) K
( description;) p n
(54) # () S 8 T (}) N
(55) # () N
(56) # (}) N
(ExtensionFilter.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/ExtensionFilter.java) (37/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 38
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.metabolites;) p n
(20) # () N
(21) # () S
(import) K
( javax.swing.JTable;) p n
(22) # () S
(import) K
( javax.swing.event.CellEditorListener;) p n
(23) # () S
(import) K
( javax.swing.event.ChangeEvent;) p n
(24) # () N
(25) # () S
(import) K
( controler.MainControler;) p n
(26) # () N
(27) # () S
(import) K
( view.GeneralFrame;) p n
(28) # () S
(import) K
( view.MetabosPanel;) p n
(29) # () N
(30) # () S
(//clear the selection when JTables are edited) c n
(31) # () S
(public) K
( ) p
(class) K
( ) p
(MetabosTableCellEditorListener) L
( ) p
(implements) K
( CellEditorListener {) p n
(32) # () N
(33) # () S 8 T () S
(private) K
( MetabosPanel panel;) p n
(34) # () S 8 T () S
(private) K
( JTable table;) p n
(35) # () S 8 T () S
(private) K
( MainControler controler;) p n
(36) # () N
(37) # () S 8 T () S
(public) K
( MetabosTableCellEditorListener\(MainControler controler,) p n
(38) # () S 8 T () S 16 T () S 24 T (MetabosPanel metabosPanel\) {) N
(39) # () S 8 T () S 16 T (this.panel = metabosPanel;) N
(40) # () S 8 T () S 16 T (this.controler = controler;) N
(41) # () S 8 T () S 16 T (this.table = metabosPanel.getTable\(\);) N
(42) # () S 8 T (}) N
(43) # () N
(44) # () S 8 T () S
(public) K
( ) p
(void) k
( editingCanceled\(ChangeEvent arg0\) {) p n
(45) # () N
(46) # () S 8 T (}) N
(47) # () N
(48) # () S 8 T () S
(public) K
( ) p
(void) k
( editingStopped\(ChangeEvent e\) {) p n
(49) # () N
(50) # () S 8 T () S 16 T () N
(51) # () S 8 T () S 16 T (String metabName = \(String\) table.getValueAt\(table.getSelectedRo) N
0 T (w\(\), 0\);) N
(52) # () N
(53) # () S 8 T () S 16 T (controler.setMetaboInternal\() N
(54) # () S 8 T () S 16 T () S 24 T () S 32 T (metabName,) N
(55) # () S 8 T () S 16 T () S 24 T () S 32 T (\(Boolean\) table.getValueAt\(table.getSelectedRow\() N
0 T (\),) N
(56) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (table.getSelectedColumn\(\)\)\);) N
(57) # () N
(58) # () S 8 T () S 16 T (table.clearSelection\(\);) N
(59) # () S 8 T () S 16 T (panel.setButtons\(\);) N
(60) # () S 8 T () S 16 T (GeneralFrame.getInstance\(controler\).enableSave\(\);) N
(61) # () N
(62) # () S 8 T (}) N
(63) # () N
(MetabosTableCellEditorListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(64) # (}) p n
(MetabosTableCellEditorListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/metabolites/MetabosTableCellEditorListener.java) (38/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 39
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.metabolites;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.awt.event.KeyEvent;) p n
(24) # () S
(import) K
( java.awt.event.KeyListener;) p n
(25) # () S
(import) K
( java.util.ArrayList;) p n
(26) # () S
(import) K
( java.util.List;) p n
(27) # () N
(28) # () S
(import) K
( javax.swing.JOptionPane;) p n
(29) # () S
(import) K
( javax.swing.JTable;) p n
(30) # () N
(31) # () S
(import) K
( controler.MainControler;) p n
(32) # () N
(33) # () S
(import) K
( model.Metabolite;) p n
(34) # () S
(import) K
( model.Reaction;) p n
(35) # () S
(import) K
( view.MetabosPanel;) p n
(36) # () N
(37) # () S
(//del metabolites selected ) c n
(38) # (//delete button or delete key) N
(39) # () S
(public) K
( ) p
(class) K
( ) p
(DelMetabListener) L
( ) p
(implements) K
( ActionListener, KeyListener  {) p n
(40) # () N
(41) # () S 8 T () S
(private) K
( JTable table;) p n
(42) # () S 8 T () S
(private) K
( MainControler controler;) p n
(43) # () N
(44) # () S 8 T () S
(public) K
( DelMetabListener\(MainControler controler, MetabosPanel panel\) {) p n
(45) # () S 8 T () S 16 T (this.controler = controler;) N
(46) # () S 8 T () S 16 T (this.table = panel.getTable\(\);) N
(47) # () N
(48) # () S 8 T (}) N
(49) # () N
(50) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(51) # () S 8 T () S 16 T (delMetabolites\(\);) N
(52) # () S 8 T (}) N
(53) # () N
(54) # () S 8 T () N
(55) # () S 8 T () S
(public) K
( ) p
(void) k
( keyPressed\(KeyEvent arg0\) {) p n
(56) # () S 8 T () S 16 T () S
(if) K
( \(arg0.getKeyCode\(\)==127 && table.hasFocus\(\)\){) p n
(57) # () S 8 T () S 16 T () S 24 T (delMetabolites\(\);) N
(58) # () S 8 T () S 16 T (}) N
(59) # () N
(60) # () S 8 T (}) N
(61) # () N
(62) # () S 8 T () S
(public) K
( ) p
(void) k
( keyReleased\(KeyEvent arg0\) {) p n
(63) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(64) # () N
(65) # () S
() p 8 T (}) N
(DelMetabListener.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p n
(67) # () S 8 T () S
(public) K
( ) p
(void) k
( keyTyped\(KeyEvent arg0\) {) p n
(68) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(69) # () N
(70) # () S
() p 8 T (}) N
(71) # () N
(72) # () S 8 T () S
(public) K
( ) p
(void) k
( delMetabolites\(\){) p n
(73) # () N
(74) # () S 8 T () S 16 T () S
(int) k
([] selectedIndices = table.getSelectedRows\(\);) p n
(75) # () S 8 T () S 16 T (String selectedMets [] = ) S
(new) K
( String[selectedIndices.length];) p n
(76) # () S 8 T () S 16 T () N
(77) # () S 8 T () S 16 T () S
(// list of deleted reactions when a metabolite is deleted) c n
(78) # () S
() p 8 T () S 16 T (List<String> concernedReactions = ) S
(new) K
( ArrayList<String>\(\);) p n
(79) # () N
(80) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < selectedIndices.length; i++\) {) p n
(81) # () S 8 T () S 16 T () S 24 T (selectedMets[i]=\(String\) table.getValueAt\(selectedIndice) N
0 T (s[i], 0\);) N
(82) # () S 8 T () S 16 T (}) N
(83) # () N
(84) # () N
(85) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < selectedMets.length; i++\) {) p n
(86) # () N
(87) # () S 8 T () S 16 T () S 24 T () N
(88) # () N
(89) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction reac : controler.getListReactions\(\)\) {) p n
(90) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Metabolite met : reac.getListMetabolite\(\)\) ) p n
0 T ({) N
(91) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(met.getName\(\) == selectedMets[i]\) {) p n
(92) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (concernedReactions.add\(reac.getN) N
0 T (ame\(\)\);) N
(93) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(94) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(95) # () S 8 T () S 16 T () S 24 T (}) N
(96) # () N
(97) # () S 8 T () S 16 T (}) N
(98) # () S 8 T () S 16 T (String warningMessage = ") S
(Are you sure you want to delete ) str
(") p n
(99) # () S 8 T () S 16 T () S 24 T () S 32 T (+ selectedMets.length + ") S
( metabolite\(s\) ? ) str
(";) p n
(100) # () N
(101) # () S 8 T () S 16 T () S
(if) K
( \(concernedReactions.size\(\) != 0\) {) p n
(102) # () S 8 T () S 16 T () S 24 T (warningMessage += ") S
(\\nIt would also remove the reactions :) str
(") p n
(103) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ reacs\(concernedReactions\);) N
(104) # () N
(105) # () S 8 T () S 16 T (}) N
(106) # () N
(107) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(JOptionPane.showConfirmDialog\() p
(null) k
(, warningMessage, ) p n
0 T ("",) N
(108) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.OK_CANCEL_OPTION\) == JOption) N
0 T (Pane.OK_OPTION\) {) N
(109) # () N
(110) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(String reac : concernedReactions\) {) p n
(111) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (controler.delReaction\(reac\);) N
(112) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(113) # () S 8 T () S 16 T () S 24 T () S 32 T () N
(114) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(String m : selectedMets\){) p n
(115) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (controler.delMetabolite\(m\);) N
(116) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(117) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(118) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.notifyObservers\(\);) N
(119) # () S 8 T () S 16 T () S 24 T (}) N
(120) # () S 8 T () S 16 T (}) N
(121) # () S 8 T () N
(122) # () S 8 T () S
(public) K
( String reacs\(List<String> liste\) {) p n
(123) # () S 8 T () S 16 T () S
(int) k
( i=0;) p n
(124) # () S 8 T () S 16 T (String result = "";) N
(125) # () S 8 T () S 16 T () S
(for) K
( \(String reacName : liste\) {) p n
(126) # () S 8 T () S 16 T () S 24 T (result += "" + reacName + ") S
( ) str
(";) p n
(DelMetabListener.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/metabolites/DelMetabListener.java) (39/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 40
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(127) # () p 8 T () S 16 T () S 24 T () S
(if) K
( \(i%10==0\){) p n
(128) # () S 8 T () S 16 T () S 24 T () S 32 T (result +=") S
(\\n) str
(";) p n
(129) # () S 8 T () S 16 T () S 24 T (}) N
(130) # () S 8 T () S 16 T () S 24 T (i+=1;) N
(131) # () S 8 T () S 16 T (}) N
(132) # () N
(133) # () S 8 T () S 16 T () S
(return) K
( result;) p n
(134) # () N
(135) # () S 8 T (}) N
(136) # () N
(137) # (}) N
(DelMetabListener.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/metabolites/DelMetabListener.java) (40/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 41
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.metabolites;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () N
(24) # () S
(import) K
( javax.swing.JOptionPane;) p n
(25) # () S
(import) K
( javax.swing.JTable;) p n
(26) # () N
(27) # () S
(import) K
( controler.MainControler;) p n
(28) # () N
(29) # () S
(import) K
( view.GeneralFrame;) p n
(30) # () S
(import) K
( view.MetabosPanel;) p n
(31) # () S
(import) K
( view.popup.MetaboliteFrame;) p n
(32) # () N
(33) # () N
(34) # () S
(//edit metabolite by edit button) c n
(35) # () S
(public) K
( ) p
(class) K
( ) p
(EditMetabListener) L
( ) p
(implements) K
( ActionListener {) p n
(36) # () N
(37) # () S 8 T () S
(private) K
( JTable table;) p n
(38) # () S 8 T () S
(private) K
( MainControler controler;) p n
(39) # () N
(40) # () S 8 T () S
(public) K
( EditMetabListener\(MainControler controler, MetabosPanel panel\) {) p n
(41) # () S 8 T () S 16 T (this.controler = controler;) N
(42) # () S 8 T () S 16 T (this.table = panel.getTable\(\);) N
(43) # () N
(44) # () S 8 T (}) N
(45) # () N
(46) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(47) # () S 8 T () S 16 T () S
(//get the name of the metabolite and the name) c n
(48) # () S
() p 8 T () S 16 T () S
(// to pre fill the fields) c n
(49) # () S
() p 8 T () S 16 T (String metName = \(String\) table.getValueAt\(table.getSelectedRow\() N
0 T (\), 0\);) N
(50) # () S 8 T () S 16 T (String metDescription = \(String\) table.getValueAt\() N
(51) # () S 8 T () S 16 T () S 24 T () S 32 T (table.getSelectedRow\(\), 2\);) N
(52) # () S 8 T () S 16 T () S
(//show edit frame) c n
(53) # () S
() p 8 T () S 16 T (MetaboliteFrame f = ) S
(new) K
( MetaboliteFrame\() p n
(54) # () S 8 T () S 16 T () S 24 T () S 32 T (GeneralFrame.getInstance\(controler\),) N
(55) # () S 8 T () S 16 T () S 24 T () S 32 T (\(Boolean\) table.getValueAt\(table.getSelectedRow\() N
0 T (\), 1\), metName,) N
(56) # () S 8 T () S 16 T () S 24 T () S 32 T (metDescription\);) N
(57) # () S 8 T () S 16 T () S
(//replace old values) c n
(58) # () S
() p 8 T () S 16 T () S
(if) K
( \(f.okPressed\(\) && !f.getName\(\).equals\(""\)\) {) p n
(59) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(!controler.getNetwork\(\).hasName\(f.getName\(\)\) || \(f.g) p n
0 T (etName\(\).toLowerCase\(\).equals\(metName.toLowerCase\(\)\)\)\){) N
(60) # () S 8 T () S 16 T () S 24 T (controler.setMetaboInternal\(metName, f.isInternal\(\)\);) N
(61) # () S 8 T () S 16 T () S 24 T (controler.setMetabo\(metName, f.getName\(\), f.getDescripti) N
0 T (on\(\)\);) N
(EditMetabListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(62) # () p 8 T () S 16 T () S 24 T (}) N
(63) # () S 8 T () S 16 T () S 24 T () S
(else) K
( {) p n
(64) # () S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(65) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(Another reaction or metabolite has the same n) str n
0 T (ame) S
(", ") p
(Error) str
(",) p n
(66) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane.ERROR_MESSAGE\);) N
(67) # () S 8 T () S 16 T () S 24 T (}) N
(68) # () S 8 T () S 16 T () S 24 T (controler.notifyObservers\(\);) N
(69) # () S 8 T () S 16 T (}) N
(70) # () S 8 T (}) N
(71) # (}) N
(EditMetabListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/metabolites/EditMetabListener.java) (41/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 42
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.metabolites;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () N
(24) # () S
(import) K
( javax.swing.JOptionPane;) p n
(25) # () N
(26) # () S
(import) K
( controler.MainControler;) p n
(27) # () N
(28) # () S
(import) K
( view.GeneralFrame;) p n
(29) # () S
(import) K
( view.popup.MetaboliteFrame;) p n
(30) # () N
(31) # () S
(//Add metabolite when add button is clicked) c n
(32) # () S
(public) K
( ) p
(class) K
( ) p
(AddMetabListener) L
( ) p
(implements) K
( ActionListener {) p n
(33) # () N
(34) # () S 8 T () S
(private) K
( MainControler controler;) p n
(35) # () N
(36) # () S 8 T () S
(public) K
( AddMetabListener\(MainControler controler\) {) p n
(37) # () S 8 T () S 16 T (this.controler = controler;) N
(38) # () N
(39) # () S 8 T (}) N
(40) # () N
(41) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(42) # () S 8 T () S 16 T (MetaboliteFrame f = ) S
(new) K
( MetaboliteFrame\() p n
(43) # () S 8 T () S 16 T () S 24 T () S 32 T (GeneralFrame.getInstance\(controler\), ) S
(true) k
(, "", ") p n
0 T ("\);) N
(44) # () S 8 T () S 16 T () N
(45) # () S 8 T () S 16 T () S
(//if ok is pressed and metabolite name is not empty) c n
(46) # () S
() p 8 T () S 16 T () S
(//metabolite is added) c n
(47) # () S
() p 8 T () S 16 T () S
(if) K
( \(f.okPressed\(\) && !f.getName\(\).equals\(""\)\) {) p n
(48) # () S 8 T () S 16 T () S 24 T (String name = controler.getNetwork\(\).formatName\(f.getNam) N
0 T (e\(\)\);) N
(49) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(!controler.getNetwork\(\).hasName\(name\)\) {) p n
(50) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.addMetabolite\(name, f.getDescription\(\)) N
0 T (,) N
(51) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (f.isInternal\(\)\);) N
(52) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.notifyObservers\(\);) N
(53) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(54) # () S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(55) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(Another reaction or metabolite has the same n) str n
0 T (ame) S
(", ") p
(Error) str
(",) p n
(56) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane.ERROR_MESSAGE\);) N
(57) # () S 8 T () S 16 T () S 24 T (}) N
(58) # () N
(59) # () S 8 T () S 16 T (}) N
(60) # () S 8 T (}) N
(61) # (}) N
(AddMetabListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/metabolites/AddMetabListener.java) (42/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 43
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.metabolites;) p n
(20) # () N
(21) # () S
(import) K
( javax.swing.JTable;) p n
(22) # () S
(import) K
( javax.swing.event.ListSelectionEvent;) p n
(23) # () S
(import) K
( javax.swing.event.ListSelectionListener;) p n
(24) # () N
(25) # () S
(import) K
( controler.MainControler;) p n
(26) # () N
(27) # () S
(import) K
( view.MetabosPanel;) p n
(28) # () N
(29) # () S
(//set the panel buttons depending on the selection of JTables) c n
(30) # () S
(public) K
( ) p
(class) K
( ) p
(MetabosTableSelectionListener) L
( ) p
(implements) K
( ListSelectionListener {) p n
(31) # () S 8 T () S
(private) K
( MetabosPanel panel;) p n
(32) # () S 8 T () S
(private) K
( JTable table;) p n
(33) # () N
(34) # () S 8 T () S
(public) K
( MetabosTableSelectionListener\(MetabosPanel metabosPanel,) p n
(35) # () S 8 T () S 16 T () S 24 T (String col2, MainControler controler\) {) N
(36) # () S 8 T () S 16 T (this.panel = metabosPanel;) N
(37) # () S 8 T () S 16 T (this.table = metabosPanel.getTable\(\);) N
(38) # () S 8 T (}) N
(39) # () N
(40) # () S 8 T () S
(public) K
( ) p
(void) k
( valueChanged\(ListSelectionEvent e\) {) p n
(41) # () S 8 T () S 16 T () S
(if) K
( \(!e.getValueIsAdjusting\(\) && table.getSelectedRow\(\) >= 0\) {) p n
(42) # () S 8 T () S 16 T () S 24 T (panel.setButtons\(\);) N
(43) # () S 8 T () S 16 T (}) N
(44) # () N
(45) # () S 8 T (}) N
(46) # (}) N
(MetabosTableSelectionListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/metabolites/MetabosTableSelectionListener.java) (43/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 44
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( javax.swing.JList;) p n
(22) # () S
(import) K
( javax.swing.event.ListSelectionEvent;) p n
(23) # () S
(import) K
( javax.swing.event.ListSelectionListener;) p n
(24) # () N
(25) # () S
(import) K
( view.RulesPanel;) p n
(26) # () N
(27) # () N
(28) # () S
(//set the buttons of rules panel) c n
(29) # (//depending on the selection) N
(30) # () S
(public) K
( ) p
(class) K
( ) p
(RulesListSelectionListener) L
( ) p
(implements) K
( ListSelectionListener {) p n
(31) # () S 8 T () S
(private) K
( RulesPanel panel;) p n
(32) # () S 8 T () S
(private) K
( JList<?> list;) p n
(33) # () N
(34) # () S 8 T () S
(public) K
( RulesListSelectionListener\(RulesPanel panel, JList<?> list\) {) p n
(35) # () S 8 T () S 16 T (this.panel = panel;) N
(36) # () S 8 T () S 16 T (this.list = list;) N
(37) # () S 8 T (}) N
(38) # () N
(39) # () S 8 T () S
(public) K
( ) p
(void) k
( valueChanged\(ListSelectionEvent e\) {) p n
(40) # () S 8 T () S 16 T () S
(if) K
( \(!e.getValueIsAdjusting\(\) && list.getSelectedValue\(\) != ) p
(null) k
(\)) p n
0 T ( {) N
(41) # () N
(42) # () S 8 T () S 16 T () S 24 T (panel.setEnableButtons\() S
(true) k
(\);) p n
(43) # () N
(44) # () S 8 T () S 16 T (}) N
(45) # () N
(46) # () S 8 T (}) N
(47) # () N
(48) # (}) N
(RulesListSelectionListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/RulesListSelectionListener.java) (44/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 45
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.Color;) p n
(22) # () N
(23) # () S
(import) K
( javax.swing.ImageIcon;) p n
(24) # () N
(25) # () N
(26) # () S
(//contains all the variables re used ) c n
(27) # () S
(public) K
( ) p
(class) K
( ) p
(Var) L
( {) p n
(28) # () S 8 T () N
(29) # () S 8 T () S
(//icons) c n
(30) # () S
() p 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconnew = ) p
(new) K
( ImageIcon\(") p
(src/icons/new.png) str
("\);) p n
(31) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconfile = ) p
(new) K
( ImageIcon\(") p
(src/icons/file.png) str
("\);) p n
(32) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconsave = ) p
(new) K
( ImageIcon\(") p
(src/icons/save.png) str
("\);) p n
(33) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconimport = ) p
(new) K
( ImageIcon\(") p
(src/icons/import.png) str
("\);) p n
(34) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconrun = ) p
(new) K
( ImageIcon\(") p
(src/icons/run.png) str
("\);) p n
(35) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconvisu = ) p
(new) K
( ImageIcon\(") p
(src/icons/reseau.png) str
("\);) p n
(36) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconajout = ) p
(new) K
( ImageIcon\(") p
(src/icons/add.png) str
("\);) p n
(37) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconmodif = ) p
(new) K
( ImageIcon\(") p
(src/icons/modif.png) str
("\);) p n
(38) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconsupp = ) p
(new) K
( ImageIcon\(") p
(src/icons/supp.png) str
("\);) p n
(39) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconsearch = ) p
(new) K
( ImageIcon\(") p
(src/icons/search.png) str
("\);) p n
(40) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconaddtoproject = ) p
(new) K
( ImageIcon\(") p
(src/icons/attach.png) str
() p n
0 T ("\);) N
(41) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconremoveproject = ) p
(new) K
( ImageIcon\(") p
(src/icons/dettach.p) str n
0 T (ng) S
("\);) p n
(42) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon undo = ) p
(new) K
( ImageIcon\(") p
(src/icons/undo.png) str
("\);) p n
(43) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon redo = ) p
(new) K
( ImageIcon\(") p
(src/icons/redo.png) str
("\);) p n
(44) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon download = ) p
(new) K
( ImageIcon\(") p
(src/icons/download.png) str
("\);) p n
(45) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon upload = ) p
(new) K
( ImageIcon\(") p
(src/icons/upload.png) str
("\);) p n
(46) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon savelittle = ) p
(new) K
( ImageIcon\(") p
(src/icons/savelittle.png) str
("\);) p n
(47) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon logo = ) p
(new) K
( ImageIcon\(") p
(src/icons/logo_j-varo.png) str
("\);) p n
(48) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon suplittle = ) p
(new) K
( ImageIcon\(") p
(src/icons/supplittle.png) str
("\);) p n
(49) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconleft = ) p
(new) K
( ImageIcon\(") p
(src/icons/left.png) str
("\);) p n
(50) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconright = ) p
(new) K
( ImageIcon\(") p
(src/icons/right.png) str
("\);) p n
(51) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon logolittle = ) p
(new) K
( ImageIcon\(") p
(src/icons/logo_icon.png) str
("\);) p n
(52) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconfilter = ) p
(new) K
( ImageIcon\(") p
(src/icons/filter.png) str
("\);) p n
(53) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconhistogram = ) p
(new) K
( ImageIcon\(") p
(src/icons/graph.png) str
("\);) p n
(54) # () S 8 T () S
(public) K
( ) p
(static) K
( ImageIcon iconcmd = ) p
(new) K
( ImageIcon\(") p
(src/icons/cmd.png) str
("\);) p n
(55) # () N
(56) # () S 8 T () S
(//colors for visualization) c n
(57) # () S
() p 8 T () S
(public) K
( ) p
(static) K
( Color reacRevColor = ) p
(new) K
( Color\(153,153,204,255\);) p n
(58) # () S 8 T () S
(public) K
( ) p
(static) K
( Color reacIrrevColor = ) p
(new) K
( Color\(51,204,255,255\);) p n
(59) # () S 8 T () S
(public) K
( ) p
(static) K
( Color metabIntColor = ) p
(new) K
( Color\(255,204,102,255\);) p n
(60) # () S 8 T () S
(public) K
( ) p
(static) K
( Color metabExtColor = ) p
(new) K
( Color\(255,102,0,255\);) p n
(61) # () S 8 T () S
(public) K
( ) p
(static) K
( Color textColor = ) p
(new) K
( Color\(0,0,0,255\);) p n
(62) # () S 8 T () N
(63) # () S 8 T () S
(//extension) c n
(Var.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(64) # () p 8 T () S
(public) K
( ) p
(static) K
( String extension = ") p
(.jvr) str
(";) p n
(65) # () S 8 T () N
(66) # (}) N
(Var.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/Var.java) (45/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 46
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( java.util.HashSet;) p n
(22) # () S
(import) K
( java.util.Map;) p n
(23) # () S
(import) K
( java.util.Set;) p n
(24) # () N
(25) # () S
(import) K
( model.ElementaryMode;) p n
(26) # () S
(import) K
( model.Metabolite;) p n
(27) # () S
(import) K
( model.Reaction;) p n
(28) # () N
(29) # () S
(//display the result with chosen metabolites and reactions) c n
(30) # () S
(public) K
( ) p
(class) K
( ) p
(Filter) L
( {) p n
(31) # () N
(32) # () S 8 T () S
(private) K
( Set<Reaction> reactions = ) p
(new) K
( HashSet<Reaction>\(\);) p n
(33) # () S 8 T () S
(private) K
( Set<Metabolite> metabolites = ) p
(new) K
( HashSet<Metabolite>\(\);) p n
(34) # () N
(35) # () S 8 T () S
(// return true is the mode is accepted by the filter) c n
(36) # () S
() p 8 T () S
(public) K
( ) p
(boolean) k
( accepts\(ElementaryMode mode\) {) p n
(37) # () S 8 T () S 16 T (Map<Reaction, Double> map = mode.getContent\(\);) N
(38) # () N
(39) # () S 8 T () S 16 T () S
(for) K
( \(Reaction filterReac : reactions\) {) p n
(40) # () S 8 T () S 16 T () S 24 T () S
(boolean) k
( isPresent = ) p
(false) k
(;) p n
(41) # () N
(42) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction modeReac : map.keySet\(\)\) {) p n
(43) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(modeReac.equals\(filterReac\)\) {) p n
(44) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (isPresent = ) S
(true) k
(;) p n
(45) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(break) K
(;) p n
(46) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(47) # () N
(48) # () S 8 T () S 16 T () S 24 T (}) N
(49) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(!isPresent\)) p n
(50) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(false) k
(;) p n
(51) # () N
(52) # () S 8 T () S 16 T (}) N
(53) # () N
(54) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite filterMet : metabolites\) {) p n
(55) # () S 8 T () S 16 T () S 24 T () S
(boolean) k
( isPresent = ) p
(false) k
(;) p n
(56) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Metabolite modeMet : mode.getListMetabolite\(\)\) {) p n
(57) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(modeMet.equals\(filterMet\)\) {) p n
(58) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (isPresent = ) S
(true) k
(;) p n
(59) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(break) K
(;) p n
(60) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(61) # () S 8 T () S 16 T () S 24 T (}) N
(62) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(!isPresent\)) p n
(63) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(false) k
(;) p n
(64) # () S 8 T () S 16 T (}) N
(65) # () N
(Filter.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(67) # () S 8 T (}) N
(68) # () N
(69) # () S 8 T () S
(public) K
( Set<Reaction> getReactions\(\) {) p n
(70) # () S 8 T () S 16 T () S
(return) K
( reactions;) p n
(71) # () S 8 T (}) N
(72) # () N
(73) # () S 8 T () S
(public) K
( Set<Metabolite> getMetabolites\(\) {) p n
(74) # () S 8 T () S 16 T () S
(return) K
( metabolites;) p n
(75) # () S 8 T (}) N
(76) # () N
(77) # () S 8 T () S
(public) K
( ) p
(void) k
( addReaction\(Reaction r\) {) p n
(78) # () S 8 T () S 16 T (reactions.add\(r\);) N
(79) # () S 8 T (}) N
(80) # () N
(81) # () S 8 T () S
(public) K
( ) p
(void) k
( addMetabolite\(Metabolite m\) {) p n
(82) # () S 8 T () S 16 T (metabolites.add\(m\);) N
(83) # () S 8 T (}) N
(84) # () N
(85) # () S 8 T () S
(public) K
( ) p
(void) k
( reset\(\) {) p n
(86) # () S 8 T () S 16 T (reactions.clear\(\);) N
(87) # () S 8 T () S 16 T (metabolites.clear\(\);) N
(88) # () S 8 T (}) N
(89) # (}) N
(Filter.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/Filter.java) (46/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 47
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () N
(24) # () S
(import) K
( view.GeneralFrame;) p n
(25) # () S
(import) K
( view.popup.NewProjectFrame;) p n
(26) # () N
(27) # () S
(//create a new project) c n
(28) # () S
(public) K
( ) p
(class) K
( ) p
(NewProjectListener) L
( ) p
(implements) K
( ActionListener {) p n
(29) # () N
(30) # () S 8 T () S
(private) K
( MainControler controler;) p n
(31) # () N
(32) # () S 8 T () S
(public) K
( NewProjectListener\(MainControler controler\) {) p n
(33) # () S 8 T () S 16 T (this.controler = controler;) N
(34) # () N
(35) # () S 8 T (}) N
(36) # () N
(37) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(38) # () N
(39) # () S 8 T () S 16 T (NewProjectFrame npf = ) S
(new) K
( NewProjectFrame\() p n
(40) # () S 8 T () S 16 T () S 24 T () S 32 T (GeneralFrame.getInstance\(controler\)\);) N
(41) # () N
(42) # () S 8 T () S 16 T () S
(if) K
( \(npf.okPressed\(\)\) {) p n
(43) # () S 8 T () S 16 T () S 24 T (controler.createProject\(npf.getName\(\).trim\(\), npf.getPat) N
0 T (h\(\) + ") S
(/) str
(") p n
(44) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ npf.getName\(\)\);) N
(45) # () S 8 T () S 16 T () S 24 T (controler.notifyObservers\(\);) N
(46) # () S 8 T () S 16 T (}) N
(47) # () S 8 T (}) N
(48) # () N
(49) # (}) N
(NewProjectListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/NewProjectListener.java) (47/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 48
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( java.io.BufferedWriter;) p n
(22) # () S
(import) K
( java.io.File;) p n
(23) # () S
(import) K
( java.io.FileWriter;) p n
(24) # () S
(import) K
( java.io.IOException;) p n
(25) # () N
(26) # () S
(import) K
( javax.swing.JFileChooser;) p n
(27) # () S
(import) K
( javax.swing.JOptionPane;) p n
(28) # () S
(import) K
( javax.swing.SwingUtilities;) p n
(29) # () S
(import) K
( javax.swing.UIManager;) p n
(30) # () N
(31) # () S
(//download class : ) c n
(32) # (//download svg files and result files) N
(33) # () S
(public) K
( ) p
(class) K
( ) p
(Download) L
( {) p n
(34) # () N
(35) # () S 8 T () S
(private) K
( JFileChooser fc = ) p
(new) K
( JFileChooser\(\);) p n
(36) # () N
(37) # () S 8 T () S
(public) K
( Download\(String downloadContent, String message,String extension\)) p n
0 T ( {) N
(38) # () S 8 T () S 16 T () N
(39) # () S 8 T () S 16 T () S
(//open file chooser) c n
(40) # () S
() p 8 T () S 16 T (UIManager.put\(") S
(FileChooser.saveDialogTitleText) str
(", message\);) p n
(41) # () S 8 T () S 16 T (SwingUtilities.updateComponentTreeUI\(fc\);) N
(42) # () S 8 T () S 16 T () S
(int) k
( returnVal = fc.showSaveDialog\(fc\);) p n
(43) # () S 8 T () S 16 T () N
(44) # () S 8 T () S 16 T () S
(//if user select "ok") c n
(45) # () S
() p 8 T () S 16 T () S
(if) K
( \(returnVal == JFileChooser.APPROVE_OPTION\) {) p n
(46) # () S 8 T () S 16 T () S 24 T (File file = fc.getSelectedFile\(\);) N
(47) # () S 8 T () S 16 T () S 24 T () N
(48) # () S 8 T () S 16 T () S 24 T () S
(boolean) k
( doIt = ) p
(true) k
(;) p n
(49) # () S 8 T () S 16 T () S 24 T () N
(50) # () S 8 T () S 16 T () S 24 T () S
(//if the file already exists) c n
(51) # () S
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(file.isFile\(\)\) {) p n
(52) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(JOptionPane.showConfirmDialog\() p
(null) k
(,) p n
(53) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(This file already exists, are you sure you want) str n
0 T ( to delete it ?) S
(", "",) p n
(54) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane.YES_NO_OPTION\) == JO) N
0 T (ptionPane.NO_OPTION\) {) N
(55) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (doIt=) S
(false) k
(;) p n
(56) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(57) # () N
(58) # () S 8 T () S 16 T () S 24 T (}) N
(59) # () S 8 T () S 16 T () S 24 T () S
(//write the file) c n
(60) # () S
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(doIt\) {) p n
(61) # () S 8 T () S 16 T () S 24 T () S 32 T (BufferedWriter out;) N
(62) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(try) K
( {) p n
(Download.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(63) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(64) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (String outName=file.getAbsolutePath\(\);) N
(65) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(!outName.endsWith\(extension\)\){) p n
(66) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (outName+=extension;) N
(67) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(68) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(69) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (out = ) S
(new) K
( BufferedWriter\() p
(new) K
( FileWriter\() p
() K n
0 T (new) S
( File\(outName\), ) p
(false) k
(\)\);) p n
(70) # () N
(71) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (out.write\(downloadContent\);) N
(72) # () N
(73) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (out.close\(\);) N
(74) # () N
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Suc) str n
0 T (cessfully saved ) S
(") p n
(76) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ outName + ") S
( !) str
(", ") p
(Succes) str
(") p n
0 T (,) N
(77) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (JOptionPane.INFORMATION_) N
0 T (MESSAGE\);) N
(78) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(catch) K
( \(IOException e2\) {) p n
(79) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// TODO Auto-generated catch block) c n
(80) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (e2.printStackTrace\(\);) N
(81) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(82) # () S 8 T () S 16 T () S 24 T (}) N
(83) # () S 8 T () S 16 T () S 24 T () S
(else) K
({) p n
(84) # () S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Download canc) str n
0 T (elled) S
(", ") p
(Cancelled) str
(",) p n
(85) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane.INFORMATION_MESSAGE\)) N
0 T (;) N
(86) # () S 8 T () S 16 T () S 24 T () S 32 T () N
(87) # () S 8 T () S 16 T () S 24 T (}) N
(88) # () S 8 T () S 16 T (}) N
(89) # () N
(90) # () S 8 T (}) N
(91) # (}) N
(Download.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/Download.java) (48/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 49
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( java.util.regex.Pattern;) p n
(22) # () N
(23) # () S
(import) K
( javax.swing.JTextField;) p n
(24) # () S
(import) K
( javax.swing.RowFilter;) p n
(25) # () S
(import) K
( javax.swing.event.DocumentEvent;) p n
(26) # () S
(import) K
( javax.swing.event.DocumentListener;) p n
(27) # () S
(import) K
( javax.swing.table.TableModel;) p n
(28) # () S
(import) K
( javax.swing.table.TableRowSorter;) p n
(29) # () N
(30) # () S
(//Update the tables when the searchField is modified ) c n
(31) # () S
(public) K
( ) p
(class) K
( ) p
(MyDocumentListener) L
( ) p
(implements) K
( DocumentListener {) p n
(32) # () N
(33) # () S 8 T () S
(private) K
( JTextField searchField;) p n
(34) # () S 8 T () S
(private) K
( TableRowSorter<TableModel> sorter;) p n
(35) # () S 8 T () S
(private) K
( ) p
(int) k
( col1;) p n
(36) # () S 8 T () S
(private) K
( ) p
(int) k
( col2;) p n
(37) # () N
(38) # () S 8 T () S
(public) K
( MyDocumentListener\(JTextField field,) p n
(39) # () S 8 T () S 16 T () S 24 T (TableRowSorter<TableModel> sorter,) S
(int) k
( col1,) p
(int) k
(  col2\) {) p n
(40) # () S 8 T () S 16 T (this.searchField = field;) N
(41) # () S 8 T () S 16 T (this.sorter = sorter;) N
(42) # () S 8 T () S 16 T (this.col1 = col1;) N
(43) # () S 8 T () S 16 T (this.col2=col2;) N
(44) # () S 8 T (}) N
(45) # () N
(46) # () S 8 T () S
(public) K
( ) p
(void) k
( changedUpdate\(DocumentEvent e\) {) p n
(47) # () N
(48) # () S 8 T (}) N
(49) # () S 8 T () N
(50) # () S 8 T () S
(public) K
( ) p
(void) k
( insertUpdate\(DocumentEvent e\) {) p n
(51) # () S 8 T () S 16 T (String text = searchField.getText\(\);) N
(52) # () S 8 T () S 16 T () S
(if) K
( \(sorter.getModelRowCount\(\)!=0 && text.length\(\) != 0\){) p n
(53) # () S 8 T () S 16 T () S 24 T () S
(//case insensitive on column 0 and 2) c n
(54) # () S
() p 8 T () S 16 T () S 24 T (sorter.setRowFilter\(RowFilter.regexFilter\() N
(55) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(\(?i\)) str
(" + Pattern.quote\(text\), col1, col2\)) p n
0 T (\);) N
(56) # () S 8 T () S 16 T (}) N
(57) # () S 8 T (}) N
(58) # () N
(59) # () N
(60) # () S 8 T () S
(public) K
( ) p
(void) k
( removeUpdate\(DocumentEvent e\) {) p n
(61) # () S 8 T () S 16 T (String text = searchField.getText\(\);) N
(62) # () S 8 T () S 16 T () S
(if) K
( \(sorter.getModelRowCount\(\)!=0 \){) p n
(63) # () S 8 T () S 16 T () S 24 T (sorter.setRowFilter\(RowFilter.regexFilter\() N
(64) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(\(?i\)) str
(" + Pattern.quote\(text\), col1, col2\)) p n
(MyDocumentListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (\);) p n
(65) # () S 8 T () S 16 T (}) N
(66) # () S 8 T (}) N
(67) # (}) N
(MyDocumentListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/MyDocumentListener.java) (49/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 50
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( javax.swing.JTabbedPane;) p n
(22) # () S
(import) K
( javax.swing.event.ChangeEvent;) p n
(23) # () S
(import) K
( javax.swing.event.ChangeListener;) p n
(24) # () N
(25) # () S
(import) K
( view.ButtonTabComponent;) p n
(26) # () N
(27) # () S
(//Add close buttons JTabbedPane when a change occurs on the jtabbedpane) c n
(28) # () S
(public) K
( ) p
(class) K
( ) p
(ChangeTabListener) L
( ) p
(implements) K
( ChangeListener {) p n
(29) # () N
(30) # () S 8 T () S
(private) K
( JTabbedPane tabbedPane;) p n
(31) # () N
(32) # () S 8 T () N
(33) # () S 8 T () S
(public) K
( ChangeTabListener\(JTabbedPane tabbedPane\) {) p n
(34) # () S 8 T () S 16 T (this.tabbedPane = tabbedPane;) N
(35) # () S 8 T (}) N
(36) # () S 8 T () N
(37) # () S 8 T () S
(//two first panels \(reactions and rules\) ) c n
(38) # () S
() p 8 T () S
(//are not closable) c n
(39) # () S
() p 8 T () S
(public) K
( ) p
(void) k
( stateChanged\(ChangeEvent e\) {) p n
(40) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 2; i < tabbedPane.getTabCount\(\); i++\) {) p n
(41) # () S 8 T () S 16 T () S 24 T (tabbedPane.setTabComponentAt\(i, ) S
(new) K
( ButtonTabComponent\(t) p n
0 T (abbedPane\)\);) N
(42) # () S 8 T () S 16 T (}) N
(43) # () N
(44) # () S 8 T (}) N
(45) # () N
(46) # (}) N
(ChangeTabListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/ChangeTabListener.java) (50/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 51
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.visu;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.Color;) p n
(22) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(23) # () S
(import) K
( java.awt.event.ActionListener;) p n
(24) # () S
(import) K
( java.io.File;) p n
(25) # () S
(import) K
( java.io.IOException;) p n
(26) # () S
(import) K
( java.io.Serializable;) p n
(27) # () S
(import) K
( java.util.ArrayList;) p n
(28) # () S
(import) K
( java.util.List;) p n
(29) # () N
(30) # () S
(import) K
( javax.swing.JMenuItem;) p n
(31) # () S
(import) K
( javax.swing.JOptionPane;) p n
(32) # () S
(import) K
( javax.swing.JPopupMenu;) p n
(33) # () N
(34) # () S
(import) K
( model.Reaction;) p n
(35) # () N
(36) # () S
(import) K
( org.apache.batik.dom.events.DOMMouseEvent;) p n
(37) # () S
(import) K
( org.apache.batik.dom.svg.SAXSVGDocumentFactory;) p n
(38) # () S
(import) K
( org.apache.batik.dom.svg.SVGOMPoint;) p n
(39) # () S
(import) K
( org.apache.batik.swing.JSVGCanvas;) p n
(40) # () S
(import) K
( org.apache.batik.util.SVGConstants;) p n
(41) # () S
(import) K
( org.apache.batik.util.XMLResourceDescriptor;) p n
(42) # () S
(import) K
( org.w3c.dom.Document;) p n
(43) # () S
(import) K
( org.w3c.dom.Element;) p n
(44) # () S
(import) K
( org.w3c.dom.NodeList;) p n
(45) # () S
(import) K
( org.w3c.dom.events.Event;) p n
(46) # () S
(import) K
( org.w3c.dom.events.EventListener;) p n
(47) # () S
(import) K
( org.w3c.dom.events.EventTarget;) p n
(48) # () S
(import) K
( org.w3c.dom.svg.SVGDocument;) p n
(49) # () S
(import) K
( org.w3c.dom.svg.SVGLocatable;) p n
(50) # () S
(import) K
( org.w3c.dom.svg.SVGMatrix;) p n
(51) # () N
(52) # () S
(import) K
( view.VisualizationPanel;) p n
(53) # () N
(54) # () S
(import) K
( controler.MainControler;) p n
(55) # () N
(56) # () S
(public) K
( ) p
(class) K
( ) p
(MySvgCanvas) L
( ) p
(extends) K
( JSVGCanvas ) p
(implements) K
( Cloneable, Serializable {) p n
(57) # () N
(58) # () S 8 T () S
(private) K
( MainControler controler;) p n
(59) # () S 8 T () S
(private) K
( File svgFile;) p n
(60) # () S 8 T () S
(private) K
( Document doc;) p n
(61) # () S 8 T () S
(private) K
( VisualizationPanel vp;) p n
(62) # () N
(63) # () S 8 T () S
(// elemement selected when clicked) c n
(64) # () S
() p 8 T () S
(// list of associate node edge and label) c n
(65) # () S
() p 8 T () S
(private) K
( List<Element> selectedElementList;) p n
(MySvgCanvas.java) (Page 1/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S
(private) K
( String selectedElementID;) p n
(67) # () S 8 T () S
(private) K
( List<Element> selectedList;) p n
(68) # () S 8 T () S
(// listeners) c n
(69) # () S
() p 8 T () S
(private) K
( EventListener mouseDownListener = ) p
(new) K
( MouseDownListener\(\);) p n
(70) # () S 8 T () S
(private) K
( EventListener mouseUpListener = ) p
(new) K
( MouseUpListener\(\);) p n
(71) # () S 8 T () S
(private) K
( EventListener mouseOverListener = ) p
(new) K
( MouseOverListener\(\);) p n
(72) # () S 8 T () S
(private) K
( EventListener mouseOutListener = ) p
(new) K
( MouseOutListener\(\);) p n
(73) # () S 8 T () S
(private) K
( EventListener mouseMoveListener = ) p
(new) K
( MouseMoveListener\(\);) p n
(74) # () N
(75) # () S 8 T () S
(private) K
( JPopupMenu delMenu = ) p
(new) K
( JPopupMenu\(\);) p n
(76) # () S 8 T () S
(private) K
( JMenuItem delete = ) p
(new) K
( JMenuItem\(") p
(Delete) str
("\);) p n
(77) # () N
(78) # () S 8 T () S
(public) K
( MySvgCanvas\(File svgFile, ) p
(final) K
( MainControler controler,) p n
(79) # () S 8 T () S 16 T () S 24 T (VisualizationPanel vp\) {) N
(80) # () S 8 T () S 16 T (this.vp = vp;) N
(81) # () S 8 T () S 16 T (this.controler = controler;) N
(82) # () S 8 T () S 16 T (this.svgFile = svgFile;) N
(83) # () N
(84) # () S 8 T () S 16 T () S
(try) K
( {) p n
(85) # () S 8 T () S 16 T () S 24 T (String parser = XMLResourceDescriptor.getXMLParserClassN) N
0 T (ame\(\);) N
(86) # () S 8 T () S 16 T () S 24 T (SAXSVGDocumentFactory f = ) S
(new) K
( SAXSVGDocumentFactory\(pars) p n
0 T (er\);) N
(87) # () S 8 T () S 16 T () S 24 T (String uri = svgFile.toURI\(\).toString\(\);) N
(88) # () S 8 T () S 16 T () S 24 T (doc = f.createDocument\(uri\);) N
(89) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException ex\) {) p n
(90) # () S 8 T () S 16 T () S 24 T () S
(// ...) c n
(91) # () S
() p 8 T () S 16 T (}) N
(92) # () N
(93) # () S 8 T () S 16 T (this.setDocumentState\(JSVGCanvas.ALWAYS_DYNAMIC\);) N
(94) # () S 8 T () S 16 T (this.setSVGDocument\(\(SVGDocument\) doc\);) N
(95) # () N
(96) # () S 8 T () S 16 T (initListeners\(\);) N
(97) # () N
(98) # () S 8 T () S 16 T (delMenu.add\(delete\);) N
(99) # () N
(100) # () S 8 T (}) N
(101) # () N
(102) # () S 8 T () S
(// Constructor for clone) c n
(103) # () S
() p 8 T () S
(public) K
( MySvgCanvas\(File svgFile, MainControler controler,) p n
(104) # () S 8 T () S 16 T () S 24 T (SVGDocument document\) {) N
(105) # () N
(106) # () S 8 T () S 16 T (this.controler = controler;) N
(107) # () S 8 T () S 16 T (this.svgFile = svgFile;) N
(108) # () N
(109) # () S 8 T () S 16 T (this.setDocumentState\(JSVGCanvas.ALWAYS_DYNAMIC\);) N
(110) # () S 8 T () S 16 T (this.setSVGDocument\(document\);) N
(111) # () N
(112) # () S 8 T () S 16 T (initListeners\(\);) N
(113) # () N
(114) # () S 8 T (}) N
(115) # () N
(116) # () S 8 T () S
(public) K
( ) p
(void) k
( initListeners\(\) {) p n
(117) # () S 8 T () S 16 T () S
(// for nodes reactions and glasspane) c n
(118) # () S
() p 8 T () S 16 T (NodeList enzNodes = getSVGDocument\(\).getElementsByTagName\(") S
(rect) str
("\)) p n
0 T (;) N
(119) # () N
(120) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < enzNodes.getLength\(\); i++\) {) p n
(121) # () S 8 T () S 16 T () S 24 T (Element el = \(Element\) enzNodes.item\(i\);) N
(122) # () S 8 T () S 16 T () S 24 T (EventTarget t = \(EventTarget\) el;) N
(123) # () S 8 T () S 16 T () S 24 T () S
(// we don't want glasspane for this one) c n
(124) # () S
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(!el.getAttribute\(") p
(id) str
("\).equals\(") p
(glasspane) str
("\)\) {) p n
(125) # () N
(126) # () S 8 T () S 16 T () S 24 T () S 32 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEO) N
0 T (VER,) N
(127) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (mouseOverListener, ) S
(false) k
(\);) p n
(MySvgCanvas.java) (Page 2/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/visu/MySvgCanvas.java) (51/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 52
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(128) # () p 8 T () S 16 T () S 24 T () S 32 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEO) N
0 T (UT,) N
(129) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (mouseOutListener, ) S
(false) k
(\);) p n
(130) # () S 8 T () S 16 T () S 24 T (}) N
(131) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEDOWN,) N
(132) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseDownListener, ) S
(false) k
(\);) p n
(133) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEUP, mouse) N
0 T (UpListener,) N
(134) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(false) k
(\);) p n
(135) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEMOVE,) N
(136) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseMoveListener, ) S
(false) k
(\);) p n
(137) # () N
(138) # () S 8 T () S 16 T (}) N
(139) # () S 8 T () S 16 T () S
(// metabolites) c n
(140) # () S
() p 8 T () S 16 T (NodeList metNodes = getSVGDocument\(\).getElementsByTagName\(") S
(circle) str
(") p n
0 T (\);) N
(141) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < metNodes.getLength\(\); i++\) {) p n
(142) # () S 8 T () S 16 T () S 24 T (Element el = \(Element\) metNodes.item\(i\);) N
(143) # () N
(144) # () S 8 T () S 16 T () S 24 T (EventTarget t = \(EventTarget\) el;) N
(145) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEOVER,) N
(146) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseOverListener, ) S
(false) k
(\);) p n
(147) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEOUT,) N
(148) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseOutListener, ) S
(false) k
(\);) p n
(149) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEDOWN,) N
(150) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseDownListener, ) S
(false) k
(\);) p n
(151) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEUP, mouse) N
0 T (UpListener,) N
(152) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(false) k
(\);) p n
(153) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEMOVE,) N
(154) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseMoveListener, ) S
(false) k
(\);) p n
(155) # () S 8 T () S 16 T (}) N
(156) # () S 8 T () S 16 T () S
(// texts) c n
(157) # () S
() p 8 T () S 16 T (NodeList layoutNodes = getSVGDocument\(\).getElementsByTagName\(") S
(te) str n
0 T (xt) S
("\);) p n
(158) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < layoutNodes.getLength\(\); i++\) {) p n
(159) # () S 8 T () S 16 T () S 24 T (Element el = \(Element\) layoutNodes.item\(i\);) N
(160) # () N
(161) # () S 8 T () S 16 T () S 24 T (EventTarget t = \(EventTarget\) el;) N
(162) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEDOWN,) N
(163) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseDownListener, ) S
(false) k
(\);) p n
(164) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEUP, mouse) N
0 T (UpListener,) N
(165) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(false) k
(\);) p n
(166) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEMOVE,) N
(167) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseMoveListener, ) S
(false) k
(\);) p n
(168) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEOVER,) N
(169) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseOverListener, ) S
(false) k
(\);) p n
(170) # () S 8 T () S 16 T () S 24 T (t.addEventListener\(SVGConstants.SVG_EVENT_MOUSEOUT,) N
(171) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (mouseOutListener, ) S
(false) k
(\);) p n
(172) # () N
(173) # () S 8 T () S 16 T (}) N
(174) # () N
(175) # () S 8 T (}) N
(176) # () N
(177) # () S 8 T () S
(public) K
( ) p
(class) K
( ) p
(MouseDownListener) L
( ) p
(implements) K
( EventListener {) p n
(178) # () N
(179) # () S 8 T () S 16 T () S
(public) K
( ) p
(void) k
( handleEvent\(Event evt\) {) p n
(180) # () N
(181) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(\(DOMMouseEvent\) evt\).getButton\(\) == 0\) {) p n
(182) # () S 8 T () S 16 T () S 24 T () S 32 T (setToolTipText\() S
(null) k
(\);) p n
(183) # () S 8 T () S 16 T () S 24 T () S 32 T (setSeletecElements\(\(Element\) evt.getTarget\(\)\);) N
(184) # () S 8 T () S 16 T () S 24 T () S 32 T (selectedElementID = \(String\) \(\(Element\) evt.getT) N
0 T (arget\(\)\)) N
(185) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getAttribute\(") S
(id) str
("\);) p n
(186) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(selectedElementID.equals\(") p
(glasspane) str
("\)) p n
(MySvgCanvas.java) (Page 3/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(187) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& delMenu.isVisible\(\) == ) S
(true) k
(\) ) p n
0 T ({) N
(188) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (delMenu.setVisible\() S
(false) k
(\);) p n
(189) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(190) # () S 8 T () S 16 T () S 24 T (}) N
(191) # () N
(192) # () S 8 T () S 16 T () S 24 T () S
(// right click) c n
(193) # () S
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(\(\(DOMMouseEvent\) evt\).getButton\(\) == 2\) {) p n
(194) # () N
(195) # () S 8 T () S 16 T () S 24 T () S 32 T (setSeletecElements\(\(Element\) evt.getTarget\(\)\);) N
(196) # () S 8 T () S 16 T () S 24 T () S 32 T (selectedElementID = \(String\) \(\(Element\) evt.getT) N
0 T (arget\(\)\)) N
(197) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getAttribute\(") S
(id) str
("\);) p n
(198) # () N
(199) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!\(selectedElementID.equals\(") p
(glasspane) str
("\)\)\) {) p n
(200) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (selectedList = ) S
(null) k
(;) p n
(201) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// keep the selected elements after Mous) c n
0 T (eUpEvent) N
(202) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (selectedList = ) S
(new) K
( ArrayList<Element>\(se) p n
0 T (lectedElementList\);) N
(203) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(while) K
( \(delete.getActionListeners\(\).lengt) p n
0 T (h > 0\) {) N
(204) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (delete.removeActionListener\(dele) N
0 T (te.getActionListeners\(\)[0]\);) N
(205) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(206) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (delete.addActionListener\() S
(new) K
( ActionListe) p n
0 T (ner\(\) {) N
(207) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(public) K
( ) p
(void) k
( actionPerformed\(Acti) p n
0 T (onEvent e\) {) N
(208) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (delMenu.setVisible\() S
(false) k
() p n
0 T (\);) N
(209) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(if) K
( \(JOptionPane.showConf) p n
0 T (irmDialog\() S
(null) k
(, ") p
(Delete ) str
(") p n
(210) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (+ select) N
0 T (edElementID + ") S
( ?) str
(", "",) p n
(211) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (JOptionP) N
0 T (ane.YES_NO_OPTION\) == JOptionPane.YES_OPTION\) {) N
(212) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S
(if) K
( \(selectedList) p n
0 T ( != ) S
(null) k
(\) {) p n
(213) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S
(for) K
( \(Ele) p n
0 T (ment el : selectedList\) {) N
(214) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
0 T (doc.getDocumentElement\(\)) N
(215) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
0 T () S 0 T () S 8 T (.removeChild\(el\);) N
(216) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (}) N
(217) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (}) N
(218) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (repaint\(\);) N
(219) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S
(// vp.svgChange\() c n
0 T (\);) N
(220) # () N
(221) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (}) N
(222) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
(223) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}\);) N
(224) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (DOMMouseEvent elEvt = \(DOMMouseEvent\) ev) N
0 T (t;) N
(225) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(int) k
( x = elEvt.getScreenX\(\);) p n
(226) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(int) k
( y = elEvt.getScreenY\(\);) p n
(227) # () N
(228) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (delMenu.show\() S
(null) k
(, x, y\);) p n
(229) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (delMenu.setVisible\() S
(true) k
(\);) p n
(230) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(231) # () S 8 T () S 16 T () S 24 T (}) N
(232) # () N
(233) # () S 8 T () S 16 T (}) N
(234) # () S 8 T (}) N
(MySvgCanvas.java) (Page 4/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/visu/MySvgCanvas.java) (52/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 53
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(235) # () p n
(236) # () S 8 T () S
(public) K
( ) p
(class) K
( ) p
(MouseUpListener) L
( ) p
(implements) K
( EventListener {) p n
(237) # () N
(238) # () S 8 T () S 16 T () S
(public) K
( ) p
(void) k
( handleEvent\(Event evt\) {) p n
(239) # () S 8 T () S 16 T () S 24 T (selectedElementList = ) S
(null) k
(;) p n
(240) # () S 8 T () S 16 T (}) N
(241) # () S 8 T (}) N
(242) # () N
(243) # () S 8 T () S
(public) K
( ) p
(class) K
( ) p
(MouseMoveListener) L
( ) p
(implements) K
( EventListener {) p n
(244) # () N
(245) # () S 8 T () S 16 T () S
(public) K
( ) p
(void) k
( handleEvent\(Event evt\) {) p n
(246) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(selectedElementList != ) p
(null) k
(\) {) p n
(247) # () S 8 T () S 16 T () S 24 T () S 32 T (DOMMouseEvent elEvt = \(DOMMouseEvent\) evt;) N
(248) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( x = elEvt.getClientX\(\);) p n
(249) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( y = elEvt.getClientY\(\);) p n
(250) # () N
(251) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// Convert Screen coordinates to Document Coordi) c n
0 T (nates.) N
(252) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (SVGOMPoint pt = ) S
(new) K
( SVGOMPoint\(x, y\);) p n
(253) # () N
(254) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// elem --> screen) c n
(255) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (SVGMatrix mat = \(\(SVGLocatable\) evt.getTarget\(\)\)) N
0 T (.getScreenCTM\(\);) N
(256) # () S 8 T () S 16 T () S 24 T () S 32 T (mat = mat.inverse\(\); ) S
(// screen -> elem) c n
(257) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (SVGOMPoint dragpt = \(SVGOMPoint\) pt.matrixTransf) N
0 T (orm\(mat\);) N
(258) # () N
(259) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Element el : selectedElementList\) {) p n
(260) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(el.getTagName\(\).equals\(") p
(text) str
("\)\) {) p n
(261) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (el.setAttribute\(") S
(x) str
(",) p n
(262) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S
(new) K
( Double\(dragp) p n
0 T (t.getX\(\)\).toString\(\)\);) N
(263) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (el.setAttribute\(") S
(y) str
(",) p n
(264) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S
(new) K
( Double\(dragp) p n
0 T (t.getY\(\)\).toString\(\)\);) N
(265) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(else) K
( ) p
(if) K
( \(el.getTagName\(\).equals\(") p
(line) str
("\)) p n
0 T (\) {) N
(266) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(el.getAttribute\(") p
(source) str
("\).equ) p n
0 T (als\(selectedElementID\)\) {) N
(267) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (el.setAttribute\(") S
(x1) str
(",) p n
(268) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S
(new) K
( Doub) p n
0 T (le\(dragpt.getX\(\)\).toString\(\)\);) N
(269) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (el.setAttribute\(") S
(y1) str
(",) p n
(270) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S
(new) K
( Doub) p n
0 T (le\(dragpt.getY\(\)\).toString\(\)\);) N
(271) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (} ) S
(else) K
( {) p n
(272) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (el.setAttribute\(") S
(x2) str
(",) p n
(273) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S
(new) K
( Doub) p n
0 T (le\(dragpt.getX\(\)\).toString\(\)\);) N
(274) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (el.setAttribute\(") S
(y2) str
(",) p n
(275) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S
(new) K
( Doub) p n
0 T (le\(dragpt.getY\(\)\).toString\(\)\);) N
(276) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
(277) # () N
(278) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(else) K
( ) p
(if) K
( \(el.getTagName\(\).equals\(") p
(rect) str
("\)) p n
0 T (\) {) N
(279) # () N
(280) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(double) k
( size = Double.parseDouble) p n
0 T (\(el) N
(281) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (.getAttribute\(") S
(h) str n
0 T (eight) S
("\)\);) p n
(282) # () N
(283) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (el.setAttribute\(") S
(x) str
(", ) p
(new) K
( Double\() p n
0 T (dragpt.getX\(\)) N
(284) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (- \(size / 2\)\).to) N
0 T (String\(\)\);) N
(MySvgCanvas.java) (Page 5/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(285) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (el.setAttribute\(") S
(y) str
(", ) p
(new) K
( Double\() p n
0 T (dragpt.getY\(\)) N
(286) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (- \(size / 2\)\).to) N
0 T (String\(\)\);) N
(287) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(288) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// for circles) c n
(289) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(else) K
( {) p n
(290) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (el.setAttribute\(") S
(cx) str
(",) p n
(291) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S
(new) K
( Double\(dragp) p n
0 T (t.getX\(\)\).toString\(\)\);) N
(292) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (el.setAttribute\(") S
(cy) str
(",) p n
(293) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S
(new) K
( Double\(dragp) p n
0 T (t.getY\(\)\).toString\(\)\);) N
(294) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(295) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(296) # () N
(297) # () S 8 T () S 16 T () S 24 T (}) N
(298) # () S 8 T () S 16 T (}) N
(299) # () S 8 T (}) N
(300) # () N
(301) # () S 8 T () S
(// displays informations) c n
(302) # () S
() p 8 T () S
(public) K
( ) p
(class) K
( ) p
(MouseOverListener) L
( ) p
(implements) K
( EventListener {) p n
(303) # () N
(304) # () S 8 T () S 16 T () S
(public) K
( ) p
(void) k
( handleEvent\(Event evt\) {) p n
(305) # () S 8 T () S 16 T () S 24 T (setInfoText\(evt\);) N
(306) # () S 8 T () S 16 T (}) N
(307) # () S 8 T (}) N
(308) # () N
(309) # () S 8 T () S
(public) K
( ) p
(class) K
( ) p
(MouseOutListener) L
( ) p
(implements) K
( EventListener {) p n
(310) # () N
(311) # () S 8 T () S 16 T () S
(public) K
( ) p
(void) k
( handleEvent\(Event evt\) {) p n
(312) # () S 8 T () S 16 T () S 24 T (setToolTipText\() S
(null) k
(\);) p n
(313) # () S 8 T () S 16 T (}) N
(314) # () S 8 T (}) N
(315) # () N
(316) # () S 8 T () S
(public) K
( ) p
(void) k
( setSeletecElements\(Element el\) {) p n
(317) # () S 8 T () S 16 T (List<Element> list = ) S
(new) K
( ArrayList<Element>\(\);) p n
(318) # () S 8 T () S 16 T () S
(// addition if clicked element) c n
(319) # () S
() p 8 T () S 16 T (list.add\(el\);) N
(320) # () S 8 T () S 16 T () S
(// collect rows) c n
(321) # () S
() p 8 T () S 16 T (NodeList lines = this.getSVGDocument\(\).getElementsByTagName\(") S
(line) str
() p n
0 T ("\);) N
(322) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lines.getLength\(\); i++\) {) p n
(323) # () S 8 T () S 16 T () S 24 T (Element node = \(Element\) lines.item\(i\);) N
(324) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(node.getAttribute\(") p
(source) str
("\).equals\(el.getAttribute\(") p
(i) str n
0 T (d) S
("\)\)\)) p n
(325) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (|| \(node.getAttribute\(") S
(target) str
("\).equals\(el) p n
(326) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.getAttribute\(") S
(id) str
("\)\)\)\) {) p n
(327) # () S 8 T () S 16 T () S 24 T () S 32 T (list.add\(node\);) N
(328) # () S 8 T () S 16 T () S 24 T (}) N
(329) # () S 8 T () S 16 T (}) N
(330) # () N
(331) # () S 8 T () S 16 T () S
(// text) c n
(332) # () S
() p 8 T () S 16 T () S
(if) K
( \(el.getTagName\(\).equals\(") p
(text) str
("\)\) {) p n
(333) # () S 8 T () S 16 T () S 24 T (NodeList nodes = this.getSVGDocument\(\).getElementsByTagN) N
0 T (ame\(") S
(rect) str
("\);) p n
(334) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < nodes.getLength\(\); i++\) {) p n
(335) # () S 8 T () S 16 T () S 24 T () S 32 T (Element node = \(Element\) nodes.item\(i\);) N
(336) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(node.getAttribute\(") p
(id) str
("\).equals\(el.getAttribu) p n
0 T (te\(") S
(id) str
("\)\)\) {) p n
(337) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (list.add\(node\);) N
(338) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(339) # () S 8 T () S 16 T () S 24 T (}) N
(340) # () N
(341) # () S 8 T () S 16 T () S 24 T (nodes = this.getSVGDocument\(\).getElementsByTagName\(") S
(circle) str
() p n
0 T ("\);) N
(MySvgCanvas.java) (Page 6/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/visu/MySvgCanvas.java) (53/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 54
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(342) # () p 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < nodes.getLength\(\); i++\) {) p n
(343) # () S 8 T () S 16 T () S 24 T () S 32 T (Element node = \(Element\) nodes.item\(i\);) N
(344) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(node.getAttribute\(") p
(id) str
("\).equals\(el.getAttribu) p n
0 T (te\(") S
(id) str
("\)\)\) {) p n
(345) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (list.add\(node\);) N
(346) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(347) # () S 8 T () S 16 T () S 24 T (}) N
(348) # () N
(349) # () S 8 T () S 16 T (} ) S
(else) K
( {) p n
(350) # () N
(351) # () S 8 T () S 16 T () S 24 T (NodeList textes = this.getSVGDocument\(\)) N
(352) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getElementsByTagName\(") S
(text) str
("\);) p n
(353) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < textes.getLength\(\); i++\) {) p n
(354) # () S 8 T () S 16 T () S 24 T () S 32 T (Element node = \(Element\) textes.item\(i\);) N
(355) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(node.getAttribute\(") p
(id) str
("\).equals\(el.getAttribu) p n
0 T (te\(") S
(id) str
("\)\)\) {) p n
(356) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (list.add\(node\);) N
(357) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(358) # () S 8 T () S 16 T () S 24 T (}) N
(359) # () N
(360) # () S 8 T () S 16 T (}) N
(361) # () S 8 T () S 16 T (selectedElementList = list;) N
(362) # () S 8 T (}) N
(363) # () N
(364) # () S 8 T () S
(public) K
( ) p
(void) k
( setInfoText\(Event evt\) {) p n
(365) # () N
(366) # () S 8 T () S 16 T (Element el = \(Element\) evt.getTarget\(\);) N
(367) # () S 8 T () S 16 T () S
(if) K
( \(el.getTagName\(\).equals\(") p
(rect) str
("\)\) {) p n
(368) # () S 8 T () S 16 T () S 24 T (setToolTipText\(") S
(<html>Reaction : ) str
(" + el.getAttribute\(") p
(id) str
("\)\);) p n
(369) # () N
(370) # () S 8 T () S 16 T () S 24 T (setToolTipText\(getToolTipText\(\)) N
(371) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ ") S
(<br/>) str
(") p n
(372) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ controler.getProject\(\).getNetwork\(\)) N
(373) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.getReaction\(el.getAttri) N
0 T (bute\(") S
(id) str
("\)\)) p n
(374) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.getStringReaction\(\)\);) N
(375) # () N
(376) # () S 8 T () S 16 T () S 24 T (String rev = ") S
(reversible) str
(";) p n
(377) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(!controler.getProject\(\).getNetwork\(\)) p n
(378) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getReaction\(el.getAttribute\(") S
(id) str
("\)\).isRe) p n
0 T (versible\(\)\) {) N
(379) # () S 8 T () S 16 T () S 24 T () S 32 T (rev = ") S
(irreversible) str
(";) p n
(380) # () S 8 T () S 16 T () S 24 T (}) N
(381) # () N
(382) # () S 8 T () S 16 T () S 24 T (setToolTipText\(getToolTipText\(\) + ") S
(<br/>) str
(" + rev + ") p
(<html>) str
(") p n
0 T (\);) N
(383) # () S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(el.getTagName\(\).equals\(") p
(circle) str
("\)\) {) p n
(384) # () S 8 T () S 16 T () S 24 T (setToolTipText\(") S
(<html>Metabolite : ) str
(" + el.getAttribute\(") p
(id) str
("\)\);) p n
(385) # () N
(386) # () S 8 T () S 16 T () S 24 T (String internal = ") S
(internal) str
(";) p n
(387) # () S 8 T () S 16 T () S 24 T () N
(388) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(!controler.getProject\(\).getNetwork\(\)) p n
(389) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getMetabolite\(el.getAttribute\(") S
(id) str
("\)\).is) p n
0 T (Internal\(\)\) {) N
(390) # () S 8 T () S 16 T () S 24 T () S 32 T () N
(391) # () S 8 T () S 16 T () S 24 T () S 32 T (internal = ") S
(external) str
(";) p n
(392) # () S 8 T () S 16 T () S 24 T (}) N
(393) # () S 8 T () S 16 T () S 24 T (setToolTipText\(getToolTipText\(\) + ") S
(<br/>) str
(" + internal + ") p
(<) str n
0 T (html>) S
("\);) p n
(394) # () S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(el.getTagName\(\).equals\(") p
(text) str
("\)\) {) p n
(395) # () N
(396) # () S 8 T () S 16 T () S 24 T () S
(// if it's a reaction) c n
(397) # () S
() p 8 T () S 16 T () S 24 T (Reaction reac = controler.getProject\(\).getNetwork\(\)) N
(398) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getReaction\(el.getAttribute\(") S
(id) str
("\)\);) p n
(399) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(reac != ) p
(null) k
(\) {) p n
(400) # () S 8 T () S 16 T () S 24 T () S 32 T (setToolTipText\(") S
(<html>Reaction : ) str
(" + el.getAttribute) p n
(MySvgCanvas.java) (Page 7/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (\(") p
(id) str
("\)\);) p n
(401) # () N
(402) # () S 8 T () S 16 T () S 24 T () S 32 T (setToolTipText\(getToolTipText\(\)) N
(403) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(<br/>) str
(") p n
(404) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ controler.getProject\(\).getNetw) N
0 T (ork\(\)) N
(405) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (.getReaction\(el.) N
0 T (getAttribute\(") S
(id) str
("\)\)) p n
(406) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (.getStringReacti) N
0 T (on\(\)\);) N
(407) # () N
(408) # () S 8 T () S 16 T () S 24 T () S 32 T (String rev = ") S
(reversible) str
(";) p n
(409) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!controler.getProject\(\).getNetwork\(\)) p n
(410) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getReaction\(el.getAttribute\(") S
(id) str
() p n
0 T ("\)\).isReversible\(\)\) {) N
(411) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (rev = ") S
(irreversible) str
(";) p n
(412) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(413) # () N
(414) # () S 8 T () S 16 T () S 24 T () S 32 T (setToolTipText\(getToolTipText\(\) + ") S
(<br/>) str
(" + rev +) p n
0 T ( ") S
(<html>) str
("\);) p n
(415) # () N
(416) # () S 8 T () S 16 T () S 24 T (}) N
(417) # () S 8 T () S 16 T () S 24 T () S
(// if it's a metabolite) c n
(418) # () S
() p 8 T () S 16 T () S 24 T () S
(else) K
( {) p n
(419) # () S 8 T () S 16 T () S 24 T () S 32 T (setToolTipText\(") S
(<html>Metabolite : ) str
(" + el.getAttribut) p n
0 T (e\(") S
(id) str
("\)\);) p n
(420) # () N
(421) # () S 8 T () S 16 T () S 24 T () S 32 T (String internal = ") S
(internal) str
(";) p n
(422) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!controler.getProject\(\).getNetwork\(\)) p n
(423) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getMetabolite\(el.getAttribute\(") S
() str n
0 T (id) S
("\)\).isInternal\(\)\) {) p n
(424) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (internal = ") S
(external) str
(";) p n
(425) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(426) # () S 8 T () S 16 T () S 24 T () S 32 T (setToolTipText\(getToolTipText\(\) + ") S
(<br/>) str
(" + inter) p n
0 T (nal + ") S
(<html>) str
("\);) p n
(427) # () S 8 T () S 16 T () S 24 T (}) N
(428) # () N
(429) # () S 8 T () S 16 T (}) N
(430) # () S 8 T (}) N
(431) # () N
(432) # () S 8 T () S
(public) K
( ) p
(void) k
( reDraw\(Color reacRevColor, Color reacIrrevColor,) p n
(433) # () S 8 T () S 16 T () S 24 T (Color metabIntColor, Color metabExtColor, Color textColo) N
0 T (r,) N
(434) # () S 8 T () S 16 T () S 24 T () S
(int) k
( textSize\) {) p n
(435) # () N
(436) # () S 8 T () S 16 T (String stringReacRevColor = ") S
(fill:rgb\() str
(" + reacRevColor.getRed\(\) + ") p
(,) str
() p n
0 T (") N
(437) # () S 8 T () S 16 T () S 24 T () S 32 T (+ reacRevColor.getGreen\(\) + ") S
(,) str
(" + reacRevColor.g) p n
0 T (etBlue\(\)) N
(438) # () S 8 T () S 16 T () S 24 T () S 32 T (+ ") S
(\); ) str
(";) p n
(439) # () N
(440) # () S 8 T () S 16 T (String stringReacIrrevColor = ") S
(fill:rgb\() str
(" + reacIrrevColor.getRed\(\)) p n
(441) # () S 8 T () S 16 T () S 24 T () S 32 T (+ ") S
(,) str
(" + reacIrrevColor.getGreen\(\) + ") p
(,) str
(") p n
(442) # () S 8 T () S 16 T () S 24 T () S 32 T (+ reacIrrevColor.getBlue\(\) + ") S
(\); ) str
(";) p n
(443) # () N
(444) # () S 8 T () S 16 T (String stringMetabIntColor = ") S
(fill:rgb\() str
(" + metabIntColor.getRed\(\) +) p n
0 T ( ") S
(,) str
(") p n
(445) # () S 8 T () S 16 T () S 24 T () S 32 T (+ metabIntColor.getGreen\(\) + ") S
(,) str
(" + metabIntColor) p n
0 T (.getBlue\(\)) N
(446) # () S 8 T () S 16 T () S 24 T () S 32 T (+ ") S
(\); ) str
(";) p n
(447) # () N
(448) # () S 8 T () S 16 T (String stringMetabExtColor = ") S
(fill:rgb\() str
(" + metabExtColor.getRed\(\) +) p n
0 T ( ") S
(,) str
(") p n
(449) # () S 8 T () S 16 T () S 24 T () S 32 T (+ metabExtColor.getGreen\(\) + ") S
(,) str
(" + metabExtColor) p n
0 T (.getBlue\(\)) N
(450) # () S 8 T () S 16 T () S 24 T () S 32 T (+ ") S
(\); ) str
(";) p n
(MySvgCanvas.java) (Page 8/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/visu/MySvgCanvas.java) (54/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 55
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(451) # () p n
(452) # () S 8 T () S 16 T (String stringTextColor = ") S
(fill:rgb\() str
(" + textColor.getRed\(\) + ") p
(,) str
(") p n
(453) # () S 8 T () S 16 T () S 24 T () S 32 T (+ textColor.getGreen\(\) + ") S
(,) str
(" + textColor.getBlue) p n
0 T (\(\) + ") S
(\); ) str
(";) p n
(454) # () N
(455) # () S 8 T () S 16 T () S
(// we get the reactions) c n
(456) # () S
() p 8 T () S 16 T (NodeList reacList = getSVGDocument\(\).getElementsByTagName\(") S
(rect) str
("\)) p n
0 T (;) N
(457) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < reacList.getLength\(\); i++\) {) p n
(458) # () S 8 T () S 16 T () S 24 T (Element el = \(Element\) reacList.item\(i\);) N
(459) # () S 8 T () S 16 T () S 24 T () S
(// we don't want the glasspane) c n
(460) # () S
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(!el.getAttribute\(") p
(id) str
("\).equals\(") p
(glasspane) str
("\)\) {) p n
(461) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// we change the color) c n
(462) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(controler.getProject\(\).getNetwork\(\)) p n
(463) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getReaction\(el.getAttribute\(") S
(id) str
() p n
0 T ("\)\).isReversible\(\)\) {) N
(464) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (el.setAttribute\() N
(465) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (") S
(style) str
(",) p n
(466) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (el.getAttribute\(") S
(style) str
("\).) p n
0 T (substring\() N
(467) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (0,) N
(468) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (el.getAt) N
0 T (tribute\(") S
(style) str
("\).indexOf\() p n
(469) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
0 T () S 0 T (") S
(fill:rgb\() str
("\)\)) p n
(470) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (+ string) N
0 T (ReacRevColor\);) N
(471) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
(472) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (el.setAttribute\() N
(473) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (") S
(style) str
(",) p n
(474) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (el.getAttribute\(") S
(style) str
("\).) p n
0 T (substring\() N
(475) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (0,) N
(476) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (el.getAt) N
0 T (tribute\(") S
(style) str
("\).indexOf\() p n
(477) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
0 T () S 0 T (") S
(fill:rgb\() str
("\)\)) p n
(478) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (+ string) N
0 T (ReacIrrevColor\);) N
(479) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(480) # () N
(481) # () S 8 T () S 16 T () S 24 T (}) N
(482) # () S 8 T () S 16 T (}) N
(483) # () N
(484) # () S 8 T () S 16 T () S
(// and for the metabolites) c n
(485) # () S
() p 8 T () S 16 T (NodeList metabList = getSVGDocument\(\).getElementsByTagName\(") S
(circle) str
() p n
0 T ("\);) N
(486) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < metabList.getLength\(\); i++\) {) p n
(487) # () S 8 T () S 16 T () S 24 T (Element el = \(Element\) metabList.item\(i\);) N
(488) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(controler.getProject\(\).getNetwork\(\)) p n
(489) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getMetabolite\(el.getAttribute\(") S
(id) str
("\)\).is) p n
0 T (Internal\(\)\) {) N
(490) # () S 8 T () S 16 T () S 24 T () S 32 T (el.setAttribute\() N
(491) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(style) str
(",) p n
(492) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (el.getAttribute\(") S
(style) str
("\).substrin) p n
0 T (g\(0,) N
(493) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (el.getAttribute\() N
0 T (") S
(style) str
("\).indexOf\(") p
(fill:rgb\() str
("\)\)) p n
(494) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (+ stringMetabInt) N
0 T (Color\);) N
(495) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(496) # () S 8 T () S 16 T () S 24 T () S 32 T (el.setAttribute\() N
(497) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(style) str
(",) p n
(498) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (el.getAttribute\(") S
(style) str
("\).substrin) p n
0 T (g\(0,) N
(499) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (el.getAttribute\() N
(MySvgCanvas.java) (Page 9/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (") p
(style) str
("\).indexOf\(") p
(fill:rgb\() str
("\)\)) p n
(500) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (+ stringMetabExt) N
0 T (Color\);) N
(501) # () S 8 T () S 16 T () S 24 T (}) N
(502) # () S 8 T () S 16 T (}) N
(503) # () N
(504) # () S 8 T () S 16 T () S
(// for the text) c n
(505) # () S
() p 8 T () S 16 T (NodeList textList = getSVGDocument\(\).getElementsByTagName\(") S
(text) str
("\)) p n
0 T (;) N
(506) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < textList.getLength\(\); i++\) {) p n
(507) # () S 8 T () S 16 T () S 24 T (Element el = \(Element\) textList.item\(i\);) N
(508) # () S 8 T () S 16 T () S 24 T () S
(// change color) c n
(509) # () S
() p 8 T () S 16 T () S 24 T (el.setAttribute\() N
(510) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(style) str
(",) p n
(511) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (el.getAttribute\(") S
(style) str
("\).substring\(0,) p n
(512) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (el.getAttribute\(") S
(style) str
("\).) p n
0 T (indexOf\(") S
(fill:rgb\() str
("\)\)) p n
(513) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ stringTextColor\);) N
(514) # () N
(515) # () S 8 T () S 16 T () S 24 T () S
(// and size) c n
(516) # () S
() p 8 T () S 16 T () S 24 T (el.setAttribute\() N
(517) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(style) str
(",) p n
(518) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(font-size:) str
(") p n
(519) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ textSize) N
(520) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ el.getAttribute\(") S
(style) str
(") p n
0 T (\).substring\() N
(521) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (el.getAt) N
0 T (tribute\(") S
(style) str
("\).indexOf\(") p
(;) str
("\)\)\);) p n
(522) # () S 8 T () S 16 T (}) N
(523) # () N
(524) # () S 8 T (}) N
(525) # () N
(526) # () S 8 T () S
(public) K
( MySvgCanvas getClone\(\) {) p n
(527) # () S 8 T () S 16 T (MySvgCanvas copy = ) S
(new) K
( MySvgCanvas\(svgFile, controler,) p n
(528) # () S 8 T () S 16 T () S 24 T () S 32 T (\(SVGDocument\) \(\(getSVGDocument\(\)\).cloneNode\() S
(true) k
() p n
0 T (\)\)\);) N
(529) # () N
(530) # () S 8 T () S 16 T () S
(return) K
( copy;) p n
(531) # () S 8 T (}) N
(532) # () N
(533) # (}) N
(MySvgCanvas.java) (Page 10/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/visu/MySvgCanvas.java) (55/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 56
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.visu;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.io.BufferedReader;) p n
(24) # () S
(import) K
( java.io.File;) p n
(25) # () S
(import) K
( java.io.IOException;) p n
(26) # () S
(import) K
( java.io.InputStreamReader;) p n
(27) # () S
(import) K
( java.util.Map;) p n
(28) # () N
(29) # () S
(import) K
( javax.swing.JOptionPane;) p n
(30) # () S
(import) K
( javax.swing.JTabbedPane;) p n
(31) # () N
(32) # () S
(import) K
( model.data.ExportTlp;) p n
(33) # () S
(import) K
( view.GeneralFrame;) p n
(34) # () S
(import) K
( view.RightPanel;) p n
(35) # () S
(import) K
( view.VisualizationPanel;) p n
(36) # () S
(import) K
( view.popup.VisuChoiceFrame;) p n
(37) # () S
(import) K
( controler.MainControler;) p n
(38) # () N
(39) # () S
(public) K
( ) p
(class) K
( ) p
(VisuListener) L
( ) p
(implements) K
( ActionListener {) p n
(40) # () N
(41) # () S 8 T () S
(private) K
( MainControler controler;) p n
(42) # () N
(43) # () S 8 T () S
(public) K
( VisuListener\(MainControler controler\) {) p n
(44) # () N
(45) # () S 8 T () S 16 T (this.controler = controler;) N
(46) # () S 8 T (}) N
(47) # () N
(48) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(49) # () S 8 T () S 16 T () N
(50) # () S 8 T () S 16 T () S
(if) K
( \(controler.getListMetabos\(\).size\(\)==0 && controler.getListRea) p n
0 T (ctions\(\).size\(\)==0\){) N
(51) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(52) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Your network is empty) str
(", ") p
(Error) str
(",) p n
(53) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(54) # () S 8 T () S 16 T () S 24 T () S
(return) K
(;) p n
(55) # () S 8 T () S 16 T () S 24 T () N
(56) # () S 8 T () S 16 T (}) N
(57) # () S 8 T () S 16 T () N
(58) # () S 8 T () S 16 T (VisuChoiceFrame vcf = ) S
(new) K
( VisuChoiceFrame\() p n
(59) # () S 8 T () S 16 T () S 24 T () S 32 T (GeneralFrame.getInstance\(controler\), controler\);) N
(60) # () S 8 T () S 16 T () N
(61) # () S 8 T () S 16 T () S
(if) K
( \(vcf.okPressed\(\)\) {) p n
(62) # () N
(63) # () S 8 T () S 16 T () S 24 T (System.out.println\(vcf.getLayoutAlgorithm\(\)\);) N
(64) # () N
(VisuListener.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T () S 24 T () S
(// generate tlp file) c n
(66) # () N
(67) # () S
() p 8 T () S 16 T () S 24 T () S
(int) k
( i = 0;) p n
(68) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \() p
(true) k
(\) {) p n
(69) # () N
(70) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// until we find a tlp file non-existent) c n
(71) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!) p
(new) K
( File\(") p
(tulip/tlp/saved/) str
(" + controler.getProje) p n
0 T (ctName\(\)) N
(72) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ i + ") S
(.tlp) str
("\).isFile\(\)) p n
(73) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& !) S
(new) K
( File\(") p
(tulip/tlp/) str
(" + controle) p n
0 T (r.getProjectName\(\)) N
(74) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (+ i + ") S
(.tlp) str
("\).isF) p n
0 T (ile\(\)\) {) N
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(break) K
(;) p n
(76) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(77) # () S 8 T () S 16 T () S 24 T () S 32 T (i++;) N
(78) # () S 8 T () S 16 T () S 24 T (}) N
(79) # () S 8 T () S 16 T () S 24 T () S
(//we create the name of the file) c n
(80) # () S
() p 8 T () S 16 T () S 24 T (String tlpName = controler.getProjectName\(\);) N
(81) # () S 8 T () S 16 T () S 24 T (tlpName += i;) N
(82) # () S 8 T () S 16 T () S 24 T (tlpName += ") S
(.tlp) str
(";) p n
(83) # () N
(84) # () S 8 T () S 16 T () S 24 T () S
(//the tlp file is created) c n
(85) # () S
() p 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(86) # () S 8 T () S 16 T () S 24 T () S 32 T (ExportTlp et = ) S
(new) K
( ExportTlp\(") p
(tulip/tlp/) str
(" + tlpName,) p n
(87) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (vcf.getSelectedMetabolites\(\),) N
(88) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (vcf.getSelectedReactions\(\)\);) N
(89) # () S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(tlpName + ") S
( file created) str
("\);) p n
(90) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(IOException e\) {) p n
(91) # () S 8 T () S 16 T () S 24 T () S 32 T (e.printStackTrace\(\);) N
(92) # () S 8 T () S 16 T () S 24 T (}) N
(93) # () N
(94) # () S 8 T () S 16 T () S 24 T (String s;) N
(95) # () S 8 T () S 16 T () S 24 T (String outName = tlpName + ") S
(.svg) str
(";) p n
(96) # () N
(97) # () S 8 T () S 16 T () S 24 T (String[] command = ) S
(new) K
( String[5];) p n
(98) # () S 8 T () S 16 T () S 24 T (command[0] = ") S
(python) str
(";) p n
(99) # () S 8 T () S 16 T () S 24 T (command[1] = ") S
(tulip/svgCreator.py) str
(";) p n
(100) # () S 8 T () S 16 T () S 24 T (command[2] = tlpName;) N
(101) # () S 8 T () S 16 T () S 24 T (command[3] = vcf.getLayoutAlgorithm\(\);) N
(102) # () S 8 T () S 16 T () S 24 T (command[4] = outName;) N
(103) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(104) # () N
(105) # () S 8 T () S 16 T () S 24 T () S 32 T (ProcessBuilder pb = ) S
(new) K
( ProcessBuilder\(command\);) p n
(106) # () S 8 T () S 16 T () S 24 T () S 32 T (String OS = System.getProperty\(") S
(os.name) str
("\).toLower) p n
0 T (Case\(\);) N
(107) # () S 8 T () S 16 T () S 24 T () S 32 T (Map<String, String> env = pb.environment\(\);) N
(108) # () N
(109) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(OS.indexOf\(") p
(mac) str
("\) >= 0\) {) p n
(110) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(Mac) str
("\);) p n
(111) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (env.put\(") S
(DYLD_LIBRARY_PATH) str
(", ") p
(:tulip/libMac) str n
0 T (/python/) S
("\);) p n
(112) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(env.get\(") S
(DYLD_LIBRAR) str n
0 T (Y_PATH) S
("\)\);) p n
(113) # () N
(114) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (command[1] = ") S
(tulip/svgCreatorMac.py) str
(";) p n
(115) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (pb.command\(command\);) N
(116) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(117) # () N
(118) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(OS.indexOf\(") p
(win) str
("\) >= 0\) {) p n
(119) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(Windows) str
("\);) p n
(120) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (env.put\(") S
(Path) str
(", env.get\(") p
(Path) str
("\) + ") p
(;tulip\\\\bin\\) str n
0 T (\\) S
("\);) p n
(121) # () N
(122) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (command[0] = ") S
(C:\\\\Python27\\\\python) str
(";) p n
(123) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (command[1] = ") S
(tulip/svgCreatorWin.py) str
(";) p n
(VisuListener.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/visu/VisuListener.java) (56/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 57
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(124) # () p n
(125) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (env = pb.environment\(\);) N
(126) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(env.get\(") S
(Path) str
("\)\);) p n
(127) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (pb.command\(command\);) N
(128) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(129) # () N
(130) # () S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(") S
(command) str
("\);) p n
(131) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(String a : command\) {) p n
(132) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(a\);) N
(133) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(134) # () N
(135) # () S 8 T () S 16 T () S 24 T () S 32 T (Process p = pb.start\(\);) N
(136) # () N
(137) # () S 8 T () S 16 T () S 24 T () S 32 T (BufferedReader stdInput = ) S
(new) K
( BufferedReader\() p n
(138) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(new) K
( InputStreamReader\(p.getInput) p n
0 T (Stream\(\)\)\);) N
(139) # () S 8 T () S 16 T () S 24 T () S 32 T (BufferedReader stdError = ) S
(new) K
( BufferedReader\() p n
(140) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(new) K
( InputStreamReader\(p.getError) p n
0 T (Stream\(\)\)\);) N
(141) # () N
(142) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// read the output) c n
(143) # () N
(144) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(\(s = stdInput.readLine\(\)\) != ) p
(null) k
(\) {) p n
(145) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(s\);) N
(146) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(147) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// read any errors) c n
(148) # () N
(149) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(\(s = stdError.readLine\(\)\) != ) p
(null) k
(\) {) p n
(150) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(s\);) N
(151) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(152) # () N
(153) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// add panel with svg) c n
(154) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (VisualizationPanel visuPanel = ) S
(new) K
( Visualization) p n
0 T (Panel\() S
(new) K
( File\() p n
(155) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(tulip/svg/) str
(" + outName\), controler\)) p n
0 T (;) N
(156) # () S 8 T () S 16 T () S 24 T () S 32 T (JTabbedPane jtp = GeneralFrame.getInstance\(contr) N
0 T (oler\)) N
(157) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getRightPanel\(\);) N
(158) # () S 8 T () S 16 T () S 24 T () S 32 T (\(\(RightPanel\) jtp\).addVisuPane\(visuPanel, ") S
(Visuali) str n
0 T (zation) S
("\);) p n
(159) # () S 8 T () S 16 T () S 24 T () S 32 T (jtp.setSelectedIndex\(jtp.getComponentCount\(\) - 2) N
0 T (\);) N
(160) # () N
(161) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(IOException e\) {) p n
(162) # () S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane) N
(163) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.showMessageDialog\() N
(164) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S
(null) k
(,) p n
(165) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (") S
(Error with python, ch) str n
0 T (eck your installation. Make sure you have python 2.7 installed.) S
(",) p n
(166) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (") S
(Error) str
(", JOptionP) p n
0 T (ane.ERROR_MESSAGE\);) N
(167) # () S 8 T () S 16 T () S 24 T () S 32 T (e.printStackTrace\(\);) N
(168) # () S 8 T () S 16 T () S 24 T (}) N
(169) # () N
(170) # () S 8 T () S 16 T (}) N
(171) # () S 8 T (}) N
(172) # (}) N
(VisuListener.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/visu/VisuListener.java) (57/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 58
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.visu;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.InputEvent;) p n
(22) # () S
(import) K
( java.awt.event.KeyEvent;) p n
(23) # () S
(import) K
( java.awt.event.MouseEvent;) p n
(24) # () N
(25) # () S
(import) K
( org.apache.batik.swing.gvt.Interactor;) p n
(26) # () N
(27) # () S
(public) K
( ) p
(class) K
( ) p
(SVGInteractor) L
( ) p
(implements) K
( Interactor {) p n
(28) # () N
(29) # () S 8 T () S
(public) K
( ) p
(void) k
( keyPressed\(KeyEvent arg0\) {) p n
(30) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(31) # () N
(32) # () S
() p 8 T (}) N
(33) # () N
(34) # () S 8 T (@Override) N
(35) # () S 8 T () S
(public) K
( ) p
(void) k
( keyReleased\(KeyEvent arg0\) {) p n
(36) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(37) # () N
(38) # () S
() p 8 T (}) N
(39) # () N
(40) # () S 8 T (@Override) N
(41) # () S 8 T () S
(public) K
( ) p
(void) k
( keyTyped\(KeyEvent arg0\) {) p n
(42) # () N
(43) # () S 8 T (}) N
(44) # () N
(45) # () S 8 T (@Override) N
(46) # () S 8 T () S
(public) K
( ) p
(void) k
( mouseClicked\(MouseEvent arg0\) {) p n
(47) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(48) # () N
(49) # () S
() p 8 T (}) N
(50) # () N
(51) # () S 8 T (@Override) N
(52) # () S 8 T () S
(public) K
( ) p
(void) k
( mouseEntered\(MouseEvent arg0\) {) p n
(53) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(54) # () N
(55) # () S
() p 8 T (}) N
(56) # () N
(57) # () S 8 T (@Override) N
(58) # () S 8 T () S
(public) K
( ) p
(void) k
( mouseExited\(MouseEvent arg0\) {) p n
(59) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(60) # () N
(61) # () S
() p 8 T (}) N
(62) # () N
(63) # () S 8 T (@Override) N
(64) # () S 8 T () S
(public) K
( ) p
(void) k
( mousePressed\(MouseEvent arg0\) {) p n
(65) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(SVGInteractor.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p n
(67) # () S 8 T (}) N
(68) # () N
(69) # () S 8 T (@Override) N
(70) # () S 8 T () S
(public) K
( ) p
(void) k
( mouseReleased\(MouseEvent arg0\) {) p n
(71) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(72) # () N
(73) # () S
() p 8 T (}) N
(74) # () N
(75) # () S 8 T (@Override) N
(76) # () S 8 T () S
(public) K
( ) p
(void) k
( mouseDragged\(MouseEvent arg0\) {) p n
(77) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(78) # () N
(79) # () S
() p 8 T (}) N
(80) # () N
(81) # () S 8 T (@Override) N
(82) # () S 8 T () S
(public) K
( ) p
(void) k
( mouseMoved\(MouseEvent arg0\) {) p n
(83) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(84) # () N
(85) # () S
() p 8 T (}) N
(86) # () N
(87) # () S 8 T (@Override) N
(88) # () S 8 T () S
(public) K
( ) p
(boolean) k
( endInteraction\(\) {) p n
(89) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(90) # () S
() p 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
(91) # () S 8 T (}) N
(92) # () N
(93) # () S 8 T (@Override) N
(94) # () S 8 T () S
(public) K
( ) p
(boolean) k
( startInteraction\(InputEvent arg0\) {) p n
(95) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(96) # () S
() p 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
(97) # () S 8 T (}) N
(98) # () N
(99) # (}) N
(SVGInteractor.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/visu/SVGInteractor.java) (58/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 59
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.externalPrograms;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Color;) p n
(23) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(24) # () S
(import) K
( java.awt.event.ActionListener;) p n
(25) # () S
(import) K
( java.io.BufferedReader;) p n
(26) # () S
(import) K
( java.io.BufferedWriter;) p n
(27) # () S
(import) K
( java.io.File;) p n
(28) # () S
(import) K
( java.io.FileWriter;) p n
(29) # () S
(import) K
( java.io.IOException;) p n
(30) # () S
(import) K
( java.io.InputStreamReader;) p n
(31) # () S
(import) K
( java.util.ArrayList;) p n
(32) # () S
(import) K
( java.util.List;) p n
(33) # () S
(import) K
( java.util.Map;) p n
(34) # () N
(35) # () S
(import) K
( javax.swing.BoxLayout;) p n
(36) # () S
(import) K
( javax.swing.JButton;) p n
(37) # () S
(import) K
( javax.swing.JFrame;) p n
(38) # () S
(import) K
( javax.swing.JOptionPane;) p n
(39) # () S
(import) K
( javax.swing.JPanel;) p n
(40) # () S
(import) K
( javax.swing.JProgressBar;) p n
(41) # () S
(import) K
( javax.swing.JScrollPane;) p n
(42) # () S
(import) K
( javax.swing.JTabbedPane;) p n
(43) # () S
(import) K
( javax.swing.JTextArea;) p n
(44) # () S
(import) K
( javax.xml.stream.XMLStreamException;) p n
(45) # () N
(46) # () S
(import) K
( model.data.RegEfmToolFormat;) p n
(47) # () S
(import) K
( model.data.SBMLFormat;) p n
(48) # () N
(49) # () S
(import) K
( org.sbml.jsbml.SBMLException;) p n
(50) # () N
(51) # () S
(import) K
( view.GeneralFrame;) p n
(52) # () S
(import) K
( view.ResultsPanel;) p n
(53) # () S
(import) K
( view.RightPanel;) p n
(54) # () S
(import) K
( view.popup.LaunchRegEfmToolFrame;) p n
(55) # () S
(import) K
( controler.MainControler;) p n
(56) # () N
(57) # () S
(public) K
( ) p
(class) K
( ) p
(RegEfmToolHandler) L
( ) p
(extends) K
( Thread ) p
(implements) K n
(58) # () S
() p 8 T () S 16 T (ExternalProgramsHandler {) N
(59) # () N
(60) # () S 8 T () S
(private) K
( MainControler controler;) p n
(61) # () S 8 T () S
(private) K
( String[] command;) p n
(62) # () S 8 T () S
(private) K
( String resultsName;) p n
(63) # () S 8 T () S
(private) K
( Process p;) p n
(64) # () N
(65) # () S 8 T () S
(private) K
( ) p
(boolean) k
( stopThread = ) p
(false) k
(;) p n
(RegEfmToolHandler.java) (Page 1/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p n
(67) # () S 8 T () N
(68) # () S 8 T () S
(public) K
( RegEfmToolHandler\(MainControler controler\) {) p n
(69) # () S 8 T () S 16 T (this.controler = controler;) N
(70) # () S 8 T () S 16 T () S
(//the analysis can't be running without metabolites) c n
(71) # () S
() p 8 T () S 16 T () S
(// and reactions in the network) c n
(72) # () S
() p 8 T () S 16 T () S
(if) K
( \(controler.getListMetabos\(\).size\(\) == 0) p n
(73) # () S 8 T () S 16 T () S 24 T () S 32 T (&& controler.getListReactions\(\).size\(\) == 0\) {) N
(74) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Your network is empty) str
(",) p n
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Error) str
(", JOptionPane.ERROR_MESSAGE\);) p n
(76) # () S 8 T () S 16 T () S 24 T () S
(return) K
(;) p n
(77) # () N
(78) # () S 8 T () S 16 T (}) N
(79) # () S 8 T () S 16 T () N
(80) # () S 8 T () S 16 T () S
(//show regEfmtool options frame) c n
(81) # () S
() p 8 T () S 16 T (LaunchRegEfmToolFrame efm = ) S
(new) K
( LaunchRegEfmToolFrame\() p n
(82) # () S 8 T () S 16 T () S 24 T () S 32 T (GeneralFrame.getInstance\(controler\)\);) N
(83) # () S 8 T () S 16 T () N
(84) # () S 8 T () S 16 T () S
(//if ok is selected by the user) c n
(85) # () S
() p 8 T () S 16 T () S
(if) K
( \(efm.okPressed\(\)\) {) p n
(86) # () N
(87) # () S 8 T () S 16 T () S 24 T () S
(int) k
( indice = 0;) p n
(88) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \() p
(true) k
(\) {) p n
(89) # () N
(90) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// until we find a non-existent file) c n
(91) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!) p
(new) K
( File\(") p
(res/saved/) str
(" + controler.getProjectNa) p n
0 T (me\(\)) N
(92) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ indice + ") S
(.res) str
("\).isFile\(\)) p n
(93) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& !) S
(new) K
( File\(") p
(res/) str
(" + controler.g) p n
0 T (etProjectName\(\)) N
(94) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (+ indice + ") S
(.res) str
(") p n
0 T (\).isFile\(\)\) {) N
(95) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(break) K
(;) p n
(96) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(97) # () S 8 T () S 16 T () S 24 T () S 32 T (indice++;) N
(98) # () S 8 T () S 16 T () S 24 T (}) N
(99) # () S 8 T () S 16 T () S 24 T (String resultsName = controler.getProjectName\(\);) N
(100) # () S 8 T () S 16 T () S 24 T (resultsName += indice;) N
(101) # () N
(102) # () S 8 T () S 16 T () S 24 T () S
(// generate regEfmTool files and SBML file) c n
(103) # () S
() p 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(104) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( RegEfmToolFormat\(\).save\() p
(new) K
( File\(") p
(res/genFiles/) str
(") p n
(105) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ controler.getProjectName\(\)\), c) N
0 T (ontroler.getProject\(\)) N
(106) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getNetwork\(\), ) S
(false) k
(\);) p n
(107) # () N
(108) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( SBMLFormat\(\).save\() p n
(109) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(new) K
( File\(") p
(res/genFiles/) str
(" + controler) p n
0 T (.getProjectName\(\)\),) N
(110) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (controler.getProject\(\).getNetwor) N
0 T (k\(\), ) S
(false) k
(\);) p n
(111) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(SBMLException | IOException | XMLStreamExceptio) p n
0 T (n e\) {) N
(112) # () S 8 T () S 16 T () S 24 T () S 32 T (e.printStackTrace\(\);) N
(113) # () S 8 T () S 16 T () S 24 T (}) N
(114) # () N
(115) # () S 8 T () S 16 T () S 24 T () S
(// collect the parameters) c n
(116) # () S
() p 8 T () S 16 T () S 24 T (Map<String, String> params = efm.getParameters\(\);) N
(117) # () N
(118) # () S 8 T () S 16 T () S 24 T () S
(// lauch analysis) c n
(119) # () N
(120) # () S
() p 8 T () S 16 T () S 24 T (String s;) N
(121) # () S 8 T () S 16 T () S 24 T (List<String> command = ) S
(new) K
( ArrayList<String>\(\);) p n
(122) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(java) str
("\);) p n
(123) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-Xmx) str
("+params.get\(") p
(ram) str
("\)+") p
(G) str
("\);) p n
(124) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-jar) str
("\);) p n
(RegEfmToolHandler.java) (Page 2/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/externalPrograms/RegEfmToolHandler.java) (59/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 60
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(125) # () p 8 T () S 16 T () S 24 T (command.add\(") S
(20120810_regEfmtool_2.0/regEfmtool.jar) str
("\);) p n
(126) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-log) str
("\);) p n
(127) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(console) str
("\);) p n
(128) # () N
(129) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-level) str
("\);) p n
(130) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(level) str
("\)\);) p n
(131) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-format) str
("\);) p n
(132) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(format) str
("\)\);) p n
(133) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-kind) str
("\);) p n
(134) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(kind) str
("\)\);) p n
(135) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(params.get\(") p
(kind) str
("\) == ") p
(stoichiometry) str
("\) {) p n
(136) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(-stoich) str
("\);) p n
(137) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(res/genFiles/) str
(" + controler.getProjectNa) p n
0 T (me\(\)) N
(138) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(.sfile) str
("\);) p n
(139) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(-rev) str
("\);) p n
(140) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(res/genFiles/) str
(" + controler.getProjectNa) p n
0 T (me\(\)) N
(141) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(.rvfile) str
("\);) p n
(142) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(-meta) str
("\);) p n
(143) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(res/genFiles/) str
(" + controler.getProjectNa) p n
0 T (me\(\)) N
(144) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(.mfile) str
("\);) p n
(145) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(-reac) str
("\);) p n
(146) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(res/genFiles/) str
(" + controler.getProjectNa) p n
0 T (me\(\)) N
(147) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(.rfile) str
("\);) p n
(148) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(params.get\(") p
(kind) str
("\) == ") p
(sbml) str
("\) {) p n
(149) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(-in) str
("\);) p n
(150) # () N
(151) # () S 8 T () S 16 T () S 24 T () S 32 T (String xmlFileName = controler.getProjectName\(\);) N
(152) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!xmlFileName.endsWith\(") p
(.xml) str
("\)\) {) p n
(153) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (xmlFileName += ") S
(.xml) str
(";) p n
(154) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(155) # () N
(156) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(res/genFiles/) str
(" + xmlFileName\);) p n
(157) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(-ext) str
("\);) p n
(158) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(external) str
("\);) p n
(159) # () S 8 T () S 16 T () S 24 T (}) N
(160) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(efm.geneRule\(\)\) {) p n
(161) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(-generule) str
("\);) p n
(162) # () S 8 T () S 16 T () S 24 T () S 32 T (command.add\(") S
(res/genFiles/) str
(" + controler.getProjectNa) p n
0 T (me\(\)) N
(163) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(.grfile) str
("\);) p n
(164) # () S 8 T () S 16 T () S 24 T (}) N
(165) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-compression) str
("\);) p n
(166) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(comp) str
("\)\);) p n
(167) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-out) str
("\);) p n
(168) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(out) str
("\)\);) p n
(169) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(res/) str
(" + resultsName + ") p
(.res) str
("\);) p n
(170) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-adjacency-method) str
("\);) p n
(171) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(adj) str
("\)\);) p n
(172) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-arithmetic) str
("\);) p n
(173) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(ari) str
("\)\);) p n
(174) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-precision) str
("\);) p n
(175) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(pre) str
("\)\);) p n
(176) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-normalize) str
("\);) p n
(177) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(norm) str
("\)\);) p n
(178) # () S 8 T () S 16 T () S 24 T (command.add\(") S
(-maxthreads) str
("\);) p n
(179) # () S 8 T () S 16 T () S 24 T (command.add\(params.get\(") S
(maxthreads) str
("\)\);) p n
(180) # () N
(181) # () S 8 T () S 16 T () S 24 T (System.out.println\(command\);) N
(182) # () N
(183) # () S 8 T () S 16 T () S 24 T (String[] commandArray = ) S
(new) K
( String[command.size\(\)];) p n
(184) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < command.size\(\); i++\) {) p n
(185) # () S 8 T () S 16 T () S 24 T () S 32 T (commandArray[i] = command.get\(i\);) N
(RegEfmToolHandler.java) (Page 3/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(186) # () p 8 T () S 16 T () S 24 T (}) N
(187) # () N
(188) # () S 8 T () S 16 T () S 24 T (this.command = commandArray;) N
(189) # () S 8 T () S 16 T () S 24 T (this.resultsName = resultsName;) N
(190) # () N
(191) # () S 8 T () S 16 T () S 24 T (this.start\(\);) N
(192) # () N
(193) # () S 8 T () S 16 T (}) N
(194) # () N
(195) # () S 8 T (}) N
(196) # () N
(197) # () S 8 T () S
(public) K
( ) p
(void) k
( run\(\) {) p n
(198) # () S 8 T () S 16 T () S
(// initialize the frame of loading) c n
(199) # () S
() p 8 T () S 16 T () S
(final) K
( JFrame running = ) p
(new) K
( JFrame\(\);) p n
(200) # () N
(201) # () S 8 T () S 16 T (running.setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(202) # () S 8 T () S 16 T (JProgressBar progressBar = ) S
(new) K
( JProgressBar\(\);) p n
(203) # () S 8 T () S 16 T (progressBar.setIndeterminate\() S
(true) k
(\);) p n
(204) # () S 8 T () S 16 T (running.setTitle\(") S
(regEfmtool process is running) str
("\);) p n
(205) # () N
(206) # () S 8 T () S 16 T (JPanel center = ) S
(new) K
( JPanel\(\);) p n
(207) # () S 8 T () S 16 T (center.setLayout\() S
(new) K
( BoxLayout\(center, BoxLayout.PAGE_AXIS\)\);) p n
(208) # () N
(209) # () S 8 T () S 16 T (JTextArea logArea = ) S
(new) K
( JTextArea\(\);) p n
(210) # () S 8 T () S 16 T (logArea.setEditable\() S
(false) k
(\);) p n
(211) # () S 8 T () S 16 T (logArea.setBackground\() S
(new) K
( Color\(0, 0, 0\)\);) p n
(212) # () S 8 T () S 16 T (logArea.setForeground\() S
(new) K
( Color\(255, 255, 255\)\);) p n
(213) # () N
(214) # () S 8 T () S 16 T (center.add\() S
(new) K
( JScrollPane\(logArea\)\);) p n
(215) # () N
(216) # () S 8 T () S 16 T (running.add\(progressBar, BorderLayout.PAGE_START\);) N
(217) # () S 8 T () S 16 T (running.add\(center, BorderLayout.CENTER\);) N
(218) # () S 8 T () S 16 T (JButton cancelAnalysis = ) S
(new) K
( JButton\(") p
(cancel analysis) str
("\);) p n
(219) # () N
(220) # () S 8 T () S 16 T (cancelAnalysis.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(221) # () N
(222) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(223) # () N
(224) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// we kill the process) c n
(225) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (p.destroy\(\);) N
(226) # () S 8 T () S 16 T () S 24 T () S 32 T (stop\(\);) N
(227) # () S 8 T () S 16 T () S 24 T () S 32 T (running.dispose\(\);) N
(228) # () S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Analysis cancel) str n
0 T (ed) S
(", "",) p n
(229) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane.INFORMATION_MESSAGE\)) N
0 T (;) N
(230) # () S 8 T () S 16 T () S 24 T (}) N
(231) # () N
(232) # () S 8 T () S 16 T (}\);) N
(233) # () N
(234) # () S 8 T () S 16 T (running.add\(cancelAnalysis, BorderLayout.PAGE_END\);) N
(235) # () S 8 T () S 16 T (running.setSize\(600, 600\);) N
(236) # () S 8 T () S 16 T (running.setLocationRelativeTo\() S
(null) k
(\);) p n
(237) # () S 8 T () S 16 T (running.setVisible\() S
(true) k
(\);) p n
(238) # () N
(239) # () S 8 T () S 16 T (String s;) N
(240) # () N
(241) # () S 8 T () S 16 T () S
(try) K
( {) p n
(242) # () N
(243) # () S 8 T () S 16 T () S 24 T (String logContent = "";) N
(244) # () N
(245) # () S 8 T () S 16 T () S 24 T (p = Runtime.getRuntime\(\).exec\(command\);) N
(246) # () N
(247) # () S 8 T () S 16 T () S 24 T (BufferedReader stdInput = ) S
(new) K
( BufferedReader\() p
(new) K
( InputSt) p n
0 T (reamReader\() N
(248) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (p.getInputStream\(\)\)\);) N
(RegEfmToolHandler.java) (Page 4/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/externalPrograms/RegEfmToolHandler.java) (60/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 61
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(249) # () p 8 T () S 16 T () S 24 T (BufferedReader stdError = ) S
(new) K
( BufferedReader\() p
(new) K
( InputSt) p n
0 T (reamReader\() N
(250) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (p.getErrorStream\(\)\)\);) N
(251) # () N
(252) # () S 8 T () S 16 T () S 24 T () S
(// read the output) c n
(253) # () N
(254) # () S
() p 8 T () S 16 T () S 24 T () S
(while) K
( \(\(s = stdInput.readLine\(\)\) != ) p
(null) k
(\) {) p n
(255) # () S 8 T () S 16 T () S 24 T () S 32 T (logContent += s + ") S
(\\n) str
(";) p n
(256) # () S 8 T () S 16 T () S 24 T () S 32 T (logArea.setText\(logContent\);) N
(257) # () S 8 T () S 16 T () S 24 T () S 32 T (logArea.setCaretPosition\(logArea.getText\(\).lengt) N
0 T (h\(\)\);) N
(258) # () S 8 T () S 16 T () S 24 T (}) N
(259) # () S 8 T () S 16 T () S 24 T () S
(// read any errors) c n
(260) # () N
(261) # () S
() p 8 T () S 16 T () S 24 T () S
(while) K
( \(\(s = stdError.readLine\(\)\) != ) p
(null) k
(\) {) p n
(262) # () S 8 T () S 16 T () S 24 T () S 32 T (logContent += s + ") S
(\\n) str
(";) p n
(263) # () S 8 T () S 16 T () S 24 T () S 32 T (logArea.setText\(logContent\);) N
(264) # () S 8 T () S 16 T () S 24 T () S 32 T (logArea.setCaretPosition\(logArea.getText\(\).lengt) N
0 T (h\(\)\);) N
(265) # () S 8 T () S 16 T () S 24 T (}) N
(266) # () N
(267) # () S 8 T () S 16 T () S 24 T () S
(// we wait for the process to be over) c n
(268) # () S
() p 8 T () S 16 T () S 24 T (p.waitFor\(\);) N
(269) # () N
(270) # () S 8 T () S 16 T () S 24 T () S
(// we save the log content) c n
(271) # () N
(272) # () S
() p 8 T () S 16 T () S 24 T (BufferedWriter out = ) S
(new) K
( BufferedWriter\() p
(new) K
( FileWriter\() p
(n) K n
0 T (ew) S
( File\() p n
(273) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(res/) str
(" + resultsName + ") p
(.log) str
("\), ) p
(true) k
(\)\);) p n
(274) # () N
(275) # () S 8 T () S 16 T () S 24 T (out.write\(logContent\);) N
(276) # () S 8 T () S 16 T () S 24 T (out.close\(\);) N
(277) # () N
(278) # () S 8 T () S 16 T () S 24 T (display\(\);) N
(279) # () S 8 T () S 16 T () S 24 T (running.dispose\(\);) N
(280) # () N
(281) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(282) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(283) # () S 8 T () S 16 T (} ) S
(catch) K
( \(InterruptedException e1\) {) p n
(284) # () S 8 T () S 16 T () S 24 T (e1.printStackTrace\(\);) N
(285) # () S 8 T () S 16 T (}) N
(286) # () S 8 T (}) N
(287) # () N
(288) # () S 8 T () S
(public) K
( ) p
(void) k
( display\(\) {) p n
(289) # () S 8 T () S 16 T (ResultsPanel results = ) S
(new) K
( ResultsPanel\(controler, command, resu) p n
0 T (ltsName\);) N
(290) # () N
(291) # () S 8 T () S 16 T (GeneralFrame frame = GeneralFrame.getInstance\(controler\);) N
(292) # () N
(293) # () S 8 T () S 16 T (JTabbedPane jtp = frame.getRightPanel\(\);) N
(294) # () S 8 T () S 16 T (\(\(RightPanel\) jtp\).addResPane\(results, ") S
(Results) str
("\);) p n
(295) # () S 8 T () S 16 T (jtp.setSelectedIndex\(jtp.getComponentCount\(\) - 2\);) N
(296) # () S 8 T (}) N
(297) # () N
(298) # (}) N
(RegEfmToolHandler.java) (Page 5/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/externalPrograms/RegEfmToolHandler.java) (61/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 62
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.externalPrograms;) p n
(20) # () N
(21) # () N
(22) # () S
(//manage external programs \(regEfmtool\)) c n
(23) # () S
(public) K
( ) p
(interface) K
( ) p
(ExternalProgramsHandler) L
( {) p n
(24) # () N
(25) # () S 8 T () N
(26) # () S 8 T () N
(27) # () S 8 T () S
(public) K
( ) p
(void) k
( run\(\);) p n
(28) # () S 8 T () N
(29) # () S 8 T () N
(30) # () S 8 T () S
(public) K
( ) p
(void) k
( display\(\);) p n
(31) # (}) N
(ExternalProgramsHandler.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/externalPrograms/ExternalProgramsHandler.java) (62/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 63
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Dimension;) p n
(23) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(24) # () S
(import) K
( java.awt.event.ActionListener;) p n
(25) # () S
(import) K
( java.util.List;) p n
(26) # () S
(import) K
( java.util.Map;) p n
(27) # () N
(28) # () S
(import) K
( javax.swing.JButton;) p n
(29) # () S
(import) K
( javax.swing.JFrame;) p n
(30) # () S
(import) K
( javax.swing.JLabel;) p n
(31) # () S
(import) K
( javax.swing.JProgressBar;) p n
(32) # () N
(33) # () S
(import) K
( model.ElementaryMode;) p n
(34) # () S
(import) K
( model.Reaction;) p n
(35) # () N
(36) # () S
(public) K
( ) p
(class) K
( ) p
(DownloadContentThread) L
( ) p
(extends) K
( Thread {) p n
(37) # () N
(38) # () S 8 T () S
(private) K
( List<ElementaryMode> modes;) p n
(39) # () S 8 T () S
(private) K
( MainControler controler;) p n
(40) # () S 8 T () S
(private) K
( String[] command;) p n
(41) # () S 8 T () S
(private) K
( String logContent;) p n
(42) # () N
(43) # () S 8 T () S
(public) K
( DownloadContentThread\(List<ElementaryMode> modes,) p n
(44) # () S 8 T () S 16 T () S 24 T (MainControler controler, String[] command, String log\) {) N
(45) # () S 8 T () S 16 T (this.modes = modes;) N
(46) # () S 8 T () S 16 T (this.controler = controler;) N
(47) # () S 8 T () S 16 T (this.command = command;) N
(48) # () S 8 T () S 16 T (this.logContent = log;) N
(49) # () S 8 T (}) N
(50) # () N
(51) # () S 8 T () S
(public) K
( ) p
(void) k
( run\(\) {) p n
(52) # () S 8 T () S 16 T (String content = "";) N
(53) # () N
(54) # () S 8 T () S 16 T (content += ") S
(Project name : ) str
(" + controler.getProjectName\(\);) p n
(55) # () S 8 T () S 16 T (content += ") S
(\\n) str
(";) p n
(56) # () S 8 T () S 16 T (content += ") S
(\\n) str
(";) p n
(57) # () N
(58) # () S 8 T () S 16 T (String stringCommand = "";) N
(59) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < command.length; i++\) {) p n
(60) # () S 8 T () S 16 T () S 24 T (stringCommand += command[i] + ") S
( ) str
(";) p n
(61) # () S 8 T () S 16 T (}) N
(62) # () N
(63) # () S 8 T () S 16 T (content += ") S
(command : ) str
(" + stringCommand;) p n
(64) # () S 8 T () S 16 T (content += ") S
(\\n) str
(";) p n
(65) # () S 8 T () S 16 T (content += ") S
(\\n) str
(";) p n
(DownloadContentThread.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T (content += ") S
(log : ) str
(";) p n
(67) # () S 8 T () S 16 T (content += ") S
(\\n) str
(";) p n
(68) # () S 8 T () S 16 T (content += logContent;) N
(69) # () S 8 T () S 16 T (content += ") S
(\\n) str
(";) p n
(70) # () S 8 T () S 16 T (content += ") S
(\\n) str
(";) p n
(71) # () S 8 T () S 16 T (content += ") S
(Modes :) str
(";) p n
(72) # () S 8 T () S 16 T (content += ") S
(\\n) str
(";) p n
(73) # () N
(74) # () S 8 T () S 16 T () S
(final) K
( JFrame running = ) p
(new) K
( JFrame\(\);) p n
(75) # () N
(76) # () S 8 T () S 16 T (running.setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(77) # () S 8 T () S 16 T (JProgressBar progressBar = ) S
(new) K
( JProgressBar\(0, modes.size\(\)\);) p n
(78) # () S 8 T () S 16 T (progressBar.setStringPainted\() S
(true) k
(\);) p n
(79) # () S 8 T () S 16 T (progressBar.setPreferredSize\() S
(new) K
( Dimension\(200, 30\)\);) p n
(80) # () S 8 T () S 16 T (running.setTitle\(") S
(Constructing file) str
("\);) p n
(81) # () S 8 T () S 16 T (JButton cancel = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(82) # () N
(83) # () S 8 T () S 16 T (cancel.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(84) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(85) # () S 8 T () S 16 T () S 24 T () S 32 T (running.dispose\(\);) N
(86) # () S 8 T () S 16 T () S 24 T () S 32 T (stop\(\);) N
(87) # () S 8 T () S 16 T () S 24 T (}) N
(88) # () S 8 T () S 16 T (}\);) N
(89) # () N
(90) # () S 8 T () S 16 T (running.add\() S
(new) K
( JLabel\(") p
(File beeing constructed) str
("\),) p n
(91) # () S 8 T () S 16 T () S 24 T () S 32 T (BorderLayout.PAGE_START\);) N
(92) # () N
(93) # () S 8 T () S 16 T (running.add\(progressBar, BorderLayout.CENTER\);) N
(94) # () S 8 T () S 16 T (running.add\(cancel, BorderLayout.SOUTH\);) N
(95) # () N
(96) # () S 8 T () S 16 T (running.pack\(\);) N
(97) # () S 8 T () S 16 T (running.setLocationRelativeTo\() S
(null) k
(\);) p n
(98) # () S 8 T () S 16 T (running.setVisible\() S
(true) k
(\);) p n
(99) # () N
(100) # () S 8 T () S 16 T () S
(// long time1 = 0;) c n
(101) # () S
() p 8 T () S 16 T () S
(// long time2 = System.currentTimeMillis\(\);) c n
(102) # () S
() p 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < modes.size\(\); i++\) {) p n
(103) # () N
(104) # () S 8 T () S 16 T () S 24 T () S
(int) k
( updateFrequency = 100;) p n
(105) # () N
(106) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(i % updateFrequency == 0\) {) p n
(107) # () N
(108) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// long remainingLoops=\(modes.size\(\)-i\)/updateFr) c n
0 T (equency;) N
(109) # () N
(110) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (progressBar.setValue\(i\);) N
(111) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// time1=time2;) c n
(112) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// time2=System.currentTimeMillis\(\);) c n
(113) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// long time = \(time2-time1\)*remainingLoops;) c n
(114) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// timeLeft.setText\(String.valueOf\(time/1000\)\);) c n
(115) # () S
() p 8 T () S 16 T () S 24 T (}) N
(116) # () N
(117) # () S 8 T () S 16 T () S 24 T (String mode = "";) N
(118) # () S 8 T () S 16 T () S 24 T (mode += ") S
(mode number ) str
(" + \(i + 1\);) p n
(119) # () S 8 T () S 16 T () S 24 T (mode += ") S
(\\n) str
(";) p n
(120) # () S 8 T () S 16 T () S 24 T (Map<Reaction, Double> map = modes.get\(i\).getContent\(\);) N
(121) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction key : map.keySet\(\)\) {) p n
(122) # () N
(123) # () S 8 T () S 16 T () S 24 T () S 32 T (mode += map.get\(key\) + ") S
( ) str
(" + key.getName\(\) + ") p
( ) str
(") p n
(124) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ key.getStringReaction\(\);) N
(125) # () S 8 T () S 16 T () S 24 T () S 32 T (mode += ") S
(\\n) str
(";) p n
(126) # () N
(127) # () S 8 T () S 16 T () S 24 T (}) N
(128) # () S 8 T () S 16 T () S 24 T (mode += ") S
(\\n) str
(";) p n
(129) # () S 8 T () S 16 T () S 24 T (content += mode;) N
(130) # () S 8 T () S 16 T (}) N
(DownloadContentThread.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/DownloadContentThread.java) (63/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 64
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(131) # () p 8 T () S 16 T (running.dispose\(\);) N
(132) # () N
(133) # () S 8 T () S 16 T () S
(new) K
( Download\(content, ") p
(Download the results) str
(", ") p
(.txt) str
("\);) p n
(134) # () N
(135) # () S 8 T (}) N
(136) # () N
(137) # (}) N
(DownloadContentThread.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/DownloadContentThread.java) (64/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 65
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.rule;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () S
(import) K
( java.awt.event.KeyEvent;) p n
(24) # () S
(import) K
( java.awt.event.KeyListener;) p n
(25) # () N
(26) # () S
(import) K
( view.RulesPanel;) p n
(27) # () S
(import) K
( controler.MainControler;) p n
(28) # () N
(29) # () S
(public) K
( ) p
(class) K
( ) p
(DelRuleListener) L
( ) p
(implements) K
( ActionListener, KeyListener {) p n
(30) # () S 8 T () S
(private) K
( RulesPanel panel;) p n
(31) # () S 8 T () S
(private) K
( MainControler controler;) p n
(32) # () N
(33) # () S 8 T () S
(public) K
( DelRuleListener\(MainControler controler, RulesPanel panel\) {) p n
(34) # () S 8 T () S 16 T (this.controler = controler;) N
(35) # () S 8 T () S 16 T (this.panel = panel;) N
(36) # () S 8 T () S 16 T () N
(37) # () S 8 T (}) N
(38) # () N
(39) # () N
(40) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(41) # () S 8 T () S 16 T (String rule = panel.getSelected\(\);) N
(42) # () S 8 T () S 16 T (controler.delRule\(rule\);) N
(43) # () S 8 T () S 16 T (controler.notifyObservers\(\);) N
(44) # () S 8 T (}) N
(45) # () N
(46) # () N
(47) # () S 8 T (@Override) N
(48) # () S 8 T () S
(public) K
( ) p
(void) k
( keyPressed\(KeyEvent e\) {) p n
(49) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(e.getKeyCode\(\) == 127\) {) p n
(50) # () S 8 T () S 16 T () S 24 T () S 32 T (String rule = panel.getSelected\(\);) N
(51) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.delRule\(rule\);) N
(52) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.notifyObservers\(\);) N
(53) # () S 8 T () S 16 T () S 24 T (}) N
(54) # () S 8 T () S 16 T (}) N
(55) # () S 8 T () S 16 T () N
(56) # () N
(57) # () N
(58) # () S 8 T (@Override) N
(59) # () S 8 T () S
(public) K
( ) p
(void) k
( keyReleased\(KeyEvent e\) {) p n
(60) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(61) # () S
() p 8 T () S 16 T () N
(62) # () S 8 T (}) N
(63) # () N
(64) # () N
(65) # () S 8 T (@Override) N
(DelRuleListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S
(public) K
( ) p
(void) k
( keyTyped\(KeyEvent e\) {) p n
(67) # () S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
(68) # () S
() p 8 T () S 16 T () N
(69) # () S 8 T (}) N
(70) # () N
(71) # (}) N
(DelRuleListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/rule/DelRuleListener.java) (65/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 66
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.rule;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () N
(24) # () S
(import) K
( javax.swing.JOptionPane;) p n
(25) # () N
(26) # () S
(import) K
( controler.MainControler;) p n
(27) # () N
(28) # () S
(import) K
( view.GeneralFrame;) p n
(29) # () S
(import) K
( view.popup.AddRuleFrame;) p n
(30) # () N
(31) # () S
(public) K
( ) p
(class) K
( ) p
(AddRuleListener) L
( ) p
(implements) K
( ActionListener {) p n
(32) # () S 8 T () S
(private) K
( MainControler controler;) p n
(33) # () N
(34) # () S 8 T () S
(public) K
( AddRuleListener\(MainControler controler\) {) p n
(35) # () S 8 T () S 16 T (this.controler = controler;) N
(36) # () S 8 T (}) N
(37) # () N
(38) # () N
(39) # () N
(40) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(41) # () S 8 T () S 16 T (String rule = "";) N
(42) # () S 8 T () S 16 T () S
(if) K
( \(!\(controler.getListReactions\(\).size\(\)<2\)\){) p n
(43) # () S 8 T () S 16 T () S 24 T (AddRuleFrame f = ) S
(new) K
( AddRuleFrame\(GeneralFrame.getInstan) p n
0 T (ce\(controler\),) N
(44) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (controler,rule\);) N
(45) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(f.okPressed\(\)\) {) p n
(46) # () S 8 T () S 16 T () S 24 T () S 32 T (rule =f.getRule\(\);) N
(47) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.addRule\(rule\);) N
(48) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.notifyObservers\(\);) N
(49) # () S 8 T () S 16 T () S 24 T (}) N
(50) # () S 8 T () S 16 T (}) N
(51) # () S 8 T () S 16 T () S
(else) K
( {) p n
(52) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(53) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(You have a least two reactions in your network) str
(", ") p
(Error) str
() p n
0 T (",) N
(54) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(55) # () S 8 T () S 16 T (}) N
(56) # () N
(57) # () S 8 T (}) N
(58) # () N
(59) # (}) N
(AddRuleListener.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/rule/AddRuleListener.java) (66/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 67
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.rule;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () N
(24) # () S
(import) K
( javax.swing.ComboBoxModel;) p n
(25) # () S
(import) K
( javax.swing.DefaultComboBoxModel;) p n
(26) # () S
(import) K
( javax.swing.ImageIcon;) p n
(27) # () S
(import) K
( javax.swing.JButton;) p n
(28) # () S
(import) K
( javax.swing.JComboBox;) p n
(29) # () S
(import) K
( javax.swing.JLabel;) p n
(30) # () S
(import) K
( javax.swing.JPanel;) p n
(31) # () N
(32) # () S
(import) K
( controler.MainControler;) p n
(33) # () S
(import) K
( controler.Var;) p n
(34) # () N
(35) # () S
(import) K
( model.Reaction;) p n
(36) # () N
(37) # () S
(import) K
( view.popup.AddRuleFrame;) p n
(38) # () N
(39) # () S
(public) K
( ) p
(class) K
( ) p
(AddPanelRulePoPupListener) L
( ) p
(implements) K
( ActionListener {) p n
(40) # () N
(41) # () S 8 T (JPanel panel;) N
(42) # () S 8 T (JComboBox<String> ) S
(operator) K
(;) p n
(43) # () S 8 T (MainControler controler;) N
(44) # () S 8 T (AddRuleFrame f;) N
(45) # () S 8 T () S
(// row number of JPanel in the frame) c n
(46) # () S
() p 8 T () S
(int) k
( i;) p n
(47) # () N
(48) # () S 8 T () S
(public) K
( AddPanelRulePoPupListener\(JPanel panel, JComboBox<String> ) p
(operato) K n
0 T (r) S
(,) p n
(49) # () S 8 T () S 16 T () S 24 T (MainControler controler, AddRuleFrame f\) {) N
(50) # () S 8 T () S 16 T (this.panel = panel;) N
(51) # () S 8 T () S 16 T (this.operator = ) S
(operator) K
(;) p n
(52) # () S 8 T () S 16 T (this.controler = controler;) N
(53) # () S 8 T () S 16 T (this.f =f; ) S
(//ruleFrame) c n
(54) # () N
(55) # () S
() p 8 T (}) N
(56) # () N
(57) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(58) # () S 8 T () S 16 T () N
(59) # () S 8 T () S 16 T (ImageIcon delPanel = Var.suplittle;) N
(60) # () S 8 T () S 16 T () S
(if) K
( \(this.operator.getSelectedItem\(\)!=""\){) p n
(61) # () N
(62) # () S 8 T () S 16 T () S 24 T (JPanel nextPanel = ) S
(new) K
( JPanel\(\);) p n
(63) # () N
(64) # () S 8 T () S 16 T () S 24 T () S
(// The model is created for each combobox) c n
(AddPanelRulePoPupListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T () S 24 T (ComboBoxModel<Reaction> model = ) S
(new) K
( DefaultComboBoxModel) p n
0 T (<Reaction>\(\);) N
(66) # () N
(67) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction r : controler.getListReactions\(\)\) {) p n
(68) # () S 8 T () S 16 T () S 24 T () S 32 T (\(\(DefaultComboBoxModel<Reaction>\) model\).addElem) N
0 T (ent\(r\);) N
(69) # () S 8 T () S 16 T () S 24 T (}) N
(70) # () N
(71) # () S 8 T () S 16 T () S 24 T (JComboBox listReaction = ) S
(new) K
( JComboBox<Reaction>\(model\);) p n
(72) # () N
(73) # () S 8 T () S 16 T () S 24 T (nextPanel.add\() S
(new) K
( JComboBox\(model\)\);) p n
(74) # () S 8 T () S 16 T () S 24 T (nextPanel.add\() S
(new) K
( JLabel\(") p
(=) str
("\)\);) p n
(75) # () S 8 T () S 16 T () S 24 T (nextPanel.add\() S
(new) K
( JComboBox<String>\() p
(new) K
( String[] { ") p
(0) str
(", ) p n
0 T (") S
(1) str
(" }\)\);) p n
(76) # () S 8 T () S 16 T () S 24 T (JComboBox<String> nextoperator = ) S
(new) K
( JComboBox<String>\() p n
(77) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(new) K
( String[] {"",") p
(AND) str
(", ") p
(OR) str
("}\);) p n
(78) # () S 8 T () S 16 T () S 24 T (nextPanel.add\(nextoperator\);) N
(79) # () S 8 T () S 16 T () S 24 T (nextoperator.addActionListener\() S
(new) K
( AddPanelRulePoPupList) p n
0 T (ener\(panel,) N
(80) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nextoperator, controler,f\)\);) N
(81) # () S 8 T () S 16 T () S 24 T () S
(final) K
( JButton del = ) p
(new) K
( JButton\(delPanel\);) p n
(82) # () S 8 T () S 16 T () S 24 T (del.addActionListener\() S
(new) K
( ActionListener\(\){) p n
(83) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(84) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (panel.remove\(del.getParent\(\)\);) N
(85) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (panel.revalidate\(\);) N
(86) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (panel.repaint\(\);) N
(87) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (f.pack\(\);) N
(88) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(89) # () N
(90) # () S 8 T () S 16 T () S 24 T (}\);) N
(91) # () S 8 T () S 16 T () S 24 T (nextPanel.add\(del\);) N
(92) # () N
(93) # () S 8 T () S 16 T () S 24 T (panel.add\(nextPanel\);) N
(94) # () S 8 T () S 16 T () S 24 T (panel.revalidate\(\);) N
(95) # () S 8 T () S 16 T () S 24 T (panel.repaint\(\);) N
(96) # () S 8 T () S 16 T () S 24 T (f.pack\(\);) N
(97) # () S 8 T () S 16 T (}) N
(98) # () N
(99) # () S 8 T (}) N
(100) # () N
(101) # (}) N
(AddPanelRulePoPupListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/rule/AddPanelRulePoPupListener.java) (67/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 68
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( controler.rule;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(22) # () S
(import) K
( java.awt.event.ActionListener;) p n
(23) # () N
(24) # () S
(import) K
( javax.swing.JFrame;) p n
(25) # () S
(import) K
( javax.swing.JOptionPane;) p n
(26) # () N
(27) # () N
(28) # () S
(import) K
( controler.MainControler;) p n
(29) # () N
(30) # () S
(import) K
( view.GeneralFrame;) p n
(31) # () S
(import) K
( view.RulesPanel;) p n
(32) # () S
(import) K
( view.popup.AddRuleFrame;) p n
(33) # () N
(34) # () S
(public) K
( ) p
(class) K
( ) p
(EditRuleListener) L
( ) p
(implements) K
( ActionListener {) p n
(35) # () S 8 T () S
(private) K
( MainControler controler;) p n
(36) # () S 8 T () S
(private) K
( RulesPanel panel;) p n
(37) # () N
(38) # () S 8 T () S
(public) K
( EditRuleListener\(MainControler controler, RulesPanel panel\) {) p n
(39) # () S 8 T () S 16 T (this.controler = controler;) N
(40) # () S 8 T () S 16 T (this.panel = panel;) N
(41) # () S 8 T (}) N
(42) # () N
(43) # () S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(44) # () S 8 T () S 16 T (String oldRule = panel.getSelected\(\);) N
(45) # () S 8 T () S 16 T (String newRule = ) S
(null) k
(;) p n
(46) # () S 8 T () S 16 T () S
(if) K
( \(oldRule.contains\(") p
(THEN) str
("\)\) {) p n
(47) # () S 8 T () S 16 T () S 24 T (AddRuleFrame f = ) S
(new) K
( AddRuleFrame\() p n
(48) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (GeneralFrame.getInstance\(controler\), con) N
0 T (troler, oldRule\);) N
(49) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(f.okPressed\(\)\) {) p n
(50) # () S 8 T () S 16 T () S 24 T () S 32 T (newRule = f.getRule\(\);) N
(51) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.editRule\(oldRule, newRule\);) N
(52) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.notifyObservers\(\);) N
(53) # () S 8 T () S 16 T () S 24 T (}) N
(54) # () S 8 T () S 16 T (} ) S
(else) K
( {) p n
(55) # () S 8 T () S 16 T () S 24 T (JFrame frame = ) S
(new) K
( JFrame\(\);) p n
(56) # () S 8 T () S 16 T () S 24 T (newRule = JOptionPane.showInputDialog\(frame, ") S
(rule :) str
(", old) p n
0 T (Rule\);) N
(57) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(newRule != ) p
(null) k
( && checkRule\(newRule\) == ) p
(true) k
(\) {) p n
(58) # () S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(") S
(YES) str
("\);) p n
(59) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.editRule\(oldRule, newRule\);) N
(60) # () S 8 T () S 16 T () S 24 T () S 32 T (controler.notifyObservers\(\);) N
(61) # () S 8 T () S 16 T () S 24 T (}) N
(62) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(newRule != ) p
(null) k
( && checkRule\(newRule\) == ) p
(false) k
(\){) p n
(63) # () S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Wrong syntax \\) str n
(EditRuleListener.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (n See the documentation for more informations) str
(", "", JOptionPane.ERROR_MESSAGE\);) p n
(64) # () S 8 T () S 16 T () S 24 T (}) N
(65) # () S 8 T () S 16 T (}) N
(66) # () N
(67) # () S 8 T (}) N
(68) # () N
(69) # () S 8 T () S
(// checks the rules \(from regEfmtool code \)) c n
(70) # () S
() p 8 T () S
(public) K
( ) p
(boolean) k
( checkRule\(String str\) {) p n
(71) # () S 8 T () S 16 T () S
(// check if two operators follow each other) c n
(72) # () S
() p 8 T () S 16 T () S
(if) K
( \(str.contains\(") p
(||) str
("\) || str.contains\(") p
(|&) str
("\) || str.contains\(") p
(|!) str
("\)) p n
(73) # () S 8 T () S 16 T () S 24 T () S 32 T (|| str.contains\(") S
(&|) str
("\) || str.contains\(") p
(&&) str
("\)) p n
(74) # () S 8 T () S 16 T () S 24 T () S 32 T (|| str.contains\(") S
(&!) str
("\) || str.contains\(") p
(!|) str
("\)) p n
(75) # () S 8 T () S 16 T () S 24 T () S 32 T (|| str.contains\(") S
(|&) str
("\) || str.contains\(") p
(!!) str
("\)\) {) p n
(76) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(77) # () S 8 T () S 16 T (}) N
(78) # () S 8 T () S 16 T (  ) S
(// check the number of opening and closing parenthesis) c n
(79) # () S
() p 8 T (      ) S
(// and if the number of operators is equal to the number) c n
(80) # () S
() p 8 T (      ) S
(// of pairs of parenthesis) c n
(81) # () S
() p 8 T () S 16 T () S
(int) k
( nbOpen = countOccurrences\(str, '\('\);) p n
(82) # () S 8 T () S 16 T () S
(int) k
( nbClose = countOccurrences\(str, '\)'\);) p n
(83) # () S 8 T () S 16 T () S
(int) k
( nbAnd = countOccurrences\(str, '&'\);) p n
(84) # () S 8 T () S 16 T () S
(int) k
( nbOr = countOccurrences\(str, '|'\);) p n
(85) # () S 8 T () S 16 T () S
(int) k
( nbNot = countOccurrences\(str, '!'\);) p n
(86) # () S 8 T () S 16 T () S
(int) k
( nbOperator = nbAnd + nbOr + nbNot;) p n
(87) # () S 8 T () S 16 T () N
(88) # () S 8 T () S 16 T () S
(//checks if number of parenthesis) c n
(89) # () S
() p 8 T () S 16 T () S
(if) K
( \(nbOpen!=nbClose\){) p n
(90) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(91) # () S 8 T () S 16 T (}) N
(92) # () S 8 T () S 16 T () N
(93) # () S 8 T () S 16 T () S
(//check if number parenthesis = number operator) c n
(94) # () S
() p 8 T () S 16 T () S
(if) K
( \(nbOpen != nbOperator\){) p n
(95) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(96) # () S 8 T () S 16 T (}) N
(97) # () S 8 T () S 16 T () N
(98) # () S 8 T () S 16 T () S
(// one equal sign) c n
(99) # () S
() p 8 T () S 16 T () S
(int) k
( nbEqual = countOccurrences\(str, '='\);) p n
(100) # () S 8 T () S 16 T () S
(if) K
( \(nbEqual!=1\){) p n
(101) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(102) # () S 8 T () S 16 T (}) N
(103) # () S 8 T () S 16 T () N
(104) # () S 8 T () S 16 T () S
(//last char = \)) c n
(105) # () S
() p 8 T () S 16 T () S
(if) K
( \(str.charAt\(str.length\(\)-1\)!='\)'\){) p n
(106) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(107) # () S 8 T () S 16 T (}) N
(108) # () S 8 T () S 16 T () N
(109) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(110) # () S 8 T (}) N
(111) # () S 8 T () N
(112) # () S 8 T () S
(public) K
( ) p
(static) K
( ) p
(int) k
( countOccurrences\(String str, ) p
(char) k
( c\)) p n
(113) # () S 8 T ({) N
(114) # () S 8 T (    ) S
(int) k
( count = 0;) p n
(115) # () S 8 T (    ) S
(for) K
( \() p
(int) k
( i=0; i < str.length\(\); i++\)) p n
(116) # () S 8 T (    {) N
(117) # () S 8 T (        ) S
(if) K
( \(str.charAt\(i\) == c\)) p n
(118) # () S 8 T (        {) N
(119) # () S 8 T (             count++;) N
(120) # () S 8 T (        }) N
(121) # () S 8 T (    }) N
(122) # () S 8 T (    ) S
(return) K
( count;) p n
(123) # () S 8 T (}) N
(124) # () N
(125) # (}) N
(EditRuleListener.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./controler/rule/EditRuleListener.java) (68/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 69
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Color;) p n
(23) # () S
(import) K
( java.awt.Dimension;) p n
(24) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(25) # () S
(import) K
( java.awt.event.ActionListener;) p n
(26) # () S
(import) K
( java.io.BufferedReader;) p n
(27) # () S
(import) K
( java.io.File;) p n
(28) # () S
(import) K
( java.io.FileReader;) p n
(29) # () S
(import) K
( java.io.IOException;) p n
(30) # () S
(import) K
( java.text.DecimalFormat;) p n
(31) # () S
(import) K
( java.util.ArrayList;) p n
(32) # () S
(import) K
( java.util.HashMap;) p n
(33) # () S
(import) K
( java.util.List;) p n
(34) # () S
(import) K
( java.util.Map;) p n
(35) # () S
(import) K
( java.util.TreeMap;) p n
(36) # () N
(37) # () S
(import) K
( javax.swing.Box;) p n
(38) # () S
(import) K
( javax.swing.BoxLayout;) p n
(39) # () S
(import) K
( javax.swing.ImageIcon;) p n
(40) # () S
(import) K
( javax.swing.JButton;) p n
(41) # () S
(import) K
( javax.swing.JComboBox;) p n
(42) # () S
(import) K
( javax.swing.JFrame;) p n
(43) # () S
(import) K
( javax.swing.JLabel;) p n
(44) # () S
(import) K
( javax.swing.JPanel;) p n
(45) # () S
(import) K
( javax.swing.JScrollPane;) p n
(46) # () S
(import) K
( javax.swing.JSplitPane;) p n
(47) # () S
(import) K
( javax.swing.JTable;) p n
(48) # () S
(import) K
( javax.swing.JTextArea;) p n
(49) # () S
(import) K
( javax.swing.JTextField;) p n
(50) # () S
(import) K
( javax.swing.JToolBar;) p n
(51) # () S
(import) K
( javax.swing.table.DefaultTableModel;) p n
(52) # () S
(import) K
( javax.swing.table.TableModel;) p n
(53) # () S
(import) K
( javax.swing.table.TableRowSorter;) p n
(54) # () N
(55) # () S
(import) K
( model.ElementaryMode;) p n
(56) # () S
(import) K
( model.Reaction;) p n
(57) # () N
(58) # () S
(import) K
( org.jfree.chart.ChartFactory;) p n
(59) # () S
(import) K
( org.jfree.chart.ChartFrame;) p n
(60) # () S
(import) K
( org.jfree.chart.JFreeChart;) p n
(61) # () S
(import) K
( org.jfree.chart.axis.CategoryAxis;) p n
(62) # () S
(import) K
( org.jfree.chart.plot.CategoryPlot;) p n
(63) # () S
(import) K
( org.jfree.chart.plot.PlotOrientation;) p n
(64) # () S
(import) K
( org.jfree.data.category.DefaultCategoryDataset;) p n
(65) # () N
(ResultsPanel.java) (Page 1/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # (import) K
( view.popup.FilterFrame;) p n
(67) # () S
(import) K
( controler.Download;) p n
(68) # () S
(import) K
( controler.DownloadContentThread;) p n
(69) # () S
(import) K
( controler.Filter;) p n
(70) # () S
(import) K
( controler.MainControler;) p n
(71) # () S
(import) K
( controler.MyDocumentListener;) p n
(72) # () S
(import) K
( controler.Var;) p n
(73) # () N
(74) # () S
(public) K
( ) p
(class) K
( ) p
(ResultsPanel) L
( ) p
(extends) K
( JPanel {) p n
(75) # () N
(76) # () S 8 T () S
(private) K
( String resultsName;) p n
(77) # () N
(78) # () S 8 T () S
(private) K
( MainControler controler;) p n
(79) # () S 8 T () S
(private) K
( JTextArea log;) p n
(80) # () S 8 T () S
(private) K
( JTable modeTable;) p n
(81) # () S 8 T () S
(private) K
( JToolBar toolbar;) p n
(82) # () S 8 T () S
(private) K
( List<ElementaryMode> allModes = ) p
(new) K
( ArrayList<ElementaryMode>\(\);) p n
(83) # () S 8 T () S
(private) K
( JComboBox modesCombo;) p n
(84) # () S 8 T () S
(private) K
( JButton download;) p n
(85) # () S 8 T () S
(private) K
( JButton addToProject = ) p
(new) K
( JButton\(Var.iconaddtoproject\);) p n
(86) # () S 8 T () S
(private) K
( JButton removeFromProject = ) p
(new) K
( JButton\(Var.iconremoveproject\);) p n
(87) # () S 8 T () S
(private) K
( JButton filterButton = ) p
(new) K
( JButton\(Var.iconfilter\);) p n
(88) # () S 8 T () S
(private) K
( JButton histoButton = ) p
(new) K
( JButton\(Var.iconhistogram\);) p n
(89) # () S 8 T () S
(private) K
( JButton scriptButton = ) p
(new) K
( JButton\(Var.iconcmd\);) p n
(90) # () S 8 T () S
(private) K
( String[] command;) p n
(91) # () S 8 T () S
(private) K
( JTextField searchField = ) p
(new) K
( JTextField\(8\);) p n
(92) # () S 8 T () S
(private) K
( ) p
(boolean) k
( isAttached;) p n
(93) # () S 8 T () S
(private) K
( Filter filter = ) p
(new) K
( Filter\(\);) p n
(94) # () N
(95) # () S 8 T () S
(public) K
( ResultsPanel\() p
(final) K
( MainControler controler, String[] command,) p n
(96) # () S 8 T () S 16 T () S 24 T (String resultsName\) {) N
(97) # () N
(98) # () S 8 T () S 16 T (this.resultsName = resultsName;) N
(99) # () N
(100) # () S 8 T () S 16 T (this.controler = controler;) N
(101) # () S 8 T () S 16 T (this.command = command;) N
(102) # () S 8 T () S 16 T (modeTable = ) S
(new) K
( JTable\(0, 2\);) p n
(103) # () N
(104) # () S 8 T () S 16 T (DefaultTableModel model = ) S
(new) K
( MyTableModel\(\);) p n
(105) # () N
(106) # () S 8 T () S 16 T (model.addColumn\(") S
(Stoichiometry) str
("\);) p n
(107) # () S 8 T () S 16 T (model.addColumn\(") S
(Enzyme name) str
("\);) p n
(108) # () S 8 T () S 16 T (model.addColumn\(") S
(Equation) str
("\);) p n
(109) # () S 8 T () S 16 T (modeTable.setModel\(model\);) N
(110) # () N
(111) # () S 8 T () S 16 T (JPanel logPanel = ) S
(new) K
( JPanel\() p
(new) K
( BorderLayout\(\)\);) p n
(112) # () S 8 T () S 16 T (log = ) S
(new) K
( JTextArea\(\);) p n
(113) # () S 8 T () S 16 T (log.setEditable\() S
(false) k
(\);) p n
(114) # () S 8 T () S 16 T (log.setBackground\() S
(new) K
( Color\(0, 0, 0\)\);) p n
(115) # () S 8 T () S 16 T (log.setForeground\() S
(new) K
( Color\(255, 255, 255\)\);) p n
(116) # () N
(117) # () S 8 T () S 16 T (logPanel.add\() S
(new) K
( JLabel\(") p
(Genereted log) str
(", JLabel.CENTER\),) p n
(118) # () S 8 T () S 16 T () S 24 T () S 32 T (BorderLayout.PAGE_START\);) N
(119) # () S 8 T () S 16 T (logPanel.add\() S
(new) K
( JScrollPane\(log\), BorderLayout.CENTER\);) p n
(120) # () N
(121) # () S 8 T () S 16 T (addToProject.setName\(") S
(add) str
("\);) p n
(122) # () S 8 T () S 16 T (addToProject.setToolTipText\(") S
(Attach this result to the project) str
("\);) p n
(123) # () S 8 T () S 16 T (removeFromProject.setName\(") S
(remove) str
("\);) p n
(124) # () S 8 T () S 16 T (removeFromProject.setToolTipText\(") S
(Remove this result from the project) str
("\);) p n
(125) # () N
(126) # () S 8 T () S 16 T (removeFromProject.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(127) # () N
(128) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(129) # () S 8 T () S 16 T () S 24 T () S 32 T (removeFromProject\(\);) N
(130) # () S 8 T () S 16 T () S 24 T () S 32 T (updateToolbar\(\);) N
(131) # () S 8 T () S 16 T () S 24 T (}) N
(ResultsPanel.java) (Page 2/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ResultsPanel.java) (69/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 70
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(132) # () p 8 T () S 16 T (}\);) N
(133) # () N
(134) # () S 8 T () S 16 T (addToProject.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(135) # () N
(136) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(137) # () S 8 T () S 16 T () S 24 T () S 32 T (addToProject\(\);) N
(138) # () S 8 T () S 16 T () S 24 T () S 32 T (updateToolbar\(\);) N
(139) # () S 8 T () S 16 T () S 24 T (}) N
(140) # () S 8 T () S 16 T (}\);) N
(141) # () N
(142) # () S 8 T () S 16 T () S
(if) K
( \(!resultsName.startsWith\(") p
(saved/) str
("\)\) {) p n
(143) # () S 8 T () S 16 T () S 24 T (isAttached = ) S
(false) k
(;) p n
(144) # () S 8 T () S 16 T (} ) S
(else) K
( {) p n
(145) # () S 8 T () S 16 T () S 24 T (isAttached = ) S
(true) k
(;) p n
(146) # () S 8 T () S 16 T (}) N
(147) # () N
(148) # () S 8 T () S 16 T (filterButton.setToolTipText\(") S
(Filter the results) str
("\);) p n
(149) # () N
(150) # () S 8 T () S 16 T (filterButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(151) # () N
(152) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(153) # () S 8 T () S 16 T () S 24 T () S 32 T (FilterFrame ff = ) S
(new) K
( FilterFrame\(GeneralFrame) p n
(154) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getInstance\(controler\), allMode) N
0 T (s, filter, controler\);) N
(155) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(ff.okPressed\(\)\) {) p n
(156) # () N
(157) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (displayFrame\(ff.getNewModes\(\),ff.getIndi) N
0 T (ces\(\)\);) N
(158) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(159) # () S 8 T () S 16 T () S 24 T (}) N
(160) # () S 8 T () S 16 T (}\);) N
(161) # () S 8 T () S 16 T () N
(162) # () S 8 T () S 16 T (scriptButton.setToolTipText\(") S
(Download the command as a script) str
("\);) p n
(163) # () S 8 T () S 16 T (scriptButton.addActionListener\() S
(new) K
( ActionListener\(\){) p n
(164) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(165) # () S 8 T () S 16 T () S 24 T () S 32 T () N
(166) # () S 8 T () S 16 T () S 24 T () S 32 T (String scriptString = makeScript\(\);) N
(167) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Download\(scriptString, ") p
(Download the command as a ) str n
0 T (script) S
(", ""\);) p n
(168) # () S 8 T () S 16 T () S 24 T () S 32 T () N
(169) # () S 8 T () S 16 T () S 24 T (}) N
(170) # () S 8 T () S 16 T (}\);) N
(171) # () N
(172) # () S 8 T () S 16 T (download = ) S
(new) K
( JButton\() p
(new) K
( ImageIcon\(") p
(src/icons/download.png) str
("\)\);) p n
(173) # () S 8 T () S 16 T (download.setToolTipText\(") S
(Download results) str
("\);) p n
(174) # () S 8 T () S 16 T () N
(175) # () S 8 T () S 16 T (histoButton.setToolTipText\(") S
(Statistics) str
("\);) p n
(176) # () N
(177) # () S 8 T () S 16 T (searchField.setMaximumSize\() S
(new) K
( Dimension\(20, 30\)\);) p n
(178) # () N
(179) # () S 8 T () S 16 T (readLog\(\);) N
(180) # () S 8 T () S 16 T (allModes = readResultsFile\(\);) N
(181) # () S 8 T () S 16 T () N
(182) # () S 8 T () S 16 T (List<Integer> indices = ) S
(new) K
( ArrayList<Integer>\(\);) p n
(183) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i =0;i<allModes.size\(\);i++\){) p n
(184) # () S 8 T () S 16 T () S 24 T (indices.add\(\(i+1\)\);) N
(185) # () S 8 T () S 16 T (}) N
(186) # () S 8 T () S 16 T () N
(187) # () S 8 T () S 16 T (displayFrame\(allModes,indices\);) N
(188) # () N
(189) # () S 8 T (}) N
(190) # () N
(191) # () S 8 T () N
(192) # () N
(193) # () S 8 T () S
(public) K
( ) p
(void) k
( setTable\() p
(int) k
( nbMode, List<ElementaryMode> modes\) {) p n
(194) # () N
(ResultsPanel.java) (Page 3/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(195) # () p 8 T () S 16 T (ElementaryMode mode = modes.get\(nbMode\);) N
(196) # () N
(197) # () S 8 T () S 16 T (DefaultTableModel model = \(DefaultTableModel\) modeTable.getModel) N
0 T (\(\);) N
(198) # () N
(199) # () S 8 T () S 16 T () S
(while) K
( \(model.getRowCount\(\) > 0\) {) p n
(200) # () S 8 T () S 16 T () S 24 T (model.removeRow\(0\);) N
(201) # () S 8 T () S 16 T (}) N
(202) # () N
(203) # () S 8 T () S 16 T (Map<Reaction, Double> map = mode.getContent\(\);) N
(204) # () S 8 T () S 16 T () S
(for) K
( \(Reaction key : map.keySet\(\)\) {) p n
(205) # () N
(206) # () S 8 T () S 16 T () S 24 T (model.addRow\() S
(new) K
( Object[] { map.get\(key\), key.getName\(\),) p n
(207) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (key.getStringReaction\(\) }\);) N
(208) # () N
(209) # () S 8 T () S 16 T (}) N
(210) # () N
(211) # () S 8 T () S 16 T () S
(final) K
( TableRowSorter<TableModel> sorter = ) p
(new) K
( TableRowSorter<Tab) p n
0 T (leModel>\() N
(212) # () S 8 T () S 16 T () S 24 T () S 32 T (modeTable.getModel\(\)\);) N
(213) # () S 8 T () S 16 T (modeTable.setRowSorter\(sorter\);) N
(214) # () N
(215) # () S 8 T () S 16 T (searchField.getDocument\(\).addDocumentListener\() N
(216) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( MyDocumentListener\(searchField, sorter, 1, 2) p n
0 T (\)\);) N
(217) # () N
(218) # () S 8 T () S 16 T (searchField.setText\(searchField.getText\(\)\);) N
(219) # () N
(220) # () S 8 T (}) N
(221) # () N
(222) # () S 8 T () S
(// fill the list) c n
(223) # () S
() p 8 T () S
(public) K
( List<ElementaryMode> readResultsFile\(\) {) p n
(224) # () N
(225) # () S 8 T () S 16 T (List<ElementaryMode> modes = ) S
(new) K
( ArrayList<ElementaryMode>\(\);) p n
(226) # () N
(227) # () S 8 T () S 16 T () S
(try) K
( {) p n
(228) # () N
(229) # () S 8 T () S 16 T () S 24 T (BufferedReader in = ) S
(new) K
( BufferedReader\() p
(new) K
( FileReader\() p
(ne) K n
0 T (w) S
( File\() p n
(230) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(res/) str
(" + resultsName + ") p
(.res) str
("\)\)\);) p n
(231) # () S 8 T () S 16 T () S 24 T (String input = in.readLine\(\);) N
(232) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \(input != ) p
(null) k
(\) {) p n
(233) # () N
(234) # () S 8 T () S 16 T () S 24 T () S 32 T (ElementaryMode mode = ) S
(new) K
( ElementaryMode\(\);) p n
(235) # () N
(236) # () S 8 T () S 16 T () S 24 T () S 32 T (String[] ligne = input.split\(") S
(\\t) str
("\);) p n
(237) # () N
(238) # () S 8 T () S 16 T () S 24 T () S 32 T (List<Reaction> reactions = controler.getListReac) N
0 T (tions\(\);) N
(239) # () S 8 T () S 16 T () S 24 T () S 32 T (String ligneList = "";) N
(240) # () N
(241) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \() p
(int) k
( i = 0; i < ligne.length; i++\) {) p n
(242) # () N
(243) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(!ligne[i].trim\(\).equals\(") p
(0.0) str
("\)\) {) p n
(244) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (mode.addReaction\(reactions.get\(i) N
0 T (\),) N
(245) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (Double.parseDoub) N
0 T (le\(ligne[i].trim\(\)\)\);) N
(246) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(247) # () N
(248) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(249) # () S 8 T () S 16 T () S 24 T () S 32 T (input = in.readLine\(\);) N
(250) # () S 8 T () S 16 T () S 24 T () S 32 T (modes.add\(mode\);) N
(251) # () N
(252) # () S 8 T () S 16 T () S 24 T (}) N
(253) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException ex\) {) p n
(ResultsPanel.java) (Page 4/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ResultsPanel.java) (70/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 71
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(254) # () p 8 T () S 16 T (}) N
(255) # () S 8 T () S 16 T () S
(return) K
( modes;) p n
(256) # () S 8 T (}) N
(257) # () N
(258) # () S 8 T () S
(public) K
( ) p
(void) k
( readLog\(\) {) p n
(259) # () S 8 T () S 16 T () S
(try) K
( {) p n
(260) # () S 8 T () S 16 T () S 24 T (BufferedReader in = ) S
(new) K
( BufferedReader\() p
(new) K
( FileReader\() p
(ne) K n
0 T (w) S
( File\() p n
(261) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(res/) str
(" + resultsName + ") p
(.log) str
("\)\)\);) p n
(262) # () N
(263) # () S 8 T () S 16 T () S 24 T (String input = in.readLine\(\);) N
(264) # () S 8 T () S 16 T () S 24 T (String text = "";) N
(265) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \(input != ) p
(null) k
(\) {) p n
(266) # () S 8 T () S 16 T () S 24 T () S 32 T (text += input + ") S
(\\n) str
(";) p n
(267) # () S 8 T () S 16 T () S 24 T () S 32 T (input = in.readLine\(\);) N
(268) # () S 8 T () S 16 T () S 24 T (}) N
(269) # () N
(270) # () S 8 T () S 16 T () S 24 T (log.setText\(text\);) N
(271) # () S 8 T () S 16 T (}) N
(272) # () N
(273) # () S 8 T () S 16 T () S
(catch) K
( \(IOException e\) {) p n
(274) # () S 8 T () S 16 T () S 24 T () S
(// TODO Auto-generated catch block) c n
(275) # () S
() p 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(276) # () S 8 T () S 16 T (}) N
(277) # () N
(278) # () S 8 T (}) N
(279) # () N
(280) # () S 8 T () S
(class) K
( ) p
(MyTableModel) L
( ) p
(extends) K
( DefaultTableModel {) p n
(281) # () S 8 T () S 16 T () S
(public) K
( ) p
(boolean) k
( isCellEditable\() p
(int) k
( iRowIndex, ) p
(int) k
( iColumnIndex\) {) p n
(282) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(283) # () S 8 T () S 16 T (}) N
(284) # () S 8 T (}) N
(285) # () N
(286) # () S 8 T () S
(public) K
( JPanel panel\(\) {) p n
(287) # () S 8 T () S 16 T () S
(return) K
( ) p
(this) k
(;) p n
(288) # () S 8 T (}) N
(289) # () N
(290) # () N
(291) # () S 8 T () S
(protected) K
( ) p
(void) k
( addToProject\(\) {) p n
(292) # () N
(293) # () S 8 T () S 16 T (isAttached = ) S
(true) k
(;) p n
(294) # () S 8 T () S 16 T (String output = resultsName.replace\(") S
(saved/) str
(", ""\);) p n
(295) # () N
(296) # () S 8 T () S 16 T () S
(// file are in saved repertory) c n
(297) # () S
() p 8 T () S 16 T (File copyRes = ) S
(new) K
( File\(") p
(res/saved/) str
(" + output + ") p
(.res) str
("\);) p n
(298) # () S 8 T () S 16 T (File copyLog = ) S
(new) K
( File\(") p
(res/saved/) str
(" + output + ") p
(.log) str
("\);) p n
(299) # () N
(300) # () S 8 T () S 16 T () S
(new) K
( File\(") p
(res/) str
(" + output + ") p
(.res) str
("\).renameTo\(copyRes\);) p n
(301) # () S 8 T () S 16 T () S
(new) K
( File\(") p
(res/) str
(" + output + ") p
(.log) str
("\).renameTo\(copyLog\);) p n
(302) # () N
(303) # () S 8 T () S 16 T (controler.getProject\(\).addResultsPath\(output, command\);) N
(304) # () S 8 T () S 16 T () N
(305) # () S 8 T () S 16 T () S
(try) K
( {) p n
(306) # () S 8 T () S 16 T () S 24 T (controler.saveProject\(\);) N
(307) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(308) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(309) # () S 8 T () S 16 T (}) N
(310) # () S 8 T (}) N
(311) # () N
(312) # () S 8 T () S
(protected) K
( ) p
(void) k
( removeFromProject\(\) {) p n
(313) # () N
(314) # () S 8 T () S 16 T (isAttached = ) S
(false) k
(;) p n
(315) # () S 8 T () S 16 T (String output = resultsName.replace\(") S
(saved/) str
(", ""\);) p n
(316) # () N
(317) # () S 8 T () S 16 T () S
(// file are in saved repertory) c n
(318) # () S
() p 8 T () S 16 T (File copyRes = ) S
(new) K
( File\(") p
(res/) str
(" + output + ") p
(.res) str
("\);) p n
(ResultsPanel.java) (Page 5/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(319) # () p 8 T () S 16 T (File copyLog = ) S
(new) K
( File\(") p
(res/) str
(" + output + ") p
(.log) str
("\);) p n
(320) # () N
(321) # () S 8 T () S 16 T () S
(new) K
( File\(") p
(res/saved/) str
(" + output + ") p
(.res) str
("\).renameTo\(copyRes\);) p n
(322) # () S 8 T () S 16 T () S
(new) K
( File\(") p
(res/saved/) str
(" + output + ") p
(.log) str
("\).renameTo\(copyLog\);) p n
(323) # () N
(324) # () S 8 T () S 16 T (controler.getProject\(\).removeResultsPath\(output\);) N
(325) # () S 8 T () S 16 T () N
(326) # () S 8 T () S 16 T () S
(try) K
( {) p n
(327) # () S 8 T () S 16 T () S 24 T (controler.saveProject\(\);) N
(328) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(329) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(330) # () S 8 T () S 16 T (}) N
(331) # () S 8 T (}) N
(332) # () N
(333) # () S 8 T () S
(public) K
( ) p
(void) k
( updateToolbar\(\) {) p n
(334) # () N
(335) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < toolbar.getComponentCount\(\); i++\) {) p n
(336) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(toolbar.getComponentAtIndex\(i\).getName\(\) != ) p
(null) k
(\) {) p n
(337) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(toolbar.getComponentAtIndex\(i\).getName\(\).equ) p n
0 T (als\(") S
(add) str
("\)\) {) p n
(338) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (toolbar.remove\(i\);) N
(339) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (toolbar.add\(removeFromProject, i\);) N
(340) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (toolbar.revalidate\(\);) N
(341) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (toolbar.repaint\(\);) N
(342) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(toolbar.getComponentAtIndex\(i\).getNam) p n
0 T (e\(\)) N
(343) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.equals\(") S
(remove) str
("\)\) {) p n
(344) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (toolbar.remove\(i\);) N
(345) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (toolbar.add\(addToProject, i\);) N
(346) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (toolbar.revalidate\(\);) N
(347) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (toolbar.repaint\(\);) N
(348) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(349) # () S 8 T () S 16 T () S 24 T (}) N
(350) # () N
(351) # () S 8 T () S 16 T (}) N
(352) # () S 8 T (}) N
(353) # () N
(354) # () S 8 T () S
(public) K
( ) p
(void) k
( displayFrame\() p
(final) K
( List<ElementaryMode> modes,) p
(final) K
( List<Int) p n
0 T (eger> indices\) {) N
(355) # () N
(356) # () S 8 T () S 16 T (this.removeAll\(\);) N
(357) # () N
(358) # () S 8 T () S 16 T (DefaultTableModel model = \(DefaultTableModel\) modeTable.getModel) N
0 T (\(\);) N
(359) # () N
(360) # () S 8 T () S 16 T () S
(while) K
( \(model.getRowCount\(\) > 0\) {) p n
(361) # () S 8 T () S 16 T () S 24 T (model.removeRow\(0\);) N
(362) # () S 8 T () S 16 T (}) N
(363) # () N
(364) # () S 8 T () S 16 T () S
(if) K
( \(modes.size\(\) > 0\) {) p n
(365) # () S 8 T () S 16 T () S 24 T (setTable\(0, modes\);) N
(366) # () S 8 T () S 16 T (}) N
(367) # () S 8 T () S 16 T (JLabel nbMod = ) S
(new) K
( JLabel\(modes.size\(\) + ") p
( mode\(s\) found) str
("\);) p n
(368) # () N
(369) # () S 8 T () S 16 T (toolbar = ) S
(new) K
( JToolBar\(\);) p n
(370) # () S 8 T () S 16 T () S
(// set elements in the toolbar) c n
(371) # () S
() p 8 T () S 16 T (toolbar.setLayout\() S
(new) K
( BoxLayout\(toolbar, BoxLayout.LINE_AXIS\)\);) p n
(372) # () S 8 T () S 16 T (toolbar.add\(nbMod\);) N
(373) # () S 8 T () S 16 T (toolbar.setFloatable\() S
(false) k
(\);) p n
(374) # () N
(375) # () S 8 T () S 16 T (Object[] comboElements = ) S
(new) K
( Object[modes.size\(\)];) p n
(376) # () N
(377) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < modes.size\(\); i++\) {) p n
(378) # () S 8 T () S 16 T () S 24 T () N
(379) # () S 8 T () S 16 T () S 24 T (comboElements[i] = ") S
(mode ) str
(" + indices.get\(i\);) p n
(380) # () S 8 T () S 16 T (}) N
(ResultsPanel.java) (Page 6/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ResultsPanel.java) (71/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 72
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(381) # () p n
(382) # () S 8 T () S 16 T (modesCombo = ) S
(new) K
( JComboBox\(comboElements\);) p n
(383) # () N
(384) # () S 8 T () S 16 T () S
(if) K
( \(modesCombo.getActionListeners\(\).length > 0\) {) p n
(385) # () S 8 T () S 16 T () S 24 T (modesCombo.removeActionListener\(modesCombo.getActionList) N
0 T (eners\(\)[0]\);) N
(386) # () S 8 T () S 16 T (}) N
(387) # () S 8 T () S 16 T (modesCombo.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(388) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(389) # () S 8 T () S 16 T () S 24 T () S 32 T (setTable\(modesCombo.getSelectedIndex\(\), modes\);) N
(390) # () S 8 T () S 16 T () S 24 T (}) N
(391) # () S 8 T () S 16 T (}\);) N
(392) # () N
(393) # () S 8 T () S 16 T () S
(if) K
( \(modes.size\(\) > 0\) {) p n
(394) # () S 8 T () S 16 T () S 24 T (toolbar.add\(modesCombo\);) N
(395) # () S 8 T () S 16 T (}) N
(396) # () S 8 T () S 16 T (modesCombo.setMaximumSize\() S
(new) K
( Dimension\(100, 30\)\);) p n
(397) # () S 8 T () S 16 T () N
(398) # () S 8 T () S 16 T () S
(//we put the right size for le comboBox) c n
(399) # () S
() p 8 T () S 16 T () S
(int) k
( sizeMax = String.valueOf\(modes.size\(\)\).length\(\);) p n
(400) # () S 8 T () S 16 T () N
(401) # () S 8 T () S 16 T (String stringMax=") S
(mode ) str
(";) p n
(402) # () S 8 T () S 16 T () S
(for) K
(\() p
(int) k
( i = 0;i<sizeMax;i++\){) p n
(403) # () S 8 T () S 16 T () S 24 T (stringMax+=") S
(X) str
(";) p n
(404) # () S 8 T () S 16 T (}) N
(405) # () S 8 T () S 16 T () N
(406) # () S 8 T () S 16 T (modesCombo.setPrototypeDisplayValue\(stringMax\);) N
(407) # () N
(408) # () S 8 T () S 16 T () N
(409) # () S 8 T () S 16 T () N
(410) # () N
(411) # () S 8 T () S 16 T () N
(412) # () N
(413) # () S 8 T () S 16 T () S
(if) K
( \(download.getActionListeners\(\).length > 0\) {) p n
(414) # () S 8 T () S 16 T () S 24 T (download.removeActionListener\(download.getActionListener) N
0 T (s\(\)[0]\);) N
(415) # () S 8 T () S 16 T (}) N
(416) # () S 8 T () S 16 T (download.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(417) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(418) # () N
(419) # () S 8 T () S 16 T () S 24 T () S 32 T (Thread thread = ) S
(new) K
( DownloadContentThread\(modes,) p n
0 T (controler,command,log.getText\(\)\);) N
(420) # () S 8 T () S 16 T () S 24 T () S 32 T (thread.start\(\);) N
(421) # () N
(422) # () S 8 T () S 16 T () S 24 T (}) N
(423) # () S 8 T () S 16 T (}\);) N
(424) # () S 8 T () S 16 T () N
(425) # () S 8 T () S 16 T () S
(if) K
( \(histoButton.getActionListeners\(\).length > 0\) {) p n
(426) # () S 8 T () S 16 T () S 24 T (histoButton.removeActionListener\(histoButton.getActionLi) N
0 T (steners\(\)[0]\);) N
(427) # () S 8 T () S 16 T (}) N
(428) # () S 8 T () S 16 T (histoButton.addActionListener\() S
(new) K
( ActionListener\(\){) p n
(429) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(430) # () S 8 T () S 16 T () S 24 T () S 32 T (showHistogram\(modes\);) N
(431) # () S 8 T () S 16 T () S 24 T () S 32 T () N
(432) # () S 8 T () S 16 T () S 24 T (}) N
(433) # () N
(434) # () S 8 T () S 16 T (}\);) N
(435) # () S 8 T () S 16 T () N
(436) # () S 8 T () S 16 T () N
(437) # () S 8 T () S 16 T (toolbar.add\(histoButton\);) N
(438) # () S 8 T () S 16 T (toolbar.add\(filterButton\);) N
(439) # () S 8 T () S 16 T (toolbar.add\(download\);) N
(440) # () S 8 T () S 16 T (toolbar.add\(scriptButton\);) N
(441) # () S 8 T () S 16 T () S
(if) K
( \(!isAttached\) {) p n
(442) # () S 8 T () S 16 T () S 24 T (toolbar.add\(addToProject\);) N
(ResultsPanel.java) (Page 7/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(443) # () p 8 T () S 16 T (} ) S
(else) K
( {) p n
(444) # () S 8 T () S 16 T () S 24 T (toolbar.add\(removeFromProject\);) N
(445) # () S 8 T () S 16 T (}) N
(446) # () S 8 T () S 16 T () N
(447) # () N
(448) # () S 8 T () S 16 T (toolbar.add\(Box.createHorizontalGlue\(\)\);) N
(449) # () S 8 T () S 16 T (toolbar.add\(searchField\);) N
(450) # () S 8 T () S 16 T (toolbar.add\() S
(new) K
( JLabel\(Var.iconsearch\)\);) p n
(451) # () N
(452) # () S 8 T () S 16 T (JPanel logPanel = ) S
(new) K
( JPanel\() p
(new) K
( BorderLayout\(\)\);) p n
(453) # () N
(454) # () S 8 T () S 16 T (logPanel.add\() S
(new) K
( JLabel\(") p
(Generetad log) str
(", JLabel.CENTER\),) p n
(455) # () S 8 T () S 16 T () S 24 T () S 32 T (BorderLayout.PAGE_START\);) N
(456) # () S 8 T () S 16 T (logPanel.add\() S
(new) K
( JScrollPane\(log\), BorderLayout.CENTER\);) p n
(457) # () N
(458) # () S 8 T () S 16 T (this.setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(459) # () N
(460) # () S 8 T () S 16 T (JSplitPane splitPane = ) S
(new) K
( JSplitPane\(JSplitPane.VERTICAL_SPLIT,) p n
(461) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( JScrollPane\(modeTable\), logPanel\);) p n
(462) # () S 8 T () S 16 T (splitPane.setOneTouchExpandable\() S
(true) k
(\);) p n
(463) # () S 8 T () S 16 T (splitPane.setDividerLocation\(500\);) N
(464) # () N
(465) # () S 8 T () S 16 T (add\(toolbar, BorderLayout.PAGE_START\);) N
(466) # () S 8 T () S 16 T (this.add\(splitPane, BorderLayout.CENTER\);) N
(467) # () N
(468) # () S 8 T () S 16 T (this.revalidate\(\);) N
(469) # () S 8 T () S 16 T (this.repaint\(\);) N
(470) # () S 8 T (}) N
(471) # () S 8 T () N
(472) # () S 8 T () S
(public) K
( ) p
(void) k
( showHistogram\( List<ElementaryMode> modes\){) p n
(473) # () S 8 T () S 16 T () N
(474) # () S 8 T () S 16 T () S
(//for the JTable) c n
(475) # () S
() p 8 T () S 16 T (DefaultTableModel tableModel = ) S
(new) K
( DefaultTableModel\(\);) p n
(476) # () S 8 T () S 16 T (JTable tableResult = ) S
(new) K
( JTable\(\);) p n
(477) # () S 8 T () S 16 T (tableResult.setModel\(tableModel\);) N
(478) # () S 8 T () S 16 T () N
(479) # () S 8 T () S 16 T (tableModel.addColumn\(") S
(Reaction) str
("\);) p n
(480) # () S 8 T () S 16 T (tableModel.addColumn\(") S
(Presence in the modes) str
("\);) p n
(481) # () S 8 T () S 16 T () N
(482) # () S 8 T () S 16 T (tableResult.setAutoCreateRowSorter\() S
(true) k
(\);) p n
(483) # () S 8 T () S 16 T () N
(484) # () S 8 T () S 16 T (Map <Reaction, Double> stats = ) S
(new) K
( HashMap<Reaction, Double>\(\);) p n
(485) # () S 8 T () S 16 T () N
(486) # () S 8 T () S 16 T (DecimalFormat df = ) S
(new) K
( DecimalFormat\(") p
(0.00) str
("\);) p n
(487) # () S 8 T () S 16 T () N
(488) # () S 8 T () S 16 T () S
(for) K
( \(ElementaryMode em : modes\){) p n
(489) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction r : em.getContent\(\).keySet\(\)\) {) p n
(490) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(em.getContent\(\).containsKey\(r\)\){) p n
(491) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(!stats.containsKey\(r\)\){) p n
(492) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (stats.put\(r, 1.0\);) N
(493) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(494) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(else) K
( {) p n
(495) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (Reaction key = r;) N
(496) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (Double value = stats.get\(r\)+1;) N
(497) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (stats.remove\(key\);) N
(498) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (stats.put\(key, value\);) N
(499) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(500) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(501) # () S 8 T () S 16 T () S 24 T (}) N
(502) # () S 8 T () S 16 T (}) N
(503) # () S 8 T () S 16 T () N
(504) # () S 8 T () S 16 T () N
(505) # () S 8 T () S 16 T () S
(for) K
( \(Reaction r : stats.keySet\(\)\){) p n
(506) # () S 8 T () S 16 T () S 24 T (tableModel.addRow\() S
(new) K
( Object[]{r,String.valueOf\(df.forma) p n
0 T (t\(stats.get\(r\)*100/modes.size\(\)\)\)+") S
(%) str
("}\);) p n
(507) # () S 8 T () S 16 T (}) N
(ResultsPanel.java) (Page 8/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ResultsPanel.java) (72/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 73
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(508) # () p 8 T () S 16 T () N
(509) # () S 8 T () S 16 T () N
(510) # () S 8 T () S 16 T (JFrame statisticFrame = ) S
(new) K
( JFrame\(\);) p n
(511) # () S 8 T () S 16 T (statisticFrame.add\() S
(new) K
( JScrollPane\(tableResult\), BorderLayout.CE) p n
0 T (NTER\);) N
(512) # () S 8 T () S 16 T (statisticFrame.setVisible\() S
(true) k
(\);) p n
(513) # () S 8 T () S 16 T (statisticFrame.setSize\(400,350\);) N
(514) # () S 8 T () S 16 T (statisticFrame.setTitle\(") S
(Representativeness of each reaction) str
("\);) p n
(515) # () S 8 T () S 16 T (statisticFrame.setLocation\(500,600\);) N
(516) # () S 8 T () S 16 T () N
(517) # () S 8 T () S 16 T () S
(//histogram) c n
(518) # () S
() p 8 T () S 16 T (DefaultCategoryDataset dataset = ) S
(new) K
( DefaultCategoryDataset\(\);) p n
(519) # () S 8 T () S 16 T (Map<Integer,Integer> data = ) S
(new) K
( TreeMap<Integer,Integer>\(\);) p n
(520) # () S 8 T () S 16 T () S
(int) k
( maxSize=0;) p n
(521) # () S 8 T () S 16 T () S
(for) K
( \(ElementaryMode em : modes\){) p n
(522) # () S 8 T () S 16 T () S 24 T () S
(int) k
( modeLength = em.getContent\(\).size\(\);) p n
(523) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(modeLength>maxSize\){) p n
(524) # () S 8 T () S 16 T () S 24 T () S 32 T (maxSize = modeLength;) N
(525) # () S 8 T () S 16 T () S 24 T (}) N
(526) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(data.containsKey\(modeLength\)\){) p n
(527) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( value = data.get\(modeLength\)+1;) p n
(528) # () S 8 T () S 16 T () S 24 T () S 32 T (data.put\(modeLength, value\);) N
(529) # () S 8 T () S 16 T () S 24 T (}) N
(530) # () S 8 T () S 16 T () S 24 T () S
(else) K
( {) p n
(531) # () S 8 T () S 16 T () S 24 T () S 32 T (data.put\(modeLength,1\);) N
(532) # () S 8 T () S 16 T () S 24 T (}) N
(533) # () S 8 T () S 16 T (}) N
(534) # () N
(535) # () S 8 T () S 16 T () S
(for) K
(\() p
(int) k
( i=1;i<maxSize;i++\) {) p n
(536) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(!data.containsKey\(i\)\){) p n
(537) # () S 8 T () S 16 T () S 24 T () S 32 T (data.put\(i, 0\);) N
(538) # () S 8 T () S 16 T () S 24 T (}) N
(539) # () S 8 T () S 16 T (}) N
(540) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( key : data.keySet\(\)\) {) p n
(541) # () S 8 T () S 16 T () S 24 T (dataset.addValue\(Integer.valueOf\(\(data.get\(key\)\)\),") S
(test) str
(",) p n
0 T (Integer.valueOf\(key\)\);) N
(542) # () S 8 T () S 16 T (}) N
(543) # () S 8 T () S 16 T () N
(544) # () S 8 T () S 16 T (  String plotTitle = ") S
(Number of reactions per elementary mode) str
("; ) p n
(545) # () S 8 T (       String xaxis = ") S
(Reaction number) str
(";) p n
(546) # () S 8 T (       String yaxis = ") S
(Elementary mode number) str
("; ) p n
(547) # () S 8 T (       PlotOrientation orientation = PlotOrientation.VERTICAL; ) N
(548) # () S 8 T (       ) S
(boolean) k
( show = ) p
(false) k
(; ) p n
(549) # () S 8 T (       ) S
(boolean) k
( toolTips = ) p
(false) k
(;) p n
(550) # () S 8 T (       ) S
(boolean) k
( urls = ) p
(false) k
(; ) p n
(551) # () S 8 T (       JFreeChart chart = ChartFactory.createBarChart3D\(plotTitle, xaxis) N
0 T (, yaxis, ) N
(552) # () S 8 T (                dataset, orientation, show, toolTips, urls\);) N
(553) # () S 8 T (       ) N
(554) # () S 8 T (       CategoryPlot plot = chart.getCategoryPlot\(\); ) N
(555) # () S 8 T (       CategoryAxis axis = plot.getDomainAxis\(\); ) N
(556) # () S 8 T (       ) N
(557) # () S 8 T (       plot.getDomainAxis\(0\).setLabelFont\( plot.getDomainAxis\(\).getLabel) N
0 T (Font\(\).deriveFont\() S
(new) K
( Float\(11\)\)\);) p n
(558) # () S 8 T (       ) N
(559) # () S 8 T (       ChartFrame frame=) S
(new) K
( ChartFrame\(") p
(Elementary modes) str
(",chart\);) p n
(560) # () S 8 T (       frame.setVisible\() S
(true) k
(\);) p n
(561) # () S 8 T (       frame.setSize\(400,350\);) N
(562) # () S 8 T (       frame.setLocation\(500,100\);) N
(563) # () S 8 T (      ) N
(564) # () S 8 T (}) N
(565) # () S 8 T () N
(566) # () S 8 T () S
(protected) K
( String makeScript\(\) {) p n
(567) # () S 8 T () S 16 T (String stringCommand = "";) N
(568) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < command.length; i++\) {) p n
(569) # () S 8 T () S 16 T () S 24 T (stringCommand += command[i] + ") S
( ) str
(";) p n
(ResultsPanel.java) (Page 9/10) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(570) # () p 8 T () S 16 T (}) N
(571) # () S 8 T () S 16 T () S
(return) K
( stringCommand;) p n
(572) # () S 8 T (}) N
(573) # () N
(574) # (}) N
(ResultsPanel.java) (Page 10/10) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ResultsPanel.java) (73/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 74
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Dimension;) p n
(23) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(24) # () S
(import) K
( java.awt.event.ActionListener;) p n
(25) # () S
(import) K
( java.awt.event.KeyEvent;) p n
(26) # () S
(import) K
( java.awt.event.KeyListener;) p n
(27) # () S
(import) K
( java.io.BufferedReader;) p n
(28) # () S
(import) K
( java.io.BufferedWriter;) p n
(29) # () S
(import) K
( java.io.File;) p n
(30) # () S
(import) K
( java.io.FileReader;) p n
(31) # () S
(import) K
( java.io.FileWriter;) p n
(32) # () S
(import) K
( java.io.IOException;) p n
(33) # () S
(import) K
( java.util.ArrayList;) p n
(34) # () S
(import) K
( java.util.HashMap;) p n
(35) # () S
(import) K
( java.util.List;) p n
(36) # () S
(import) K
( java.util.Map;) p n
(37) # () S
(import) K
( java.util.Observable;) p n
(38) # () S
(import) K
( java.util.Observer;) p n
(39) # () N
(40) # () S
(import) K
( javax.swing.Box;) p n
(41) # () S
(import) K
( javax.swing.JButton;) p n
(42) # () S
(import) K
( javax.swing.JFrame;) p n
(43) # () S
(import) K
( javax.swing.JLabel;) p n
(44) # () S
(import) K
( javax.swing.JMenu;) p n
(45) # () S
(import) K
( javax.swing.JMenuBar;) p n
(46) # () S
(import) K
( javax.swing.JMenuItem;) p n
(47) # () S
(import) K
( javax.swing.JOptionPane;) p n
(48) # () S
(import) K
( javax.swing.JPanel;) p n
(49) # () S
(import) K
( javax.swing.JSeparator;) p n
(50) # () S
(import) K
( javax.swing.JSplitPane;) p n
(51) # () S
(import) K
( javax.swing.JTabbedPane;) p n
(52) # () S
(import) K
( javax.swing.JToolBar;) p n
(53) # () S
(import) K
( javax.swing.KeyStroke;) p n
(54) # () N
(55) # () S
(import) K
( model.data.Format;) p n
(56) # () S
(import) K
( model.data.MetatoolFormat;) p n
(57) # () S
(import) K
( model.data.ProjectFormat;) p n
(58) # () S
(import) K
( model.data.SBMLFormat;) p n
(59) # () S
(import) K
( view.popup.AboutFrame;) p n
(60) # () S
(import) K
( view.popup.ImportReactionFrame;) p n
(61) # () S
(import) K
( controler.MainControler;) p n
(62) # () S
(import) K
( controler.NewProjectListener;) p n
(63) # () S
(import) K
( controler.Var;) p n
(64) # () S
(import) K
( controler.externalPrograms.RegEfmToolHandler;) p n
(65) # () S
(import) K
( controler.load.MenuOpenListener;) p n
(GeneralFrame.java) (Page 1/9) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # (import) K
( controler.metabolites.AddMetabListener;) p n
(67) # () S
(import) K
( controler.reactions.AddReacListener;) p n
(68) # () S
(import) K
( controler.rule.AddRuleListener;) p n
(69) # () S
(import) K
( controler.save.ButtonSaveListener;) p n
(70) # () S
(import) K
( controler.save.MenuSaveListener;) p n
(71) # () S
(import) K
( controler.visu.VisuListener;) p n
(72) # () N
(73) # () S
(public) K
( ) p
(class) K
( ) p
(GeneralFrame) L
( ) p
(extends) K
( JFrame ) p
(implements) K
( Observer {) p n
(74) # () N
(75) # () S 8 T () S
(private) K
( ) p
(static) K
( GeneralFrame uniqueInstance = ) p
(null) k
(;) p n
(76) # () S 8 T () S
(private) K
( MainControler controler;) p n
(77) # () N
(78) # () S 8 T () S
(private) K
( JTabbedPane leftPanel;) p n
(79) # () S 8 T () S
(private) K
( JTabbedPane rightPanel;) p n
(80) # () N
(81) # () S 8 T () S
(private) K
( JMenuItem save;) p n
(82) # () S 8 T () S
(private) K
( JMenuItem saveAs;) p n
(83) # () S 8 T () S
(private) K
( JMenuItem addMetab;) p n
(84) # () S 8 T () S
(private) K
( JMenuItem addReac;) p n
(85) # () S 8 T () S
(private) K
( JMenuItem addRule;) p n
(86) # () S 8 T () S
(private) K
( JMenuItem importReaction;) p n
(87) # () S 8 T () S
(private) K
( JMenuItem runVisu;) p n
(88) # () S 8 T () S
(private) K
( JMenuItem runReg;) p n
(89) # () N
(90) # () S 8 T () S
(private) K
( JButton buttonsave;) p n
(91) # () S 8 T () S
(private) K
( JButton buttonvisu;) p n
(92) # () S 8 T () S
(private) K
( JButton buttonimportJvaro;) p n
(93) # () S 8 T () S
(private) K
( JButton buttonRegefmtool;) p n
(94) # () S 8 T () S
(private) K
( List<Integer> pressedKeys = ) p
(new) K
( ArrayList<Integer>\(\);) p n
(95) # () N
(96) # () S 8 T () S
(private) K
( JPanel statusBar;) p n
(97) # () N
(98) # () S 8 T () S
(private) K
( GeneralFrame\(MainControler controler\) {) p n
(99) # () S 8 T () S 16 T () S
(super) K
(\(\);) p n
(100) # () N
(101) # () S 8 T () S 16 T (this.setIconImage\(Var.logolittle.getImage\(\)\);) N
(102) # () S 8 T () S 16 T (this.setExtendedState\(this.MAXIMIZED_BOTH\);) N
(103) # () N
(104) # () S 8 T () S 16 T (this.controler = controler;) N
(105) # () S 8 T () S 16 T (initGF\(\);) N
(106) # () S 8 T () S 16 T (this.setDefaultCloseOperation\(JFrame.EXIT_ON_CLOSE\);) N
(107) # () S 8 T () S 16 T (this.setFocusable\() S
(true) k
(\);) p n
(108) # () N
(109) # () S 8 T () S 16 T (ekans\(\);) N
(110) # () N
(111) # () S 8 T (}) N
(112) # () N
(113) # () S 8 T () S
(public) K
( ) p
(static) K
( GeneralFrame getInstance\(MainControler controler\) {) p n
(114) # () S 8 T () S 16 T () S
(if) K
( \(uniqueInstance == ) p
(null) k
(\) {) p n
(115) # () S 8 T () S 16 T () S 24 T () S
(return) K
( uniqueInstance = ) p
(new) K
( GeneralFrame\(controler\);) p n
(116) # () S 8 T () S 16 T (}) N
(117) # () S 8 T () S 16 T () S
(return) K
( uniqueInstance;) p n
(118) # () S 8 T (}) N
(119) # () N
(120) # () S 8 T () S
(private) K
( ) p
(void) k
( initGF\(\) {) p n
(121) # () N
(122) # () S 8 T () S 16 T (initmenu\(\);) N
(123) # () S 8 T () S 16 T (initToolbar\(\);) N
(124) # () S 8 T () S 16 T (initpanel\(\);) N
(125) # () S 8 T () S 16 T (initStatusBar\(\);) N
(126) # () N
(127) # () S 8 T () S 16 T (this.setTitle\(") S
(J-VARO) str
("\);) p n
(128) # () S 8 T () S 16 T (this.pack\(\);) N
(129) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(130) # () S 8 T () S 16 T (this.setVisible\() S
(true) k
(\);) p n
(131) # () S 8 T () S 16 T (setDefaultCloseOperation\(DO_NOTHING_ON_CLOSE\);) N
(GeneralFrame.java) (Page 2/9) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/GeneralFrame.java) (74/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 75
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(132) # () p 8 T (}) N
(133) # () N
(134) # () S 8 T () S
(private) K
( ) p
(void) k
( initmenu\(\) {) p n
(135) # () N
(136) # () S 8 T () S 16 T () S
(// Menu) c n
(137) # () S
() p 8 T () S 16 T (JMenuBar menubar = ) S
(new) K
( JMenuBar\(\);) p n
(138) # () S 8 T () S 16 T (JMenu filemenu = ) S
(new) K
( JMenu\(") p
(File) str
("\);) p n
(139) # () S 8 T () S 16 T (JMenuItem fileItem1 = ) S
(new) K
( JMenuItem\(") p
(New) str
("\);) p n
(140) # () S 8 T () S 16 T (fileItem1.addActionListener\() S
(new) K
( NewProjectListener\(controler\)\);) p n
(141) # () S 8 T () S 16 T (KeyStroke keyNew = KeyStroke.getKeyStroke\(KeyEvent.VK_N,) N
(142) # () S 8 T () S 16 T () S 24 T () S 32 T (KeyEvent.CTRL_DOWN_MASK\);) N
(143) # () S 8 T () S 16 T (fileItem1.setAccelerator\(keyNew\);) N
(144) # () N
(145) # () S 8 T () S 16 T () S
(// subMenu Open) c n
(146) # () S
() p 8 T () S 16 T (JMenu fileItem2 = ) S
(new) K
( JMenu\(") p
(Open) str
("\);) p n
(147) # () S 8 T () S 16 T (JMenuItem openProject = ) S
(new) K
( JMenuItem\(") p
(Project) str
("\);) p n
(148) # () S 8 T () S 16 T (JMenuItem openSBML = ) S
(new) K
( JMenuItem\(") p
(SBML file) str
("\);) p n
(149) # () S 8 T () S 16 T (JMenuItem openMETATOOL = ) S
(new) K
( JMenuItem\(") p
(Metatool file) str
("\);) p n
(150) # () S 8 T () S 16 T (JMenuItem openRegefmtool = ) S
(new) K
( JMenuItem\(") p
(regEfmTool file) str
("\);) p n
(151) # () S 8 T () S 16 T (fileItem2.add\(openProject\);) N
(152) # () S 8 T () S 16 T (fileItem2.add\(openSBML\);) N
(153) # () S 8 T () S 16 T (fileItem2.add\(openMETATOOL\);) N
(154) # () S 8 T () S 16 T (fileItem2.add\(openRegefmtool\);) N
(155) # () N
(156) # () S 8 T () S 16 T () S
(// subMenu Save) c n
(157) # () S
() p 8 T () S 16 T (save = ) S
(new) K
( JMenuItem\(") p
(Save) str
("\);) p n
(158) # () S 8 T () S 16 T (KeyStroke keySave = KeyStroke.getKeyStroke\(KeyEvent.VK_S,) N
(159) # () S 8 T () S 16 T () S 24 T () S 32 T (KeyEvent.CTRL_DOWN_MASK\);) N
(160) # () S 8 T () S 16 T (save.setAccelerator\(keySave\);) N
(161) # () S 8 T () S 16 T (save.setEnabled\(controler.hasLoadedProject\(\)\);) N
(162) # () N
(163) # () S 8 T () S 16 T () S
(// subMenu save as) c n
(164) # () S
() p 8 T () S 16 T (saveAs = ) S
(new) K
( JMenu\(") p
(Save as) str
("\);) p n
(165) # () S 8 T () S 16 T (saveAs.setEnabled\(controler.hasLoadedProject\(\)\);) N
(166) # () S 8 T () S 16 T (JMenuItem saveProject = ) S
(new) K
( JMenuItem\(") p
(Project) str
("\);) p n
(167) # () S 8 T () S 16 T (JMenuItem saveSBML = ) S
(new) K
( JMenuItem\(") p
(SBML file) str
("\);) p n
(168) # () S 8 T () S 16 T (JMenuItem saveMetatool = ) S
(new) K
( JMenuItem\(") p
(Metatool file) str
("\);) p n
(169) # () S 8 T () S 16 T (JMenuItem saveRegEfmTool = ) S
(new) K
( JMenuItem\(") p
(RegEfmTool files) str
("\);) p n
(170) # () S 8 T () S 16 T (JMenuItem saveTlp = ) S
(new) K
( JMenuItem\(") p
(Tlp file) str
("\);) p n
(171) # () S 8 T () S 16 T (saveAs.add\(saveProject\);) N
(172) # () S 8 T () S 16 T (saveAs.add\(saveSBML\);) N
(173) # () S 8 T () S 16 T (saveAs.add\(saveMetatool\);) N
(174) # () S 8 T () S 16 T (saveAs.add\(saveRegEfmTool\);) N
(175) # () S 8 T () S 16 T (saveAs.add\(saveTlp\);) N
(176) # () N
(177) # () S 8 T () S 16 T () S
(// Close) c n
(178) # () S
() p 8 T () S 16 T (JMenuItem fileItem5 = ) S
(new) K
( JMenuItem\(") p
(Close) str
("\);) p n
(179) # () S 8 T () S 16 T (KeyStroke keyClose = KeyStroke.getKeyStroke\(KeyEvent.VK_Q,) N
(180) # () S 8 T () S 16 T () S 24 T () S 32 T (KeyEvent.CTRL_DOWN_MASK\);) N
(181) # () S 8 T () S 16 T (fileItem5.setAccelerator\(keyClose\);) N
(182) # () N
(183) # () S 8 T () S 16 T (fileItem5.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(184) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(185) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(JOptionPane.showConfirmDialog\() p
(null) k
(,) p n
(186) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(Are you sure you want to quit?) str
(", "",) p n
(187) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane.YES_NO_OPTION\) == JO) N
0 T (ptionPane.YES_OPTION\)) N
(188) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.exit\(0\);) N
(189) # () S 8 T () S 16 T () S 24 T (}) N
(190) # () S 8 T () S 16 T (}\);) N
(191) # () N
(192) # () S 8 T () S 16 T () S
(// Listeners for opening all file formats) c n
(193) # () S
() p 8 T () S 16 T (MenuOpenListener openlistener = ) S
(new) K
( MenuOpenListener\(controler,) p n
(194) # () S 8 T () S 16 T () S 24 T () S 32 T (openProject, openSBML, openMETATOOL, openRegefmt) N
0 T (ool\);) N
(195) # () S 8 T () S 16 T (openProject.addActionListener\(openlistener\);) N
(GeneralFrame.java) (Page 3/9) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(196) # () p 8 T () S 16 T (openSBML.addActionListener\(openlistener\);) N
(197) # () S 8 T () S 16 T (openMETATOOL.addActionListener\(openlistener\);) N
(198) # () S 8 T () S 16 T (openRegefmtool.addActionListener\(openlistener\);) N
(199) # () N
(200) # () S 8 T () S 16 T () S
(// Listeners for saving all file formats) c n
(201) # () S
() p 8 T () S 16 T (MenuSaveListener savelistener = ) S
(new) K
( MenuSaveListener\(controler,) p n
(202) # () S 8 T () S 16 T () S 24 T () S 32 T (saveProject, saveSBML, saveMetatool, saveRegEfmT) N
0 T (ool, saveTlp,) N
(203) # () S 8 T () S 16 T () S 24 T () S 32 T (save\);) N
(204) # () S 8 T () S 16 T (saveProject.addActionListener\(savelistener\);) N
(205) # () S 8 T () S 16 T (saveSBML.addActionListener\(savelistener\);) N
(206) # () S 8 T () S 16 T (saveMetatool.addActionListener\(savelistener\);) N
(207) # () S 8 T () S 16 T (saveRegEfmTool.addActionListener\(savelistener\);) N
(208) # () S 8 T () S 16 T (saveTlp.addActionListener\(savelistener\);) N
(209) # () S 8 T () S 16 T (save.addActionListener\(savelistener\);) N
(210) # () N
(211) # () S 8 T () S 16 T (filemenu.add\(fileItem1\);) N
(212) # () S 8 T () S 16 T (filemenu.add\(fileItem2\);) N
(213) # () S 8 T () S 16 T (filemenu.add\(save\);) N
(214) # () S 8 T () S 16 T (filemenu.add\(saveAs\);) N
(215) # () S 8 T () S 16 T (filemenu.add\() S
(new) K
( JSeparator\(\)\);) p n
(216) # () N
(217) # () S 8 T () S 16 T () S
(// loading recent files) c n
(218) # () N
(219) # () S
() p 8 T () S 16 T () S
(// map that makes correspond types to loaders) c n
(220) # () S
() p 8 T () S 16 T () S
(final) K
( Map<String, Format> map = ) p
(new) K
( HashMap<String, Format>\(\);) p n
(221) # () S 8 T () S 16 T (map.put\(") S
(sbml) str
(", ) p
(new) K
( SBMLFormat\(\)\);) p n
(222) # () S 8 T () S 16 T (map.put\(") S
(prj) str
(", ) p
(new) K
( ProjectFormat\(controler\)\);) p n
(223) # () S 8 T () S 16 T (map.put\(") S
(met) str
(", ) p
(new) K
( MetatoolFormat\(\)\);) p n
(224) # () N
(225) # () S 8 T () S 16 T (BufferedWriter out;) N
(226) # () S 8 T () S 16 T () S
(try) K
( {) p n
(227) # () S 8 T () S 16 T () S 24 T (out = ) S
(new) K
( BufferedWriter\() p
(new) K
( FileWriter\() p
(new) K
( File\(") p
(recent.tx) str n
0 T (t) S
("\),) p n
(228) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(true) k
(\)\);) p n
(229) # () S 8 T () S 16 T () S 24 T (out.close\(\);) N
(230) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e2\) {) p n
(231) # () S 8 T () S 16 T () S 24 T () S
(// TODO Auto-generated catch block) c n
(232) # () S
() p 8 T () S 16 T () S 24 T (e2.printStackTrace\(\);) N
(233) # () S 8 T () S 16 T (}) N
(234) # () N
(235) # () S 8 T () S 16 T (BufferedReader in;) N
(236) # () S 8 T () S 16 T () S
(try) K
( {) p n
(237) # () S 8 T () S 16 T () S 24 T (in = ) S
(new) K
( BufferedReader\() p
(new) K
( FileReader\() p
(new) K
( File\(") p
(recent.txt) str
() p n
0 T ("\)\)\);) N
(238) # () N
(239) # () S 8 T () S 16 T () S 24 T (String input = in.readLine\(\);) N
(240) # () N
(241) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < 5; i++\) {) p n
(242) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(input != ) p
(null) k
(\) {) p n
(243) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(final) K
( String[] ligne = input.split\(") p
( ) str
("\);) p n
(244) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JMenuItem item = ) S
(new) K
( JMenuItem\(ligne[0]\)) p n
0 T (;) N
(245) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (item.addActionListener\() S
(new) K
( ActionListene) p n
0 T (r\(\) {) N
(246) # () N
(247) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(public) K
( ) p
(void) k
( actionPerformed\(Acti) p n
0 T (onEvent arg0\) {) N
(248) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (controler.setLoader\(map.) N
0 T (get\(ligne[1]\)\);) N
(249) # () N
(250) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (File files[] = ) S
(new) K
( File[) p n
0 T (1];) N
(251) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (files[0] = ) S
(new) K
( File\(lign) p n
0 T (e[0]\);) N
(252) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(try) K
( {) p n
(GeneralFrame.java) (Page 4/9) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/GeneralFrame.java) (75/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 76
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(253) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (controler.loadNe) N
0 T (twork\(files\);) N
(254) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (} ) S
(catch) K
( \(ClassNotFoundEx) p n
0 T (ception e\) {) N
(255) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (e.printStackTrac) N
0 T (e\(\);) N
(256) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (} ) S
(catch) K
( \(IOException e\) ) p n
0 T ({) N
(257) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (e.printStackTrac) N
0 T (e\(\);) N
(258) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (}) N
(259) # () N
(260) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
(261) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}\);) N
(262) # () N
(263) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (filemenu.add\(item\);) N
(264) # () N
(265) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (input = in.readLine\(\);) N
(266) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(267) # () N
(268) # () S 8 T () S 16 T () S 24 T (}) N
(269) # () S 8 T () S 16 T () S 24 T (in.close\(\);) N
(270) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(271) # () S 8 T () S 16 T () S 24 T (e1.printStackTrace\(\);) N
(272) # () S 8 T () S 16 T (}) N
(273) # () N
(274) # () S 8 T () S 16 T () S
(//) c n
(275) # () S
() p 8 T () S 16 T (filemenu.add\() S
(new) K
( JSeparator\(\)\);) p n
(276) # () S 8 T () S 16 T (filemenu.add\(fileItem5\);) N
(277) # () N
(278) # () S 8 T () S 16 T (JMenu networkmenu = ) S
(new) K
( JMenu\(") p
(Network) str
("\);) p n
(279) # () S 8 T () S 16 T (addMetab = ) S
(new) K
( JMenuItem\(") p
(Add a metabolite) str
("\);) p n
(280) # () S 8 T () S 16 T (addReac = ) S
(new) K
( JMenuItem\(") p
(Add a reaction) str
("\);) p n
(281) # () S 8 T () S 16 T (addRule = ) S
(new) K
( JMenuItem\(") p
(Add a rule) str
("\);) p n
(282) # () S 8 T () S 16 T (importReaction = ) S
(new) K
( JMenuItem\(") p
(Import reactions) str
("\);) p n
(283) # () S 8 T () S 16 T (addMetab.setEnabled\(controler.hasLoadedProject\(\)\);) N
(284) # () S 8 T () S 16 T (addReac.setEnabled\(controler.hasLoadedProject\(\)\);) N
(285) # () S 8 T () S 16 T (addRule.setEnabled\(controler.hasLoadedProject\(\)\);) N
(286) # () S 8 T () S 16 T (importReaction.setEnabled\(controler.hasLoadedProject\(\)\);) N
(287) # () N
(288) # () S 8 T () S 16 T (addMetab.addActionListener\() S
(new) K
( AddMetabListener\(controler\)\);) p n
(289) # () S 8 T () S 16 T (addReac.addActionListener\() S
(new) K
( AddReacListener\(controler\)\);) p n
(290) # () S 8 T () S 16 T (addRule.addActionListener\() S
(new) K
( AddRuleListener\(controler\)\);) p n
(291) # () S 8 T () S 16 T (importReaction.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(292) # () N
(293) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(294) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( ImportReactionFrame\(GeneralFrame.getInstance) p n
0 T (\(controler\),) N
(295) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (controler\);) N
(296) # () S 8 T () S 16 T () S 24 T (}) N
(297) # () N
(298) # () S 8 T () S 16 T (}\);) N
(299) # () N
(300) # () S 8 T () S 16 T (networkmenu.add\(addMetab\);) N
(301) # () S 8 T () S 16 T (networkmenu.add\(addReac\);) N
(302) # () S 8 T () S 16 T (networkmenu.add\(addRule\);) N
(303) # () S 8 T () S 16 T (networkmenu.add\() S
(new) K
( JSeparator\(\)\);) p n
(304) # () S 8 T () S 16 T (networkmenu.add\(importReaction\);) N
(305) # () N
(306) # () S 8 T () S 16 T (JMenu runMenu = ) S
(new) K
( JMenu\(") p
(Run) str
("\);) p n
(307) # () S 8 T () S 16 T (runReg = ) S
(new) K
( JMenuItem\(") p
(RegEfmTool) str
("\);) p n
(308) # () S 8 T () S 16 T (runReg.setEnabled\(controler.hasLoadedProject\(\)\);) N
(309) # () S 8 T () S 16 T (runReg.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(310) # () N
(311) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(312) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( RegEfmToolHandler\(controler\);) p n
(GeneralFrame.java) (Page 5/9) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(313) # () p 8 T () S 16 T () S 24 T (}) N
(314) # () N
(315) # () S 8 T () S 16 T (}\);) N
(316) # () N
(317) # () S 8 T () S 16 T (runVisu = ) S
(new) K
( JMenuItem\(") p
(Visualization) str
("\);) p n
(318) # () S 8 T () S 16 T (runVisu.setEnabled\(controler.hasLoadedProject\(\)\);) N
(319) # () S 8 T () S 16 T (runVisu.addActionListener\() S
(new) K
( VisuListener\(controler\)\);) p n
(320) # () N
(321) # () S 8 T () S 16 T (runMenu.add\(runReg\);) N
(322) # () S 8 T () S 16 T (runMenu.add\(runVisu\);) N
(323) # () N
(324) # () S 8 T () S 16 T (JMenu helpmenu = ) S
(new) K
( JMenu\(") p
(Help) str
("\);) p n
(325) # () S 8 T () S 16 T (JMenuItem helpitem1 = ) S
(new) K
( JMenuItem\(") p
(About) str
("\);) p n
(326) # () S 8 T () S 16 T (helpitem1.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(327) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(328) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( AboutFrame\(frame\(\)\);) p n
(329) # () S 8 T () S 16 T () S 24 T (}) N
(330) # () S 8 T () S 16 T (}\);) N
(331) # () S 8 T () S 16 T (helpmenu.add\(helpitem1\);) N
(332) # () N
(333) # () S 8 T () S 16 T (menubar.add\(filemenu\);) N
(334) # () N
(335) # () S 8 T () S 16 T (menubar.add\(networkmenu\);) N
(336) # () S 8 T () S 16 T (menubar.add\(runMenu\);) N
(337) # () S 8 T () S 16 T (menubar.add\(helpmenu\);) N
(338) # () N
(339) # () S 8 T () S 16 T (this.setJMenuBar\(menubar\);) N
(340) # () S 8 T (}) N
(341) # () N
(342) # () S 8 T () S
(private) K
( ) p
(void) k
( initToolbar\(\) {) p n
(343) # () S 8 T () S 16 T (JToolBar toolbar = ) S
(new) K
( JToolBar\(\);) p n
(344) # () S 8 T () S 16 T (toolbar.setFloatable\() S
(false) k
(\);) p n
(345) # () N
(346) # () S 8 T () S 16 T () S
(// New) c n
(347) # () S
() p 8 T () S 16 T (JButton buttonnew = ) S
(new) K
( JButton\(Var.iconnew\);) p n
(348) # () S 8 T () S 16 T (buttonnew.setToolTipText\(") S
(Create a new project) str
("\);) p n
(349) # () S 8 T () S 16 T (buttonnew.setText\(") S
(New Project) str
("\);) p n
(350) # () S 8 T () S 16 T (buttonnew.setHorizontalTextPosition\(JButton.CENTER\);) N
(351) # () S 8 T () S 16 T (buttonnew.setVerticalTextPosition\(JButton.BOTTOM\);) N
(352) # () S 8 T () S 16 T (buttonnew.addActionListener\() S
(new) K
( NewProjectListener\(controler\)\);) p n
(353) # () N
(354) # () S 8 T () S 16 T (toolbar.add\(buttonnew\);) N
(355) # () N
(356) # () S 8 T () S 16 T () S
(// Open) c n
(357) # () S
() p 8 T () S 16 T (JButton buttonfile = ) S
(new) K
( JButton\(Var.iconfile\);) p n
(358) # () S 8 T () S 16 T (buttonfile.setToolTipText\(") S
(Open an existing project) str
("\);) p n
(359) # () S 8 T () S 16 T (buttonfile.setText\(") S
(Open Project) str
("\);) p n
(360) # () S 8 T () S 16 T (buttonfile.setHorizontalTextPosition\(JButton.CENTER\);) N
(361) # () S 8 T () S 16 T (buttonfile.setVerticalTextPosition\(JButton.BOTTOM\);) N
(362) # () S 8 T () S 16 T (buttonfile) N
(363) # () S 8 T () S 16 T () S 24 T () S 32 T (.addActionListener\() S
(new) K
( MenuOpenListener\(controle) p n
0 T (r, buttonfile\)\);) N
(364) # () S 8 T () S 16 T (toolbar.add\(buttonfile\);) N
(365) # () N
(366) # () S 8 T () S 16 T () S
(// Save) c n
(367) # () S
() p 8 T () S 16 T (buttonsave = ) S
(new) K
( JButton\(Var.iconsave\);) p n
(368) # () S 8 T () S 16 T (buttonsave.setToolTipText\(") S
(Save current project) str
("\);) p n
(369) # () S 8 T () S 16 T (buttonsave.setText\(") S
(Save Project) str
("\);) p n
(370) # () S 8 T () S 16 T (buttonsave.setHorizontalTextPosition\(JButton.CENTER\);) N
(371) # () S 8 T () S 16 T (buttonsave.setVerticalTextPosition\(JButton.BOTTOM\);) N
(372) # () S 8 T () S 16 T (buttonsave.setEnabled\(controler.hasLoadedProject\(\)\);) N
(373) # () S 8 T () S 16 T (buttonsave.addActionListener\() S
(new) K
( ButtonSaveListener\(controler\)\);) p n
(374) # () S 8 T () S 16 T (toolbar.add\(buttonsave\);) N
(375) # () N
(376) # () S 8 T () S 16 T () S
(// import from Jvaro) c n
(377) # () S
() p 8 T () S 16 T (buttonimportJvaro = ) S
(new) K
( JButton\(Var.iconimport\);) p n
(GeneralFrame.java) (Page 6/9) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/GeneralFrame.java) (76/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 77
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(378) # () p 8 T () S 16 T (buttonimportJvaro.setToolTipText\(") S
(Import network from J-Varo) str
("\);) p n
(379) # () S 8 T () S 16 T (buttonimportJvaro.setText\(") S
(Import reactions) str
("\);) p n
(380) # () S 8 T () S 16 T (buttonimportJvaro.setHorizontalTextPosition\(JButton.CENTER\);) N
(381) # () S 8 T () S 16 T (buttonimportJvaro.setVerticalTextPosition\(JButton.BOTTOM\);) N
(382) # () S 8 T () S 16 T (buttonimportJvaro.setEnabled\(controler.hasLoadedProject\(\)\);) N
(383) # () S 8 T () S 16 T (buttonimportJvaro.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(384) # () N
(385) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(386) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( ImportReactionFrame\(GeneralFrame.getInstance) p n
0 T (\(controler\),) N
(387) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (controler\);) N
(388) # () S 8 T () S 16 T () S 24 T (}) N
(389) # () N
(390) # () S 8 T () S 16 T (}\);) N
(391) # () S 8 T () S 16 T (toolbar.add\(buttonimportJvaro\);) N
(392) # () N
(393) # () S 8 T () S 16 T () S
(// space in the toolbar) c n
(394) # () S
() p 8 T () S 16 T (toolbar.add\(Box.createRigidArea\() S
(new) K
( Dimension\(50, 0\)\)\);) p n
(395) # () N
(396) # () S 8 T () S 16 T () S
(// run regefmtool) c n
(397) # () S
() p 8 T () S 16 T (buttonRegefmtool = ) S
(new) K
( JButton\(Var.iconrun\);) p n
(398) # () S 8 T () S 16 T (buttonRegefmtool.setEnabled\(controler.hasLoadedProject\(\)\);) N
(399) # () S 8 T () S 16 T (buttonRegefmtool.setToolTipText\(") S
(Launch regEfmtool analysis) str
("\);) p n
(400) # () S 8 T () S 16 T (buttonRegefmtool.setText\(") S
(regEfmtool) str
("\);) p n
(401) # () S 8 T () S 16 T (buttonRegefmtool.setHorizontalTextPosition\(JButton.CENTER\);) N
(402) # () S 8 T () S 16 T (buttonRegefmtool.setVerticalTextPosition\(JButton.BOTTOM\);) N
(403) # () S 8 T () S 16 T (buttonRegefmtool.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(404) # () N
(405) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(406) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( RegEfmToolHandler\(controler\);) p n
(407) # () S 8 T () S 16 T () S 24 T (}) N
(408) # () N
(409) # () S 8 T () S 16 T (}\);) N
(410) # () S 8 T () S 16 T (toolbar.add\(buttonRegefmtool\);) N
(411) # () N
(412) # () S 8 T () S 16 T () S
(// visualization) c n
(413) # () S
() p 8 T () S 16 T (buttonvisu = ) S
(new) K
( JButton\(Var.iconvisu\);) p n
(414) # () S 8 T () S 16 T (buttonvisu.setEnabled\(controler.hasLoadedProject\(\)\);) N
(415) # () S 8 T () S 16 T (buttonvisu.setToolTipText\(") S
(Create a visualization) str
("\);) p n
(416) # () S 8 T () S 16 T (buttonvisu.setText\(") S
(Visualization) str
("\);) p n
(417) # () S 8 T () S 16 T (buttonvisu.setHorizontalTextPosition\(JButton.CENTER\);) N
(418) # () S 8 T () S 16 T (buttonvisu.setVerticalTextPosition\(JButton.BOTTOM\);) N
(419) # () S 8 T () S 16 T (buttonvisu.addActionListener\() S
(new) K
( VisuListener\(controler\)\);) p n
(420) # () S 8 T () S 16 T (toolbar.add\(buttonvisu\);) N
(421) # () N
(422) # () S 8 T () S 16 T (this.add\(toolbar, BorderLayout.NORTH\);) N
(423) # () S 8 T (}) N
(424) # () N
(425) # () S 8 T () S
(private) K
( ) p
(void) k
( initStatusBar\(\) {) p n
(426) # () S 8 T () S 16 T (statusBar = ) S
(new) K
( JPanel\(\);) p n
(427) # () S 8 T () S 16 T (this.add\(statusBar, BorderLayout.PAGE_END\);) N
(428) # () S 8 T () S 16 T (statusBar.add\() S
(new) K
( JLabel\(") p
(Welcome to J-VARO !) str
("\)\);) p n
(429) # () S 8 T (}) N
(430) # () N
(431) # () S 8 T () S
(private) K
( ) p
(void) k
( initpanel\(\) {) p n
(432) # () S 8 T () S 16 T (JSplitPane panel1 = ) S
(new) K
( JSplitPane\(JSplitPane.HORIZONTAL_SPLIT,) p n
(433) # () S 8 T () S 16 T () S 24 T () S 32 T (initmetabo\(\), initpanelright\(\)\);) N
(434) # () S 8 T () S 16 T (this.add\(panel1, BorderLayout.CENTER\);) N
(435) # () S 8 T (}) N
(436) # () N
(437) # () S 8 T () S
(private) K
( JTabbedPane initpanelright\(\) {) p n
(438) # () N
(439) # () S 8 T () S 16 T (rightPanel = ) S
(new) K
( RightPanel\(controler\);) p n
(440) # () S 8 T () S 16 T () S
(return) K
( rightPanel;) p n
(441) # () N
(442) # () S 8 T (}) N
(GeneralFrame.java) (Page 7/9) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(443) # () p n
(444) # () S 8 T () S
(public) K
( LeftPanel getLeftPanel\(\) {) p n
(445) # () S 8 T () S 16 T () S
(return) K
( \(LeftPanel\) leftPanel;) p n
(446) # () S 8 T (}) N
(447) # () N
(448) # () S 8 T () S
(private) K
( JTabbedPane initmetabo\(\) {) p n
(449) # () N
(450) # () S 8 T () S 16 T (leftPanel = ) S
(new) K
( LeftPanel\(controler\);) p n
(451) # () S 8 T () S 16 T () S
(return) K
( leftPanel;) p n
(452) # () N
(453) # () S 8 T (}) N
(454) # () N
(455) # () S 8 T () S
(public) K
( RightPanel getRightPanel\(\) {) p n
(456) # () S 8 T () S 16 T () S
(return) K
( \(RightPanel\) rightPanel;) p n
(457) # () S 8 T (}) N
(458) # () N
(459) # () S 8 T () S
(public) K
( JPanel getStatusBar\(\) {) p n
(460) # () S 8 T () S 16 T () S
(return) K
( statusBar;) p n
(461) # () S 8 T (}) N
(462) # () N
(463) # () S 8 T () S
(public) K
( ) p
(void) k
( setStatusBar\(\) {) p n
(464) # () S 8 T () S 16 T (statusBar.removeAll\(\);) N
(465) # () S 8 T () S 16 T (statusBar.add\() S
(new) K
( JLabel\(") p
(Metabolites : ) str
(") p n
(466) # () S 8 T () S 16 T () S 24 T () S 32 T (+ controler.getListMetabos\(\).size\(\)\)\);) N
(467) # () S 8 T () S 16 T (statusBar.add\(Box.createRigidArea\() S
(new) K
( Dimension\(50, 0\)\)\);) p n
(468) # () S 8 T () S 16 T (statusBar.add\() S
(new) K
( JLabel\(") p
(Reactions : ) str
(") p n
(469) # () S 8 T () S 16 T () S 24 T () S 32 T (+ controler.getListReactions\(\).size\(\)\)\);) N
(470) # () S 8 T () S 16 T (statusBar.add\(Box.createRigidArea\() S
(new) K
( Dimension\(50, 0\)\)\);) p n
(471) # () S 8 T () S 16 T (statusBar.add\() S
(new) K
( JLabel\(") p
(Rules : ) str
(" + controler.getRules\(\).size\(\)\)) p n
0 T (\);) N
(472) # () S 8 T () S 16 T (statusBar.revalidate\(\);) N
(473) # () S 8 T () S 16 T (statusBar.repaint\(\);) N
(474) # () S 8 T (}) N
(475) # () N
(476) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(Observable arg0, Object arg1\) {) p n
(477) # () N
(478) # () S 8 T () S 16 T (save.setEnabled\(controler.hasLoadedProjectWithPath\(\)\);) N
(479) # () S 8 T () S 16 T (saveAs.setEnabled\(controler.hasLoadedProject\(\)\);) N
(480) # () S 8 T () S 16 T (addMetab.setEnabled\(controler.hasLoadedProject\(\)\);) N
(481) # () S 8 T () S 16 T (addReac.setEnabled\(controler.hasLoadedProject\(\)\);) N
(482) # () S 8 T () S 16 T (addRule.setEnabled\(controler.hasLoadedProject\(\)\);) N
(483) # () S 8 T () S 16 T (importReaction.setEnabled\(controler.hasLoadedProject\(\)\);) N
(484) # () S 8 T () S 16 T (runVisu.setEnabled\(controler.hasLoadedProject\(\)\);) N
(485) # () S 8 T () S 16 T (runReg.setEnabled\(controler.hasLoadedProject\(\)\);) N
(486) # () N
(487) # () S 8 T () S 16 T (buttonsave.setEnabled\(controler.hasLoadedProjectWithPath\(\)\);) N
(488) # () S 8 T () S 16 T (buttonvisu.setEnabled\(controler.hasLoadedProject\(\)\);) N
(489) # () S 8 T () S 16 T (buttonRegefmtool.setEnabled\(controler.hasLoadedProject\(\)\);) N
(490) # () S 8 T () S 16 T (buttonimportJvaro.setEnabled\(controler.hasLoadedProject\(\)\);) N
(491) # () S 8 T () S 16 T () S
(if) K
( \(controler.hasLoadedProject\(\)\) {) p n
(492) # () S 8 T () S 16 T () S 24 T (this.setTitle\(controler.getProjectName\(\) + ") S
( - J-VARO) str
("\);) p n
(493) # () S 8 T () S 16 T (}) N
(494) # () N
(495) # () S 8 T () S 16 T (this.setStatusBar\(\);) N
(496) # () S 8 T () S 16 T (this.setVisible\() S
(true) k
(\);) p n
(497) # () S 8 T (}) N
(498) # () N
(499) # () S 8 T () S
(public) K
( GeneralFrame frame\(\) {) p n
(500) # () S 8 T () S 16 T () S
(return) K
( ) p
(this) k
(;) p n
(501) # () S 8 T (}) N
(502) # () N
(503) # () S 8 T () S
(private) K
( ) p
(void) k
( ekans\(\) {) p n
(504) # () S 8 T () S 16 T (this.addKeyListener\() S
(new) K
( KeyListener\(\) {) p n
(505) # () N
(506) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyTyped\(KeyEvent e\) {) p n
(507) # () S 8 T () S 16 T () S 24 T (}) N
(GeneralFrame.java) (Page 8/9) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/GeneralFrame.java) (77/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9) 78
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(508) # () p n
(509) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyPressed\(KeyEvent e\) {) p n
(510) # () S 8 T () S 16 T () S 24 T () S 32 T (pressedKeys.add\(e.getKeyCode\(\)\);) N
(511) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(pressedKeys.size\(\) > 5\) {) p n
(512) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (pressedKeys.remove\(0\);) N
(513) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(514) # () N
(515) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(pressedKeys.size\(\) == 5\) {) p n
(516) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(pressedKeys.get\(0\) == 83 && pressedK) p n
0 T (eys.get\(1\) == 78) N
(517) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (&& pressedKeys.get\(2\) ==) N
0 T ( 65) N
(518) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (&& pressedKeys.get\(3\) ==) N
0 T ( 75) N
(519) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (&& pressedKeys.get\(4\) ==) N
0 T ( 69\) {) N
(520) # () N
(521) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(try) K
( {) p n
(522) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (Process p = Runtime.getR) N
0 T (untime\(\).exec\() N
(523) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (") S
(java -jar l) str n
0 T (ib/ekans.jar) S
("\);) p n
(524) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(525) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (e1.printStackTrace\(\);) N
(526) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
(527) # () N
(528) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(529) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(else) K
( ) p
(if) K
( \(pressedKeys.get\(0\) == 74 && pre) p n
0 T (ssedKeys.get\(1\) == 77) N
(530) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (&& pressedKeys.get\(2\) ==) N
0 T ( 69) N
(531) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (&& pressedKeys.get\(3\) ==) N
0 T ( 84) N
(532) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (&& pressedKeys.get\(4\) ==) N
0 T ( 65\) {) N
(533) # () N
(534) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(try) K
( {) p n
(535) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (Process p = Runtime.getR) N
0 T (untime\(\).exec\() N
(536) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (") S
(java -jar l) str n
0 T (ib/atemj.jar) S
("\);) p n
(537) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(538) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (e1.printStackTrace\(\);) N
(539) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
(540) # () N
(541) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(542) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(543) # () S 8 T () S 16 T () S 24 T (}) N
(544) # () N
(545) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyReleased\(KeyEvent e\) {) p n
(546) # () N
(547) # () S 8 T () S 16 T () S 24 T (}) N
(548) # () S 8 T () S 16 T (}\);) N
(549) # () S 8 T (}) N
(550) # () N
(551) # () S 8 T () S
(public) K
( ) p
(void) k
( disableSave\(\) {) p n
(552) # () S 8 T () S 16 T (save.setEnabled\() S
(false) k
(\);) p n
(553) # () S 8 T () S 16 T (buttonsave.setEnabled\() S
(false) k
(\);) p n
(554) # () S 8 T (}) N
(555) # () S 8 T () N
(556) # () S 8 T () S
(public) K
( ) p
(void) k
( enableSave\(\) {) p n
(557) # () S 8 T () S 16 T (save.setEnabled\() S
(true) k
(\);) p n
(558) # () S 8 T () S 16 T (buttonsave.setEnabled\() S
(true) k
(\);) p n
(559) # () S 8 T (}) N
(560) # () N
(561) # (}) N
(GeneralFrame.java) (Page 9/9) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/GeneralFrame.java) (78/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 79
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Color;) p n
(23) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(24) # () S
(import) K
( java.awt.event.ActionListener;) p n
(25) # () S
(import) K
( java.io.File;) p n
(26) # () S
(import) K
( java.io.FileNotFoundException;) p n
(27) # () S
(import) K
( java.io.FileOutputStream;) p n
(28) # () S
(import) K
( java.io.IOException;) p n
(29) # () S
(import) K
( java.io.PrintWriter;) p n
(30) # () S
(import) K
( java.io.StringWriter;) p n
(31) # () S
(import) K
( java.io.Writer;) p n
(32) # () S
(import) K
( java.util.ArrayList;) p n
(33) # () S
(import) K
( java.util.List;) p n
(34) # () N
(35) # () S
(import) K
( javax.swing.JButton;) p n
(36) # () S
(import) K
( javax.swing.JPanel;) p n
(37) # () S
(import) K
( javax.swing.JScrollPane;) p n
(38) # () S
(import) K
( javax.swing.JToolBar;) p n
(39) # () N
(40) # () S
(import) K
( org.apache.batik.dom.util.DOMUtilities;) p n
(41) # () S
(import) K
( org.w3c.dom.Element;) p n
(42) # () N
(43) # () S
(import) K
( view.popup.VisuEditFrame;) p n
(44) # () S
(import) K
( controler.Download;) p n
(45) # () S
(import) K
( controler.MainControler;) p n
(46) # () S
(import) K
( controler.Var;) p n
(47) # () S
(import) K
( controler.visu.MySvgCanvas;) p n
(48) # () N
(49) # () S
(public) K
( ) p
(class) K
( ) p
(VisualizationPanel) L
( ) p
(extends) K
( JPanel {) p n
(50) # () N
(51) # () S 8 T () S
(private) K
( File svgFile;) p n
(52) # () N
(53) # () S 8 T () S
(private) K
( JPanel svgPanel = ) p
(new) K
( JPanel\(\);) p n
(54) # () S 8 T () S
(// The SVG canvas.) c n
(55) # () S
() p 8 T () S
(private) K
( MySvgCanvas svgCanvas;) p n
(56) # () S 8 T () S
(private) K
( MainControler controler;) p n
(57) # () N
(58) # () S 8 T () S
(// Buttons) c n
(59) # () S
() p 8 T () S
(private) K
( JButton undo = ) p
(new) K
( JButton\(Var.undo\);) p n
(60) # () S 8 T () S
(private) K
( JButton redo = ) p
(new) K
( JButton\(Var.redo\);) p n
(61) # () S 8 T () S
(private) K
( JButton download = ) p
(new) K
( JButton\(Var.download\);;) p n
(62) # () S 8 T () S
(private) K
( JButton addToProject = ) p
(new) K
( JButton\(Var.iconaddtoproject\);) p n
(63) # () S 8 T () S
(private) K
( JButton removeFromProject = ) p
(new) K
( JButton\(Var.iconremoveproject\);) p n
(64) # () S 8 T () S
(private) K
( JButton editImageButton = ) p
(new) K
( JButton\(Var.iconmodif\);) p n
(65) # () S 8 T () S
(private) K
( JButton saveSvg = ) p
(new) K
( JButton\(Var.savelittle\);) p n
(VisualizationPanel.java) (Page 1/7) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p n
(67) # () S 8 T () S
(private) K
( JToolBar toolbar = ) p
(new) K
( JToolBar\(\);) p n
(68) # () N
(69) # () S 8 T () S
(// list of svgCanvas for undo/redo) c n
(70) # () S
() p 8 T () S
(private) K
( List<MySvgCanvas> svgList = ) p
(new) K
( ArrayList<MySvgCanvas>\(\);) p n
(71) # () N
(72) # () S 8 T () S
(// colors) c n
(73) # () S
() p 8 T () S
(private) K
( Color reacRevColor = ) p
(new) K
( Color\(Var.reacRevColor.getRed\(\),) p n
(74) # () S 8 T () S 16 T () S 24 T (Var.reacRevColor.getGreen\(\), Var.reacRevColor.getBlue\(\),) N
(75) # () S 8 T () S 16 T () S 24 T (Var.reacRevColor.getAlpha\(\)\);) N
(76) # () S 8 T () S
(private) K
( Color reacIrrevColor = ) p
(new) K
( Color\(Var.reacIrrevColor.getRed\(\),) p n
(77) # () S 8 T () S 16 T () S 24 T (Var.reacIrrevColor.getGreen\(\), Var.reacIrrevColor.getBlu) N
0 T (e\(\),) N
(78) # () S 8 T () S 16 T () S 24 T (Var.reacIrrevColor.getAlpha\(\)\);) N
(79) # () S 8 T () S
(private) K
( Color metabIntColor = ) p
(new) K
( Color\(Var.metabIntColor.getRed\(\),) p n
(80) # () S 8 T () S 16 T () S 24 T (Var.metabIntColor.getGreen\(\), Var.metabIntColor.getBlue\() N
0 T (\),) N
(81) # () S 8 T () S 16 T () S 24 T (Var.metabIntColor.getAlpha\(\)\);) N
(82) # () S 8 T () S
(private) K
( Color metabExtColor = ) p
(new) K
( Color\(Var.metabExtColor.getRed\(\),) p n
(83) # () S 8 T () S 16 T () S 24 T (Var.metabExtColor.getGreen\(\), Var.metabExtColor.getBlue\() N
0 T (\),) N
(84) # () S 8 T () S 16 T () S 24 T (Var.metabExtColor.getAlpha\(\)\);) N
(85) # () S 8 T () S
(private) K
( Color textColor = ) p
(new) K
( Color\(Var.textColor.getRed\(\),) p n
(86) # () S 8 T () S 16 T () S 24 T (Var.textColor.getGreen\(\), Var.textColor.getBlue\(\),) N
(87) # () S 8 T () S 16 T () S 24 T (Var.textColor.getAlpha\(\)\);) N
(88) # () N
(89) # () S 8 T () S
(public) K
( VisualizationPanel\(File svgFile, MainControler controler\) {) p n
(90) # () N
(91) # () S 8 T () S 16 T (toolbar.setFloatable\() S
(false) k
(\);) p n
(92) # () S 8 T () S 16 T (this.controler = controler;) N
(93) # () S 8 T () S 16 T (this.svgFile = svgFile;) N
(94) # () S 8 T () S 16 T (this.setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(95) # () S 8 T () S 16 T (svgCanvas = ) S
(new) K
( MySvgCanvas\(svgFile, controler, ) p
(this) k
(\);) p n
(96) # () S 8 T () S 16 T (svgCanvas.setSize\(getSize\(\)\);) N
(97) # () N
(98) # () S 8 T () S 16 T () S
(// initialisation of the list for undo/redo) c n
(99) # () S
() p 8 T () S 16 T (svgList.add\(svgCanvas\);) N
(100) # () N
(101) # () S 8 T () S 16 T (addToProject.setToolTipText\(") S
(Attach this image to the project) str
("\);) p n
(102) # () S 8 T () S 16 T (removeFromProject.setToolTipText\(") S
(Remove this image from the project) str
("\);) p n
(103) # () S 8 T () S 16 T (undo.setToolTipText\(") S
(undo) str
("\);) p n
(104) # () S 8 T () S 16 T (undo.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(105) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(106) # () S 8 T () S 16 T () S 24 T () S 32 T (undo\(\);) N
(107) # () S 8 T () S 16 T () S 24 T (}) N
(108) # () S 8 T () S 16 T (}\);) N
(109) # () S 8 T () S 16 T (redo.setToolTipText\(") S
(redo) str
("\);) p n
(110) # () S 8 T () S 16 T (redo.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(111) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(112) # () S 8 T () S 16 T () S 24 T () S 32 T (redo\(\);) N
(113) # () S 8 T () S 16 T () S 24 T (}) N
(114) # () S 8 T () S 16 T (}\);) N
(115) # () N
(116) # () S 8 T () S 16 T (saveSvg.setToolTipText\(") S
(Save changes) str
("\);) p n
(117) # () S 8 T () S 16 T (saveSvg.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(118) # () N
(119) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(120) # () S 8 T () S 16 T () S 24 T () S 32 T (svgChange\(\);) N
(121) # () S 8 T () S 16 T () S 24 T () S 32 T (saveImage\(\);) N
(122) # () S 8 T () S 16 T () S 24 T (}) N
(123) # () S 8 T () S 16 T (}\);) N
(124) # () N
(125) # () S 8 T () S 16 T (editImageButton.setToolTipText\(") S
(Edit image) str
("\);) p n
(126) # () N
(127) # () S 8 T () S 16 T (editImageButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(128) # () N
(VisualizationPanel.java) (Page 2/7) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/VisualizationPanel.java) (79/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 80
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(129) # () p 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(130) # () S 8 T () S 16 T () S 24 T () S 32 T (openVisuEditFrame\(\);) N
(131) # () S 8 T () S 16 T () S 24 T (}) N
(132) # () S 8 T () S 16 T (}\);) N
(133) # () N
(134) # () S 8 T () S 16 T (download.setToolTipText\(") S
(Download image \(SVG\)) str
("\);) p n
(135) # () S 8 T () S 16 T (download.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(136) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(137) # () N
(138) # () S 8 T () S 16 T () S 24 T () S 32 T (String downloadContent = getSvgString\(\);) N
(139) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Download\(downloadContent, ") p
(Download the svg file) str
(",) p n
0 T ( ") S
(.svg) str
("\);) p n
(140) # () N
(141) # () S 8 T () S 16 T () S 24 T (}) N
(142) # () S 8 T () S 16 T (}\);) N
(143) # () N
(144) # () S 8 T () S 16 T (setToolBar\(\);) N
(145) # () N
(146) # () S 8 T () S 16 T () S
(// List<Interactor> interactors = svgCanvas.getInteractors\(\);) c n
(147) # () S
() p 8 T () S 16 T () S
(// interactors.add\(new SVGInteractor\(\)\);) c n
(148) # () N
(149) # () S
() p 8 T () S 16 T () S
(// add eventListeners) c n
(150) # () N
(151) # () S
() p 8 T () S 16 T (add\(toolbar, BorderLayout.PAGE_START\);) N
(152) # () N
(153) # () S 8 T () S 16 T (add\() S
(new) K
( JScrollPane\(svgPanel\), BorderLayout.CENTER\);) p n
(154) # () S 8 T () S 16 T (repaint\(\);) N
(155) # () S 8 T (}) N
(156) # () N
(157) # () S 8 T () S
(public) K
( ) p
(void) k
( addImageToProject\(\) {) p n
(158) # () S 8 T () S 16 T () S
(// file are in saved repertory) c n
(159) # () S
() p 8 T () S 16 T (File copy = ) S
(new) K
( File\(") p
(tulip/svg/saved/) str
(" + svgFile.getName\(\)\);) p n
(160) # () N
(161) # () S 8 T () S 16 T () S
(// move tlp file) c n
(162) # () S
() p 8 T () S 16 T () S
(new) K
( File\(") p
(tulip/tlp/) str
(") p n
(163) # () S 8 T () S 16 T () S 24 T () S 32 T (+ svgFile.getName\(\)) N
(164) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.substring\(0, svgFile.getName\(\).) N
0 T (length\(\) - 4\)\)) N
(165) # () S 8 T () S 16 T () S 24 T () S 32 T (.renameTo\() S
(new) K
( File\(") p
(tulip/tlp/saved/) str
(") p n
(166) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ svgFile.getName\(\).substring\(0,) N
(167) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (svgFile.getName\() N
0 T (\).length\(\) - 4\)\)\);) N
(168) # () N
(169) # () S 8 T () S 16 T () S
(if) K
( \(svgFile.renameTo\(copy\)\)) p n
(170) # () N
(171) # () S 8 T () S 16 T () S 24 T () S
(// save it in the project) c n
(172) # () S
() p 8 T () S 16 T () S 24 T (svgFile = copy;) N
(173) # () S 8 T () S 16 T (controler.getProject\(\).addImagePath\(copy.getAbsolutePath\(\)\);) N
(174) # () S 8 T () S 16 T () S
(for) K
( \(String path : controler.getProject\(\).getImagePaths\(\)\) {) p n
(175) # () N
(176) # () S 8 T () S 16 T () S 24 T (System.out.println\(path\);) N
(177) # () S 8 T () S 16 T (}) N
(178) # () S 8 T () S 16 T () N
(179) # () S 8 T () S 16 T () S
(try) K
( {) p n
(180) # () S 8 T () S 16 T () S 24 T (controler.saveProject\(\);) N
(181) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(182) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(183) # () S 8 T () S 16 T (}) N
(184) # () N
(185) # () S 8 T (}) N
(186) # () N
(187) # () S 8 T () S
(public) K
( ) p
(void) k
( removeImageFromProject\(\) {) p n
(188) # () S 8 T () S 16 T () S
(// remove the file of the project) c n
(189) # () S
() p 8 T () S 16 T (controler.getProject\(\).removeImagePath\(svgFile.getAbsolutePath\(\)) N
0 T (\);) N
(190) # () S 8 T () S 16 T () S
(// and remove from saved repertory) c n
(VisualizationPanel.java) (Page 3/7) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(191) # () p 8 T () S 16 T (File copy = ) S
(new) K
( File\(") p
(tulip/svg/) str
(" + svgFile.getName\(\)\);) p n
(192) # () N
(193) # () S 8 T () S 16 T (svgFile.renameTo\(copy\);) N
(194) # () S 8 T () S 16 T (svgFile = copy;) N
(195) # () N
(196) # () S 8 T () S 16 T () S
(new) K
( File\(") p
(tulip/tlp/saved/) str
(") p n
(197) # () S 8 T () S 16 T () S 24 T () S 32 T (+ svgFile.getName\(\)) N
(198) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.substring\(0, svgFile.getName\(\).) N
0 T (length\(\) - 4\)\)) N
(199) # () S 8 T () S 16 T () S 24 T () S 32 T (.renameTo\() S
(new) K
( File\(") p
(tulip/tlp/) str
(") p n
(200) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ svgFile.getName\(\).substring\(0,) N
(201) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (svgFile.getName\() N
0 T (\).length\(\) - 4\)\)\);) N
(202) # () S 8 T () S 16 T () N
(203) # () S 8 T () S 16 T () S
(try) K
( {) p n
(204) # () S 8 T () S 16 T () S 24 T (controler.saveProject\(\);) N
(205) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(206) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(207) # () S 8 T () S 16 T (}) N
(208) # () S 8 T (}) N
(209) # () N
(210) # () S 8 T () S
(public) K
( JPanel panel\(\) {) p n
(211) # () S 8 T () S 16 T () S
(return) K
( ) p
(this) k
(;) p n
(212) # () S 8 T (}) N
(213) # () N
(214) # () S 8 T () S
(public) K
( ) p
(void) k
( setToolBar\(\) {) p n
(215) # () N
(216) # () S 8 T () S 16 T (toolbar.removeAll\(\);) N
(217) # () S 8 T () S 16 T (toolbar.add\(undo\);) N
(218) # () S 8 T () S 16 T () S
(// undo is possible only if there is svgs before) c n
(219) # () S
() p 8 T () S 16 T (undo.setEnabled\(svgList.indexOf\(svgCanvas\) > 0\);) N
(220) # () S 8 T () S 16 T (toolbar.add\(redo\);) N
(221) # () S 8 T () S 16 T () S
(// undo is possible only if there is svgs after) c n
(222) # () S
() p 8 T () S 16 T (redo.setEnabled\(svgList.indexOf\(svgCanvas\) < svgList.size\(\) - 1\)) N
0 T (;) N
(223) # () N
(224) # () S 8 T () S 16 T (toolbar.add\(saveSvg\);) N
(225) # () S 8 T () S 16 T (toolbar.add\(editImageButton\);) N
(226) # () N
(227) # () S 8 T () S 16 T () S
(// if the controler doesn't contain this picture) c n
(228) # () S
() p 8 T () S 16 T () S
(if) K
( \(!controler.getProject\(\).getImagePaths\(\)) p n
(229) # () S 8 T () S 16 T () S 24 T () S 32 T (.contains\(svgFile.getAbsolutePath\(\)\)\) {) N
(230) # () S 8 T () S 16 T () S 24 T (addToProject.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(231) # () N
(232) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(233) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (addImageToProject\(\);) N
(234) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (controler.notifyObservers\(\);) N
(235) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(236) # () S 8 T () S 16 T () S 24 T (}\);) N
(237) # () S 8 T () S 16 T () S 24 T (toolbar.add\(addToProject\);) N
(238) # () S 8 T () S 16 T (} ) S
(else) K
( {) p n
(239) # () S 8 T () S 16 T () S 24 T (removeFromProject.addActionListener\() S
(new) K
( ActionListener\(\)) p n
0 T ( {) N
(240) # () N
(241) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(242) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (removeImageFromProject\(\);) N
(243) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (controler.notifyObservers\(\);) N
(244) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(245) # () S 8 T () S 16 T () S 24 T (}\);) N
(246) # () S 8 T () S 16 T () S 24 T (toolbar.add\(removeFromProject\);) N
(247) # () S 8 T () S 16 T (}) N
(248) # () N
(249) # () S 8 T () S 16 T (toolbar.add\(download\);) N
(250) # () N
(251) # () S 8 T () S 16 T (svgPanel.removeAll\(\);) N
(252) # () S 8 T () S 16 T (svgPanel.add\(svgCanvas\);) N
(VisualizationPanel.java) (Page 4/7) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/VisualizationPanel.java) (80/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 81
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(253) # () p 8 T () S 16 T (svgPanel.revalidate\(\);) N
(254) # () S 8 T () S 16 T (this.repaint\(\);) N
(255) # () N
(256) # () S 8 T (}) N
(257) # () N
(258) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
(259) # () S 8 T () S 16 T (setToolBar\(\);) N
(260) # () S 8 T (}) N
(261) # () N
(262) # () S 8 T () S
(public) K
( ) p
(void) k
( saveImage\(\) {) p n
(263) # () S 8 T () S 16 T (Writer writer = ) S
(null) k
(;) p n
(264) # () S 8 T () S 16 T () S
(try) K
( {) p n
(265) # () S 8 T () S 16 T () S 24 T (writer = ) S
(new) K
( PrintWriter\() p
(new) K
( FileOutputStream\() p n
(266) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (svgFile.getAbsoluteFile\(\)\)\);) N
(267) # () S 8 T () S 16 T (} ) S
(catch) K
( \(FileNotFoundException e2\) {) p n
(268) # () S 8 T () S 16 T () S 24 T (e2.printStackTrace\(\);) N
(269) # () S 8 T () S 16 T (}) N
(270) # () S 8 T () S 16 T () S
(try) K
( {) p n
(271) # () N
(272) # () S 8 T () S 16 T () S 24 T (DOMUtilities.writeDocument\(svgCanvas.getSVGDocument\(\), w) N
0 T (riter\);) N
(273) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(274) # () S 8 T () S 16 T () S 24 T (e1.printStackTrace\(\);) N
(275) # () S 8 T () S 16 T (}) N
(276) # () N
(277) # () S 8 T () S 16 T () S
(try) K
( {) p n
(278) # () S 8 T () S 16 T () S 24 T (writer.close\(\);) N
(279) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(280) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(281) # () S 8 T () S 16 T (}) N
(282) # () S 8 T (}) N
(283) # () N
(284) # () S 8 T () S
(public) K
( ) p
(void) k
( openVisuEditFrame\(\) {) p n
(285) # () N
(286) # () S 8 T () S 16 T () N
(287) # () S 8 T () S 16 T () S
(// we collect size of the text) c n
(288) # () S
() p 8 T () S 16 T () N
(289) # () S 8 T () S 16 T (Element textElement = \(Element\) svgCanvas.getSVGDocument\(\)) N
(290) # () S 8 T () S 16 T () S 24 T () S 32 T (.getElementsByTagName\(") S
(text) str
("\).item\(0\);) p n
(291) # () N
(292) # () S 8 T () S 16 T (String style = textElement.getAttribute\(") S
(style) str
("\);) p n
(293) # () N
(294) # () S 8 T () S 16 T (style = style.substring\(style.indexOf\(") S
(fill:rgb) str
("\)\);) p n
(295) # () N
(296) # () S 8 T () S 16 T () N
(297) # () S 8 T () S 16 T (style = textElement.getAttribute\(") S
(style) str
("\);) p n
(298) # () N
(299) # () S 8 T () S 16 T (style = style.split\(") S
(;) str
("\)[0];) p n
(300) # () N
(301) # () S 8 T () S 16 T () S
(int) k
( textSize = Integer.parseInt\(style.replace\(") p
(font-size:) str
(", ""\)\);) p n
(302) # () N
(303) # () S 8 T () S 16 T (VisuEditFrame vef = ) S
(new) K
( VisuEditFrame\() p n
(304) # () S 8 T () S 16 T () S 24 T () S 32 T (GeneralFrame.getInstance\(controler\), reacRevColo) N
0 T (r, reacIrrevColor,metabIntColor,metabExtColor,) N
(305) # () S 8 T () S 16 T () S 24 T () S 32 T (textColor, textSize\);) N
(306) # () N
(307) # () S 8 T () S 16 T () S
(// if "ok" is pressed, picture is updated) c n
(308) # () S
() p 8 T () S 16 T () S
(if) K
( \(vef.okPressed\(\)\) {) p n
(309) # () N
(310) # () S 8 T () S 16 T () S 24 T (svgChange\(\);) N
(311) # () S 8 T () S 16 T () S 24 T (svgCanvas.reDraw\(vef.getReacRevColor\(\), vef.getReacIrrev) N
0 T (Color\(\),vef.getMetabIntColor\(\),vef.getMetabExtColor\(\),) N
(312) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (vef.getTextColor\(\), vef.getTextSize\(\)\);) N
(313) # () S 8 T () S 16 T () S 24 T () N
(314) # () S 8 T () S 16 T () S 24 T (this.reacRevColor=vef.getReacRevColor\(\);) N
(315) # () S 8 T () S 16 T () S 24 T (this.reacIrrevColor=vef.getReacIrrevColor\(\);) N
(VisualizationPanel.java) (Page 5/7) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(316) # () p 8 T () S 16 T () S 24 T (this.metabIntColor=vef.getMetabIntColor\(\);) N
(317) # () S 8 T () S 16 T () S 24 T (this.metabExtColor=vef.getMetabExtColor\(\);) N
(318) # () S 8 T () S 16 T () S 24 T (this.textColor=vef.getTextColor\(\);) N
(319) # () S 8 T () S 16 T (}) N
(320) # () S 8 T (}) N
(321) # () N
(322) # () S 8 T () S
(// save the current state of the document) c n
(323) # () S
() p 8 T () S
(public) K
( ) p
(void) k
( svgChange\(\) {) p n
(324) # () N
(325) # () S 8 T () S 16 T () S
(// if last position of the list) c n
(326) # () N
(327) # () S
() p 8 T () S 16 T () S
(if) K
( \(svgList.indexOf\(svgCanvas\) == svgList.size\(\) - 1\) {) p n
(328) # () N
(329) # () S 8 T () S 16 T () S 24 T (svgList.set\(svgList.size\(\) - 1, svgCanvas.getClone\(\)\);) N
(330) # () S 8 T () S 16 T () S 24 T (svgList.add\(svgCanvas\);) N
(331) # () S 8 T () S 16 T (}) N
(332) # () N
(333) # () S 8 T () S 16 T () S
(// if middle of the list) c n
(334) # () S
() p 8 T () S 16 T () S
(else) K
( {) p n
(335) # () S 8 T () S 16 T () S 24 T (System.out.println\(") S
(:/) str
("\);) p n
(336) # () S 8 T () S 16 T () S 24 T () S
(int) k
( index = svgList.indexOf\(svgCanvas\);) p n
(337) # () S 8 T () S 16 T () S 24 T (svgList.set\(index, svgCanvas.getClone\(\)\);) N
(338) # () S 8 T () S 16 T () S 24 T () S
(// remove elements after) c n
(339) # () S
() p 8 T () S 16 T () S 24 T () S
(while) K
( \(svgList.size\(\) > index + 1\) {) p n
(340) # () S 8 T () S 16 T () S 24 T () S 32 T (svgList.remove\(svgList.size\(\) - 1\);) N
(341) # () S 8 T () S 16 T () S 24 T (}) N
(342) # () N
(343) # () S 8 T () S 16 T () S 24 T (svgList.add\(svgCanvas\);) N
(344) # () N
(345) # () S 8 T () S 16 T (}) N
(346) # () N
(347) # () S 8 T () S 16 T (setToolBar\(\);) N
(348) # () S 8 T (}) N
(349) # () N
(350) # () S 8 T () S
(public) K
( ) p
(void) k
( undo\(\) {) p n
(351) # () N
(352) # () S 8 T () S 16 T () S
(int) k
( index = svgList.indexOf\(svgCanvas\);) p n
(353) # () S 8 T () S 16 T (svgCanvas = svgList.get\(index - 1\);) N
(354) # () S 8 T () S 16 T (svgCanvas.initListeners\(\);) N
(355) # () S 8 T () S 16 T (svgCanvas.revalidate\(\);) N
(356) # () S 8 T () S 16 T (svgCanvas.repaint\(\);) N
(357) # () N
(358) # () S 8 T () S 16 T (setToolBar\(\);) N
(359) # () N
(360) # () S 8 T (}) N
(361) # () N
(362) # () S 8 T () S
(public) K
( ) p
(void) k
( redo\(\) {) p n
(363) # () N
(364) # () S 8 T () S 16 T () S
(int) k
( index = svgList.indexOf\(svgCanvas\);) p n
(365) # () S 8 T () S 16 T (svgCanvas = svgList.get\(index + 1\);) N
(366) # () S 8 T () S 16 T (System.out.println\(svgCanvas.getSVGDocument\(\)\);) N
(367) # () S 8 T () S 16 T (svgCanvas.initListeners\(\);) N
(368) # () S 8 T () S 16 T (svgCanvas.revalidate\(\);) N
(369) # () S 8 T () S 16 T (svgCanvas.repaint\(\);) N
(370) # () N
(371) # () S 8 T () S 16 T (setToolBar\(\);) N
(372) # () S 8 T (}) N
(373) # () N
(374) # () S 8 T () S
(protected) K
( String getSvgString\(\) {) p n
(375) # () N
(376) # () S 8 T () S 16 T () S
(// we write the SVG content in a string) c n
(377) # () S
() p 8 T () S 16 T (StringWriter writer = ) S
(new) K
( StringWriter\(\);) p n
(378) # () S 8 T () S 16 T (String content = "";) N
(379) # () S 8 T () S 16 T () S
(try) K
( {) p n
(380) # () S 8 T () S 16 T () S 24 T (DOMUtilities.writeDocument\(svgCanvas.getSVGDocument\(\), w) N
0 T (riter\);) N
(VisualizationPanel.java) (Page 6/7) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/VisualizationPanel.java) (81/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7) 82
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(381) # () p 8 T () S 16 T () S 24 T (content = writer.toString\(\);) N
(382) # () S 8 T () S 16 T () S 24 T (writer.close\(\);) N
(383) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(384) # () S 8 T () S 16 T () S 24 T () S
(// TODO Auto-generated catch block) c n
(385) # () S
() p 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(386) # () S 8 T () S 16 T (}) N
(387) # () N
(388) # () S 8 T () S 16 T () S
(return) K
( content;) p n
(389) # () S 8 T (}) N
(390) # (}) N
(VisualizationPanel.java) (Page 7/7) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/VisualizationPanel.java) (82/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 83
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # ( * Copyright \(c\) 1995, 2008, Oracle and/or its affiliates. All rights reserved.) N
(3) # ( *) N
(4) # ( * Redistribution and use in source and binary forms, with or without) N
(5) # ( * modification, are permitted provided that the following conditions) N
(6) # ( * are met:) N
(7) # ( *) N
(8) # ( *   - Redistributions of source code must retain the above copyright) N
(9) # ( *     notice, this list of conditions and the following disclaimer.) N
(10) # ( *) N
(11) # ( *   - Redistributions in binary form must reproduce the above copyright) N
(12) # ( *     notice, this list of conditions and the following disclaimer in the) N
(13) # ( *     documentation and/or other materials provided with the distribution.) N
(14) # ( *) N
(15) # ( *   - Neither the name of Oracle or the names of its) N
(16) # ( *     contributors may be used to endorse or promote products derived) N
(17) # ( *     from this software without specific prior written permission.) N
(18) # ( *) N
(19) # ( * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS) N
(20) # ( * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,) N
(21) # ( * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR) N
(22) # ( * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR) N
(23) # ( * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,) N
(24) # ( * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \(INCLUDING, BUT NOT LIMITED TO,) N
(25) # ( * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR) N
(26) # ( * PROFITS; OR BUSINESS INTERRUPTION\) HOWEVER CAUSED AND ON ANY THEORY OF) N
(27) # ( * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT \(INCLUDING) N
(28) # ( * NEGLIGENCE OR OTHERWISE\) ARISING IN ANY WAY OUT OF THE USE OF THIS) N
(29) # ( * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.) N
(30) # ( */) N
(31) # () N
(32) # () S
(package) K
( view;) p n
(33) # () N
(34) # () N
(35) # () S
(import) K
( javax.swing.*;) p n
(36) # () S
(import) K
( javax.swing.plaf.basic.BasicButtonUI;) p n
(37) # () S
(import) K
( java.awt.*;) p n
(38) # () S
(import) K
( java.awt.event.*;) p n
(39) # () N
(40) # () S
(/**) C n
(41) # ( * Component to be used as tabComponent; Contains a JLabel to show the text and) N
(42) # ( * a JButton to close the tab it belongs to) N
(43) # ( */) N
(44) # () N
(45) # () S
(public) K
( ) p
(class) K
( ) p
(ButtonTabComponent) L
( ) p
(extends) K
( JPanel {) p n
(46) # () S 8 T () S
(private) K
( ) p
(final) K
( JTabbedPane pane;) p n
(47) # () N
(48) # () S 8 T () S
(public) K
( ButtonTabComponent\() p
(final) K
( JTabbedPane pane\) {) p n
(49) # () S 8 T () S 16 T () S
(// unset default FlowLayout' gaps) c n
(50) # () S
() p 8 T () S 16 T () S
(super) K
(\() p
(new) K
( FlowLayout\(FlowLayout.LEFT, 0, 0\)\);) p n
(51) # () S 8 T () S 16 T () S
(if) K
( \(pane == ) p
(null) k
(\) {) p n
(52) # () S 8 T () S 16 T () S 24 T () S
(throw) K
( ) p
(new) K
( NullPointerException\(") p
(TabbedPane is null) str
("\);) p n
(53) # () S 8 T () S 16 T (}) N
(54) # () S 8 T () S 16 T (this.pane = pane;) N
(55) # () S 8 T () S 16 T (setOpaque\() S
(false) k
(\);) p n
(56) # () N
(57) # () S 8 T () S 16 T () S
(// make JLabel read titles from JTabbedPane) c n
(58) # () S
() p 8 T () S 16 T (JLabel label = ) S
(new) K
( JLabel\(\) {) p n
(59) # () S 8 T () S 16 T () S 24 T () S
(public) K
( String getText\(\) {) p n
(60) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( i = pane.indexOfTabComponent\(ButtonTabCompon) p n
0 T (ent.this\);) N
(61) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(i != -1\) {) p n
(62) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(return) K
( pane.getTitleAt\(i\);) p n
(63) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(64) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(null) k
(;) p n
(65) # () S 8 T () S 16 T () S 24 T (}) N
(ButtonTabComponent.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T (};) N
(67) # () N
(68) # () S 8 T () S 16 T (add\(label\);) N
(69) # () S 8 T () S 16 T () S
(// add more space between the label and the button) c n
(70) # () S
() p 8 T () S 16 T (label.setBorder\(BorderFactory.createEmptyBorder\(0, 0, 0, 5\)\);) N
(71) # () S 8 T () S 16 T () S
(// tab button) c n
(72) # () S
() p 8 T () S 16 T (JButton button = ) S
(new) K
( TabButton\(\);) p n
(73) # () S 8 T () S 16 T (add\(button\);) N
(74) # () S 8 T () S 16 T () S
(// add more space to the top of the component) c n
(75) # () S
() p 8 T () S 16 T (setBorder\(BorderFactory.createEmptyBorder\(2, 0, 0, 0\)\);) N
(76) # () S 8 T (}) N
(77) # () N
(78) # () S 8 T () S
(private) K
( ) p
(class) K
( ) p
(TabButton) L
( ) p
(extends) K
( JButton ) p
(implements) K
( ActionListener {) p n
(79) # () S 8 T () S 16 T () S
(public) K
( TabButton\(\) {) p n
(80) # () S 8 T () S 16 T () S 24 T () S
(int) k
( size = 17;) p n
(81) # () S 8 T () S 16 T () S 24 T (setPreferredSize\() S
(new) K
( Dimension\(size, size\)\);) p n
(82) # () S 8 T () S 16 T () S 24 T (setToolTipText\(") S
(close this tab) str
("\);) p n
(83) # () S 8 T () S 16 T () S 24 T () S
(// Make the button looks the same for all Laf's) c n
(84) # () S
() p 8 T () S 16 T () S 24 T (setUI\() S
(new) K
( BasicButtonUI\(\)\);) p n
(85) # () S 8 T () S 16 T () S 24 T () S
(// Make it transparent) c n
(86) # () S
() p 8 T () S 16 T () S 24 T (setContentAreaFilled\() S
(false) k
(\);) p n
(87) # () S 8 T () S 16 T () S 24 T () S
(// No need to be focusable) c n
(88) # () S
() p 8 T () S 16 T () S 24 T (setFocusable\() S
(false) k
(\);) p n
(89) # () S 8 T () S 16 T () S 24 T (setBorder\(BorderFactory.createEtchedBorder\(\)\);) N
(90) # () S 8 T () S 16 T () S 24 T (setBorderPainted\() S
(false) k
(\);) p n
(91) # () S 8 T () S 16 T () S 24 T () S
(// Making nice rollover effect) c n
(92) # () S
() p 8 T () S 16 T () S 24 T () S
(// we use the same listener for all buttons) c n
(93) # () S
() p 8 T () S 16 T () S 24 T (addMouseListener\(buttonMouseListener\);) N
(94) # () S 8 T () S 16 T () S 24 T (setRolloverEnabled\() S
(true) k
(\);) p n
(95) # () S 8 T () S 16 T () S 24 T () S
(// Close the proper tab by clicking the button) c n
(96) # () S
() p 8 T () S 16 T () S 24 T (addActionListener\() S
(this) k
(\);) p n
(97) # () S 8 T () S 16 T (}) N
(98) # () N
(99) # () S 8 T () S 16 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(100) # () S 8 T () S 16 T () S 24 T () S
(int) k
( i = pane.indexOfTabComponent\(ButtonTabComponent.this) p n
0 T (\);) N
(101) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(i != -1\) {) p n
(102) # () S 8 T () S 16 T () S 24 T () S 32 T (pane.remove\(i\);) N
(103) # () S 8 T () S 16 T () S 24 T (}) N
(104) # () S 8 T () S 16 T (}) N
(105) # () N
(106) # () S 8 T () S 16 T () S
(// we don't want to update UI for this button) c n
(107) # () S
() p 8 T () S 16 T () S
(public) K
( ) p
(void) k
( updateUI\(\) {) p n
(108) # () S 8 T () S 16 T (}) N
(109) # () N
(110) # () S 8 T () S 16 T () S
(// paint the cross) c n
(111) # () S
() p 8 T () S 16 T () S
(protected) K
( ) p
(void) k
( paintComponent\(Graphics g\) {) p n
(112) # () S 8 T () S 16 T () S 24 T (super.paintComponent\(g\);) N
(113) # () S 8 T () S 16 T () S 24 T (Graphics2D g2 = \(Graphics2D\) g.create\(\);) N
(114) # () S 8 T () S 16 T () S 24 T () S
(// shift the image for pressed buttons) c n
(115) # () S
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(getModel\(\).isPressed\(\)\) {) p n
(116) # () S 8 T () S 16 T () S 24 T () S 32 T (g2.translate\(1, 1\);) N
(117) # () S 8 T () S 16 T () S 24 T (}) N
(118) # () S 8 T () S 16 T () S 24 T (g2.setStroke\() S
(new) K
( BasicStroke\(2\)\);) p n
(119) # () S 8 T () S 16 T () S 24 T (g2.setColor\(Color.LIGHT_GRAY\);) N
(120) # () S 8 T () S 16 T () S 24 T () S
(// if \(getModel\(\).isRollover\(\)\) {) c n
(121) # () S
() p 8 T () S 16 T () S 24 T () S
(// g2.setColor\(Color.MAGENTA\);) c n
(122) # () S
() p 8 T () S 16 T () S 24 T () S
(// }) c n
(123) # () S
() p 8 T () S 16 T () S 24 T () S
(int) k
( delta = 6;) p n
(124) # () S 8 T () S 16 T () S 24 T (g2.drawLine\(delta, delta, getWidth\(\) - delta - 1, getHei) N
0 T (ght\(\)) N
(125) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (- delta - 1\);) N
(126) # () S 8 T () S 16 T () S 24 T (g2.drawLine\(getWidth\(\) - delta - 1, delta, delta, getHei) N
0 T (ght\(\)) N
(127) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (- delta - 1\);) N
(128) # () S 8 T () S 16 T () S 24 T (g2.dispose\(\);) N
(ButtonTabComponent.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ButtonTabComponent.java) (83/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 84
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(129) # () p 8 T () S 16 T (}) N
(130) # () S 8 T (}) N
(131) # () N
(132) # () S 8 T () S
(private) K
( ) p
(final) K
( ) p
(static) K
( MouseListener buttonMouseListener = ) p
(new) K
( MouseAdapte) p n
0 T (r\(\) {) N
(133) # () S 8 T () S 16 T () S
(public) K
( ) p
(void) k
( mouseEntered\(MouseEvent e\) {) p n
(134) # () S 8 T () S 16 T () S 24 T (Component component = e.getComponent\(\);) N
(135) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(component ) p
(instanceof) K
( AbstractButton\) {) p n
(136) # () S 8 T () S 16 T () S 24 T () S 32 T (AbstractButton button = \(AbstractButton\) compone) N
0 T (nt;) N
(137) # () S 8 T () S 16 T () S 24 T () S 32 T (button.setBorderPainted\() S
(true) k
(\);) p n
(138) # () S 8 T () S 16 T () S 24 T (}) N
(139) # () S 8 T () S 16 T (}) N
(140) # () N
(141) # () S 8 T () S 16 T () S
(public) K
( ) p
(void) k
( mouseExited\(MouseEvent e\) {) p n
(142) # () S 8 T () S 16 T () S 24 T (Component component = e.getComponent\(\);) N
(143) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(component ) p
(instanceof) K
( AbstractButton\) {) p n
(144) # () S 8 T () S 16 T () S 24 T () S 32 T (AbstractButton button = \(AbstractButton\) compone) N
0 T (nt;) N
(145) # () S 8 T () S 16 T () S 24 T () S 32 T (button.setBorderPainted\() S
(false) k
(\);) p n
(146) # () S 8 T () S 16 T () S 24 T (}) N
(147) # () S 8 T () S 16 T (}) N
(148) # () S 8 T (};) N
(149) # (}) N
(ButtonTabComponent.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ButtonTabComponent.java) (84/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 85
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Dimension;) p n
(23) # () S
(import) K
( java.util.Observable;) p n
(24) # () S
(import) K
( java.util.Observer;) p n
(25) # () N
(26) # () S
(import) K
( javax.swing.Box;) p n
(27) # () S
(import) K
( javax.swing.BoxLayout;) p n
(28) # () S
(import) K
( javax.swing.JButton;) p n
(29) # () S
(import) K
( javax.swing.JLabel;) p n
(30) # () S
(import) K
( javax.swing.JPanel;) p n
(31) # () S
(import) K
( javax.swing.JScrollPane;) p n
(32) # () S
(import) K
( javax.swing.JTextField;) p n
(33) # () S
(import) K
( javax.swing.JToolBar;) p n
(34) # () S
(import) K
( javax.swing.table.TableModel;) p n
(35) # () S
(import) K
( javax.swing.table.TableRowSorter;) p n
(36) # () N
(37) # () N
(38) # () N
(39) # () S
(import) K
( controler.MainControler;) p n
(40) # () S
(import) K
( controler.MyDocumentListener;) p n
(41) # () S
(import) K
( controler.Var;) p n
(42) # () S
(import) K
( controler.metabolites.DelMetabListener;) p n
(43) # () S
(import) K
( controler.reactions.AddDbListener;) p n
(44) # () S
(import) K
( controler.reactions.AddReacListener;) p n
(45) # () S
(import) K
( controler.reactions.DelReacListener;) p n
(46) # () S
(import) K
( controler.reactions.EditReacListener;) p n
(47) # () S
(import) K
( controler.reactions.ReactionsTableCellEditorListener;) p n
(48) # () S
(import) K
( controler.reactions.ReactionsTableSelectionListener;) p n
(49) # () N
(50) # () S
(public) K
( ) p
(class) K
( ) p
(ReactionsPanel) L
( ) p
(extends) K
( JPanel ) p
(implements) K
( Observer {) p n
(51) # () N
(52) # () N
(53) # () N
(54) # () S 8 T () S
(private) K
( JButton buttonajoutreac = ) p
(new) K
( JButton\(Var.iconajout\);) p n
(55) # () S 8 T () S
(private) K
( JButton buttonmodifreac = ) p
(new) K
( JButton\(Var.iconmodif\);) p n
(56) # () S 8 T () S
(private) K
( JButton buttonsuppreac = ) p
(new) K
( JButton\(Var.iconsupp\);) p n
(57) # () S 8 T () S
(private) K
( JButton buttonadddb = ) p
(new) K
( JButton\(Var.upload\);) p n
(58) # () S 8 T () S
(private) K
( JTextField searchField = ) p
(new) K
( JTextField\(8\);) p n
(59) # () N
(60) # () S 8 T () S
(private) K
( ReactionsTable table;) p n
(61) # () N
(62) # () S 8 T () S
(private) K
( MainControler controler;) p n
(63) # () N
(64) # () S 8 T () S
(public) K
( ReactionsPanel\(MainControler controler\) {) p n
(65) # () N
(ReactionsPanel.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T (this.controler = controler;) N
(67) # () N
(68) # () S 8 T () S 16 T (String tableCol1 = ") S
(Enzyme name) str
(";) p n
(69) # () S 8 T () S 16 T (String tableCol2 = ") S
(Reversible) str
(";) p n
(70) # () S 8 T () S 16 T (String tableCol3 = ") S
(Reaction) str
(";) p n
(71) # () N
(72) # () S 8 T () S 16 T (table = ReactionsTable.getInstance\(controler, tableCol1, tableCo) N
0 T (l2,) N
(73) # () S 8 T () S 16 T () S 24 T () S 32 T (tableCol3\);) N
(74) # () N
(75) # () S 8 T () S 16 T () S
(final) K
( TableRowSorter<TableModel> sorter = ) p
(new) K
( TableRowSorter<Tab) p n
0 T (leModel>\() N
(76) # () S 8 T () S 16 T () S 24 T () S 32 T (table.getModel\(\)\);) N
(77) # () S 8 T () S 16 T (table.setRowSorter\(sorter\);) N
(78) # () N
(79) # () S 8 T () S 16 T (buttonmodifreac.setEnabled\() S
(false) k
(\);) p n
(80) # () S 8 T () S 16 T (buttonsuppreac.setEnabled\() S
(false) k
(\);) p n
(81) # () S 8 T () S 16 T (buttonajoutreac.setEnabled\() S
(false) k
(\);) p n
(82) # () S 8 T () S 16 T (buttonadddb.setEnabled\() S
(false) k
(\);) p n
(83) # () S 8 T () S 16 T (searchField.setEnabled\() S
(false) k
(\);) p n
(84) # () N
(85) # () S 8 T () S 16 T (buttonajoutreac.setToolTipText\(") S
(Add a reaction) str
("\);) p n
(86) # () S 8 T () S 16 T (buttonmodifreac.setToolTipText\(") S
(Edit) str
("\);) p n
(87) # () S 8 T () S 16 T (buttonsuppreac.setToolTipText\(") S
(Remove) str
("\);) p n
(88) # () S 8 T () S 16 T (buttonadddb.setToolTipText\(") S
(Add the reaction\(s\) to the data base) str
("\);) p n
(89) # () N
(90) # () S 8 T () S 16 T (buttonsuppreac.addActionListener\() S
(new) K
( DelReacListener\(controler, ) p
() k n
0 T (this) S
(\)\);) p n
(91) # () S 8 T () S 16 T (buttonajoutreac.addActionListener\() S
(new) K
( AddReacListener\(controler\)) p n
0 T (\);) N
(92) # () S 8 T () S 16 T (buttonmodifreac) N
(93) # () S 8 T () S 16 T () S 24 T () S 32 T (.addActionListener\() S
(new) K
( EditReacListener\(controle) p n
0 T (r, ) S
(this) k
(\)\);) p n
(94) # () S 8 T () S 16 T (buttonadddb.addActionListener\() S
(new) K
( AddDbListener\(controler,) p
(this) k
(\)\)) p n
0 T (;) N
(95) # () N
(96) # () S 8 T () S 16 T (table.getSelectionModel\(\)) N
(97) # () S 8 T () S 16 T () S 24 T () S 32 T (.addListSelectionListener\() N
(98) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(new) K
( ReactionsTableSelectionListe) p n
0 T (ner\() S
(this) k
(, tableCol2,) p n
(99) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (controler\)\);) N
(100) # () S 8 T () S 16 T (table.getDefaultEditor\(Boolean.class\).addCellEditorListener\() N
(101) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( ReactionsTableCellEditorListener\(controler, ) p
() k n
0 T (this) S
(\)\);) p n
(102) # () N
(103) # () S 8 T () S 16 T (controler.addObserver\() S
(this) k
(\);) p n
(104) # () S 8 T () S 16 T (JToolBar toolbarreaction = ) S
(new) K
( JToolBar\(\);) p n
(105) # () S 8 T () S 16 T (toolbarreaction.setFloatable\() S
(false) k
(\);) p n
(106) # () S 8 T () S 16 T (toolbarreaction.setLayout\() S
(new) K
( BoxLayout\(toolbarreaction,) p n
(107) # () S 8 T () S 16 T () S 24 T () S 32 T (BoxLayout.LINE_AXIS\)\);) N
(108) # () S 8 T () S 16 T (toolbarreaction.add\(buttonajoutreac\);) N
(109) # () S 8 T () S 16 T (toolbarreaction.add\(buttonmodifreac\);) N
(110) # () S 8 T () S 16 T (toolbarreaction.add\(buttonsuppreac\);) N
(111) # () S 8 T () S 16 T (toolbarreaction.add\(buttonadddb\);) N
(112) # () N
(113) # () S 8 T () S 16 T (searchField.setMaximumSize\() S
(new) K
( Dimension\(20, 30\)\);) p n
(114) # () S 8 T () S 16 T (toolbarreaction.add\(Box.createHorizontalGlue\(\)\);) N
(115) # () S 8 T () S 16 T (toolbarreaction.add\(searchField\);) N
(116) # () S 8 T () S 16 T (toolbarreaction.add\() S
(new) K
( JLabel\(Var.iconsearch\)\);) p n
(117) # () N
(118) # () S 8 T () S 16 T (setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(119) # () S 8 T () S 16 T (add\(toolbarreaction, BorderLayout.PAGE_START\);) N
(120) # () N
(121) # () S 8 T () S 16 T () S
(// call the class which manage reaction's display) c n
(122) # () S
() p 8 T () S 16 T (add\() S
(new) K
( JScrollPane\(table\), BorderLayout.CENTER\);) p n
(123) # () N
(ReactionsPanel.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ReactionsPanel.java) (85/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 86
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(124) # () p 8 T () S 16 T (searchField.getDocument\(\).addDocumentListener\() N
(125) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( MyDocumentListener\(searchField, sorter,0,2\)\)) p n
0 T (;) N
(126) # () S 8 T () S 16 T () N
(127) # () S 8 T () S 16 T () S
(//key delete listener) c n
(128) # () S
() p 8 T () S 16 T (table.addKeyListener\() S
(new) K
( DelReacListener\(controler, ) p
(this) k
(\)\);) p n
(129) # () N
(130) # () S 8 T (}) N
(131) # () N
(132) # () S 8 T () S
(public) K
( ReactionsTable getTable\(\) {) p n
(133) # () S 8 T () S 16 T () S
(return) K
( table;) p n
(134) # () S 8 T (}) N
(135) # () N
(136) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(Observable arg0, Object arg1\) {) p n
(137) # () N
(138) # () S 8 T () S 16 T (table.update\(\);) N
(139) # () S 8 T () S 16 T (buttonajoutreac.setEnabled\(controler.hasLoadedProject\(\)\);) N
(140) # () S 8 T () S 16 T (searchField.setEnabled\(controler.hasLoadedProject\(\)\);) N
(141) # () N
(142) # () S 8 T () S 16 T () S
(// Buttons are clickables only if a row is selected) c n
(143) # () S
() p 8 T () S 16 T (buttonmodifreac.setEnabled\(table.getSelectedRowCount\(\) > 0\);) N
(144) # () S 8 T () S 16 T (buttonsuppreac.setEnabled\(table.getSelectedRowCount\(\) > 0\);) N
(145) # () S 8 T () S 16 T (buttonadddb.setEnabled\(table.getSelectedRowCount\(\) > 0\);) N
(146) # () N
(147) # () S 8 T (}) N
(148) # () S 8 T () S
(public) K
( ) p
(void) k
( setButtons\(\) {) p n
(149) # () S 8 T () S 16 T (buttonmodifreac.setEnabled\(table.getSelectedRowCount\(\) == 1\);) N
(150) # () S 8 T () S 16 T (buttonsuppreac.setEnabled\(table.getSelectedRowCount\(\) > 0\);) N
(151) # () S 8 T () S 16 T (buttonadddb.setEnabled\(table.getSelectedRowCount\(\) > 0\);) N
(152) # () S 8 T (}) N
(153) # () N
(154) # (}) N
(ReactionsPanel.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ReactionsPanel.java) (86/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 87
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.Dimension;) p n
(22) # () N
(23) # () N
(24) # () S
(import) K
( javax.swing.JTabbedPane;) p n
(25) # () N
(26) # () N
(27) # () N
(28) # () S
(import) K
( controler.MainControler;) p n
(29) # () N
(30) # () S
(public) K
( ) p
(class) K
( ) p
(LeftPanel) L
( ) p
(extends) K
( JTabbedPane {) p n
(31) # () N
(32) # () S 8 T () S
(private) K
( MainControler controler;) p n
(33) # () N
(34) # () S 8 T () S
(public) K
( LeftPanel\(MainControler controler\) {) p n
(35) # () N
(36) # () S 8 T () S 16 T (this.controler = controler;) N
(37) # () N
(38) # () S 8 T () S 16 T (add\(") S
(Metabolites) str
(", ) p
(new) K
( MetabosPanel\(controler\)\);) p n
(39) # () S 8 T () S 16 T (setPreferredSize\() S
(new) K
( Dimension\(320, 400\)\);) p n
(40) # () N
(41) # () S 8 T (}) N
(42) # () N
(43) # (}) N
(LeftPanel.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/LeftPanel.java) (87/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 88
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Dimension;) p n
(23) # () S
(import) K
( java.awt.event.InputEvent;) p n
(24) # () S
(import) K
( java.awt.event.KeyEvent;) p n
(25) # () S
(import) K
( java.awt.event.KeyListener;) p n
(26) # () S
(import) K
( java.util.Observable;) p n
(27) # () S
(import) K
( java.util.Observer;) p n
(28) # () N
(29) # () S
(import) K
( javax.swing.Box;) p n
(30) # () S
(import) K
( javax.swing.BoxLayout;) p n
(31) # () S
(import) K
( javax.swing.ImageIcon;) p n
(32) # () S
(import) K
( javax.swing.InputMap;) p n
(33) # () S
(import) K
( javax.swing.JButton;) p n
(34) # () S
(import) K
( javax.swing.JComponent;) p n
(35) # () S
(import) K
( javax.swing.JLabel;) p n
(36) # () S
(import) K
( javax.swing.JPanel;) p n
(37) # () S
(import) K
( javax.swing.JScrollPane;) p n
(38) # () S
(import) K
( javax.swing.JTextField;) p n
(39) # () S
(import) K
( javax.swing.JToolBar;) p n
(40) # () S
(import) K
( javax.swing.KeyStroke;) p n
(41) # () S
(import) K
( javax.swing.ListSelectionModel;) p n
(42) # () S
(import) K
( javax.swing.table.TableModel;) p n
(43) # () S
(import) K
( javax.swing.table.TableRowSorter;) p n
(44) # () N
(45) # () N
(46) # () N
(47) # () S
(import) K
( controler.MainControler;) p n
(48) # () S
(import) K
( controler.MyDocumentListener;) p n
(49) # () S
(import) K
( controler.Var;) p n
(50) # () S
(import) K
( controler.metabolites.AddMetabListener;) p n
(51) # () S
(import) K
( controler.metabolites.DelMetabListener;) p n
(52) # () S
(import) K
( controler.metabolites.EditMetabListener;) p n
(53) # () S
(import) K
( controler.metabolites.MetabosTableCellEditorListener;) p n
(54) # () S
(import) K
( controler.metabolites.MetabosTableSelectionListener;) p n
(55) # () N
(56) # () S
(public) K
( ) p
(class) K
( ) p
(MetabosPanel) L
( ) p
(extends) K
( JPanel ) p
(implements) K
( Observer {) p n
(57) # () N
(58) # () S 8 T () N
(59) # () N
(60) # () S 8 T () S
(private) K
( JButton buttonajoutmet = ) p
(new) K
( JButton\(Var.iconajout\);) p n
(61) # () S 8 T () S
(private) K
( JButton buttonmodifmet = ) p
(new) K
( JButton\(Var.iconmodif\);) p n
(62) # () S 8 T () S
(private) K
( JButton buttonsuppmet = ) p
(new) K
( JButton\(Var.iconsupp\);) p n
(63) # () S 8 T () S
(private) K
( JTextField searchField = ) p
(new) K
( JTextField\(8\);) p n
(64) # () N
(65) # () S 8 T () S
(private) K
( MetabosTable table;) p n
(MetabosPanel.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p n
(67) # () S 8 T () S
(private) K
( MainControler controler;) p n
(68) # () N
(69) # () S 8 T () S
(public) K
( MetabosPanel\(MainControler controler\) {) p n
(70) # () S 8 T () S 16 T (this.controler = controler;) N
(71) # () N
(72) # () S 8 T () S 16 T (String tableCol1 = ") S
(Name) str
(";) p n
(73) # () S 8 T () S 16 T (String tableCol2 = ") S
(Internal) str
(";) p n
(74) # () S 8 T () S 16 T (String tableCol3 = ") S
(Description) str
(";) p n
(75) # () N
(76) # () S 8 T () S 16 T (table = MetabosTable.getInstance\(controler, tableCol1, tableCol2) N
0 T (,) N
(77) # () S 8 T () S 16 T () S 24 T () S 32 T (tableCol3\);) N
(78) # () N
(79) # () S 8 T () S 16 T (buttonmodifmet.setEnabled\() S
(false) k
(\);) p n
(80) # () S 8 T () S 16 T (buttonsuppmet.setEnabled\() S
(false) k
(\);) p n
(81) # () S 8 T () S 16 T (buttonajoutmet.setEnabled\() S
(false) k
(\);) p n
(82) # () S 8 T () S 16 T (searchField.setEnabled\() S
(false) k
(\);) p n
(83) # () N
(84) # () S 8 T () S 16 T (buttonajoutmet.setToolTipText\(") S
(Add a metabolite) str
("\);) p n
(85) # () S 8 T () S 16 T (buttonajoutmet.addActionListener\() S
(new) K
( AddMetabListener\(controler\)) p n
0 T (\);) N
(86) # () S 8 T () S 16 T (buttonmodifmet.setToolTipText\(") S
(Edit) str
("\);) p n
(87) # () S 8 T () S 16 T (buttonmodifmet) N
(88) # () S 8 T () S 16 T () S 24 T () S 32 T (.addActionListener\() S
(new) K
( EditMetabListener\(control) p n
0 T (er, ) S
(this) k
(\)\);) p n
(89) # () S 8 T () S 16 T (buttonsuppmet.setToolTipText\(") S
(Remove) str
("\);) p n
(90) # () S 8 T () S 16 T (buttonsuppmet.addActionListener\() S
(new) K
( DelMetabListener\(controler, ) p
() k n
0 T (this) S
(\)\);) p n
(91) # () S 8 T () S 16 T () N
(92) # () S 8 T () S 16 T () N
(93) # () N
(94) # () S 8 T () S 16 T (table.getSelectionModel\(\).addListSelectionListener\() N
(95) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( MetabosTableSelectionListener\() p
(this) k
(, tableCol) p n
0 T (2, controler\)\);) N
(96) # () S 8 T () S 16 T (table.getDefaultEditor\(Boolean.class\).addCellEditorListener\() N
(97) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( MetabosTableCellEditorListener\(controler, ) p
(th) k n
0 T (is) S
(\)\);) p n
(98) # () N
(99) # () S 8 T () S 16 T () S
(// Filter of tab rows for research) c n
(100) # () S
() p 8 T () S 16 T () S
(final) K
( TableRowSorter<TableModel> sorter = ) p
(new) K
( TableRowSorter<Tab) p n
0 T (leModel>\() N
(101) # () S 8 T () S 16 T () S 24 T () S 32 T (table.getModel\(\)\);) N
(102) # () S 8 T () S 16 T (table.setRowSorter\(sorter\);) N
(103) # () S 8 T () S 16 T () N
(104) # () S 8 T () S 16 T () S
(//key deletelistener) c n
(105) # () S
() p 8 T () S 16 T (table.addKeyListener\() S
(new) K
( DelMetabListener\(controler, ) p
(this) k
(\)\);) p n
(106) # () N
(107) # () S 8 T () S 16 T (controler.addObserver\() S
(this) k
(\);) p n
(108) # () N
(109) # () S 8 T () S 16 T (JToolBar toolbarmet = ) S
(new) K
( JToolBar\(\);) p n
(110) # () S 8 T () S 16 T (toolbarmet.setFloatable\() S
(false) k
(\);) p n
(111) # () S 8 T () S 16 T (toolbarmet.setLayout\() S
(new) K
( BoxLayout\(toolbarmet, BoxLayout.LINE_AX) p n
0 T (IS\)\);) N
(112) # () S 8 T () S 16 T (toolbarmet.add\(buttonajoutmet\);) N
(113) # () S 8 T () S 16 T (toolbarmet.add\(buttonmodifmet\);) N
(114) # () S 8 T () S 16 T (toolbarmet.add\(buttonsuppmet\);) N
(115) # () S 8 T () S 16 T (searchField.setMaximumSize\() S
(new) K
( Dimension\(20, 30\)\);) p n
(116) # () S 8 T () S 16 T (toolbarmet.add\(Box.createHorizontalGlue\(\)\);) N
(117) # () N
(118) # () S 8 T () S 16 T (toolbarmet.add\(searchField\);) N
(119) # () S 8 T () S 16 T (toolbarmet.add\() S
(new) K
( JLabel\(Var.iconsearch\)\);) p n
(120) # () N
(121) # () S 8 T () S 16 T (setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(122) # () S 8 T () S 16 T (add\(toolbarmet, BorderLayout.PAGE_START\);) N
(123) # () S 8 T () S 16 T (add\() S
(new) K
( JScrollPane\(table\), BorderLayout.CENTER\);) p n
(MetabosPanel.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/MetabosPanel.java) (88/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 89
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(124) # () p n
(125) # () S 8 T () S 16 T (searchField.getDocument\(\).addDocumentListener\() N
(126) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( MyDocumentListener\(searchField, sorter,0,2\)\)) p n
0 T (;) N
(127) # () S 8 T (}) N
(128) # () N
(129) # () S 8 T () S
(public) K
( MetabosTable getTable\(\) {) p n
(130) # () S 8 T () S 16 T () S
(return) K
( table;) p n
(131) # () S 8 T (}) N
(132) # () N
(133) # () S 8 T () S
(public) K
( ) p
(void) k
( setButtons\(\) {) p n
(134) # () S 8 T () S 16 T (buttonmodifmet.setEnabled\(table.getSelectedRowCount\(\) == 1\);) N
(135) # () S 8 T () S 16 T (buttonsuppmet.setEnabled\(table.getSelectedRowCount\(\) > 0\);) N
(136) # () S 8 T (}) N
(137) # () N
(138) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(Observable arg0, Object arg1\) {) p n
(139) # () S 8 T () S 16 T (table.update\(\);) N
(140) # () S 8 T () S 16 T (buttonajoutmet.setEnabled\(controler.hasLoadedProject\(\)\);) N
(141) # () S 8 T () S 16 T (searchField.setEnabled\(controler.hasLoadedProject\(\)\);) N
(142) # () N
(143) # () S 8 T () S 16 T () S
(// Buttons are activated only if a line is selected) c n
(144) # () S
() p 8 T () S 16 T (buttonmodifmet.setEnabled\(table.getSelectedRowCount\(\) > 0\);) N
(145) # () S 8 T () S 16 T (buttonsuppmet.setEnabled\(table.getSelectedRowCount\(\) > 0\);) N
(146) # () S 8 T (}) N
(147) # () N
(148) # (}) N
(MetabosPanel.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/MetabosPanel.java) (89/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 90
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.event.KeyEvent;) p n
(22) # () S
(import) K
( java.awt.event.KeyListener;) p n
(23) # () S
(import) K
( java.util.List;) p n
(24) # () S
(import) K
( javax.swing.JTable;) p n
(25) # () S
(import) K
( javax.swing.table.DefaultTableModel;) p n
(26) # () S
(import) K
( javax.swing.table.TableColumn;) p n
(27) # () N
(28) # () S
(import) K
( controler.MainControler;) p n
(29) # () N
(30) # () S
(public) K
( ) p
(class) K
( ) p
(MetabosTable) L
( ) p
(extends) K
( JTable {) p n
(31) # () N
(32) # () S 8 T () S
(private) K
( ) p
(static) K
( ) p
(final) K
( ) p
(long) k
( serialVersionUID = 1L;) p n
(33) # () S 8 T () S
(private) K
( ) p
(static) K
( MetabosTable instance = ) p
(null) k
(;) p n
(34) # () S 8 T () S
(private) K
( MainControler controler;) p n
(35) # () S 8 T () S
(private) K
( String col1;) p n
(36) # () S 8 T () S
(private) K
( String col2;) p n
(37) # () S 8 T () S
(private) K
( String col3;) p n
(38) # () N
(39) # () S 8 T () S
(private) K
( MetabosTable\(MainControler controler, String c1, String c2,) p n
(40) # () S 8 T () S 16 T () S 24 T (String c3\) {) N
(41) # () N
(42) # () S 8 T () S 16 T () S
(super) K
(\(0, 3\);) p n
(43) # () S 8 T () S 16 T (this.col1 = c1;) N
(44) # () S 8 T () S 16 T (this.col2 = c2;) N
(45) # () S 8 T () S 16 T (this.col3 = c3;) N
(46) # () N
(47) # () S 8 T () S 16 T (MyTableModel model = ) S
(new) K
( MyTableModel\(\);) p n
(48) # () N
(49) # () S 8 T () S 16 T (this.setModel\(model\);) N
(50) # () S 8 T () S 16 T (model.addColumn\(col1\);) N
(51) # () S 8 T () S 16 T (model.addColumn\(col2\);) N
(52) # () S 8 T () S 16 T (model.addColumn\(col3\);) N
(53) # () N
(54) # () S 8 T () S 16 T (TableColumn column = getColumnModel\(\).getColumn\(1\);) N
(55) # () S 8 T () S 16 T (column.setPreferredWidth\(90\);) N
(56) # () S 8 T () S 16 T (column.setMaxWidth\(90\);) N
(57) # () N
(58) # () S 8 T () S 16 T (setAutoCreateRowSorter\() S
(true) k
(\);) p n
(59) # () S 8 T () S 16 T () N
(60) # () N
(61) # () N
(62) # () S 8 T () S 16 T (this.controler = controler;) N
(63) # () N
(64) # () S 8 T (}) N
(65) # () N
(MetabosTable.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S
(// Display checkbox in tables) c n
(67) # () S
() p 8 T () S
(class) K
( ) p
(MyTableModel) L
( ) p
(extends) K
( DefaultTableModel {) p n
(68) # () S 8 T () S 16 T () S
(public) K
( Class getColumnClass\() p
(int) k
( c\) {) p n
(69) # () S 8 T () S 16 T () S 24 T () S
(return) K
( getValueAt\(0, c\).getClass\(\);) p n
(70) # () S 8 T () S 16 T (}) N
(71) # () N
(72) # () S 8 T () S 16 T () S
(public) K
( ) p
(boolean) k
( isCellEditable\() p
(int) k
( iRowIndex, ) p
(int) k
( iColumnIndex\) {) p n
(73) # () N
(74) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(getColumnName\(iColumnIndex\) == col2\) {) p n
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(true) k
(;) p n
(76) # () S 8 T () S 16 T () S 24 T (}) N
(77) # () N
(78) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(79) # () S 8 T () S 16 T (}) N
(80) # () S 8 T (}) N
(81) # () N
(82) # () S 8 T () S
(public) K
( ) p
(static) K
( MetabosTable getInstance\(MainControler controler, String c) p n
0 T (1,) N
(83) # () S 8 T () S 16 T () S 24 T (String c2, String c3\) {) N
(84) # () S 8 T () S 16 T () S
(if) K
( \(instance == ) p
(null) k
(\) {) p n
(85) # () S 8 T () S 16 T () S 24 T () S
(return) K
( instance = ) p
(new) K
( MetabosTable\(controler, c1, c2, c3) p n
0 T (\);) N
(86) # () S 8 T () S 16 T (}) N
(87) # () S 8 T () S 16 T () S
(return) K
( instance;) p n
(88) # () S 8 T (}) N
(89) # () N
(90) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
(91) # () S 8 T () S 16 T () S
(// Lines are deleted and reloaded) c n
(92) # () S
() p 8 T () S 16 T () S
(while) K
( \(getModel\(\).getRowCount\(\) > 0\) {) p n
(93) # () S 8 T () S 16 T () S 24 T (\(\(MyTableModel\) this.getModel\(\)\).removeRow\(0\);) N
(94) # () S 8 T () S 16 T (}) N
(95) # () N
(96) # () S 8 T () S 16 T () S
(// controller gives the states of metabolites) c n
(97) # () S
() p 8 T () S 16 T (List<Object[]> listeMetab = controler.getMetabos\(\);) N
(98) # () N
(99) # () S 8 T () S 16 T () S
(for) K
( \(Object[] metab : listeMetab\) {) p n
(100) # () S 8 T () S 16 T () S 24 T (\(\(MyTableModel\) this.getModel\(\)\).addRow\(metab\);) N
(101) # () S 8 T () S 16 T (}) N
(102) # () N
(103) # () S 8 T (}) N
(104) # () N
(105) # (}) N
(MetabosTable.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/MetabosTable.java) (90/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 91
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(23) # () S
(import) K
( java.awt.event.ActionListener;) p n
(24) # () S
(import) K
( java.io.File;) p n
(25) # () N
(26) # () S
(import) K
( javax.swing.JButton;) p n
(27) # () S
(import) K
( javax.swing.JFileChooser;) p n
(28) # () S
(import) K
( javax.swing.JFrame;) p n
(29) # () S
(import) K
( javax.swing.JLabel;) p n
(30) # () S
(import) K
( javax.swing.JOptionPane;) p n
(31) # () S
(import) K
( javax.swing.JPanel;) p n
(32) # () S
(import) K
( javax.swing.JTextField;) p n
(33) # () N
(34) # () S
(public) K
( ) p
(class) K
( ) p
(NewProjectFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(35) # () N
(36) # () S 8 T () S
(private) K
( JTextField nameField;) p n
(37) # () S 8 T () S
(private) K
( JTextField pathField;) p n
(38) # () N
(39) # () S 8 T () S
(public) K
( NewProjectFrame\(JFrame generalFrame\) {) p n
(40) # () N
(41) # () S 8 T () S 16 T () S
(super) K
(\(generalFrame\);) p n
(42) # () S 8 T () S 16 T (okPressed = ) S
(false) k
(;) p n
(43) # () N
(44) # () S 8 T () S 16 T (JPanel centerPanel = ) S
(new) K
( JPanel\(\);) p n
(45) # () N
(46) # () S 8 T () S 16 T (setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(47) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(Project name:) str
("\)\);) p n
(48) # () S 8 T () S 16 T (nameField = ) S
(new) K
( JTextField\(10\);) p n
(49) # () S 8 T () S 16 T (pathField = ) S
(new) K
( JTextField\(System.getProperty\(") p
(user.home) str
("\)\);) p n
(50) # () S 8 T () S 16 T (centerPanel.add\(nameField\);) N
(51) # () N
(52) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(Save directory:) str
("\)\);) p n
(53) # () S 8 T () S 16 T (centerPanel.add\(pathField\);) N
(54) # () N
(55) # () S 8 T () S 16 T (JButton chooser = ) S
(new) K
( JButton\(") p
(choose directory) str
("\);) p n
(56) # () S 8 T () S 16 T (chooser.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(57) # () N
(58) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(59) # () S 8 T () S 16 T () S 24 T () S 32 T (JFileChooser fc = ) S
(new) K
( JFileChooser\(\);) p n
(60) # () S 8 T () S 16 T () S 24 T () S 32 T (fc.setFileSelectionMode\(JFileChooser.DIRECTORIES) N
0 T (_ONLY\);) N
(61) # () N
(62) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( returnVal = fc.showOpenDialog\() p
(null) k
(\);) p n
(63) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(returnVal == JFileChooser.APPROVE_OPTION\) {) p n
(64) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (File file = fc.getSelectedFile\(\);) N
(NewProjectFrame.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (pathField.setText\(file.getAbsolutePath\(\)) N
0 T (\);) N
(66) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(67) # () N
(68) # () S 8 T () S 16 T () S 24 T (}) N
(69) # () S 8 T () S 16 T (}\);) N
(70) # () N
(71) # () S 8 T () S 16 T (centerPanel.add\(chooser\);) N
(72) # () S 8 T () S 16 T (JButton okButton = ) S
(new) K
( JButton\(") p
(ok) str
("\);) p n
(73) # () S 8 T () S 16 T (JButton cancelButton = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(74) # () S 8 T () S 16 T (cancelButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(75) # () N
(76) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(77) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(78) # () S 8 T () S 16 T () S 24 T (}) N
(79) # () S 8 T () S 16 T (}\);) N
(80) # () N
(81) # () S 8 T () S 16 T (okButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(82) # () N
(83) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(84) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(85) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(86) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(87) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(88) # () S 8 T () S 16 T () S 24 T (}) N
(89) # () S 8 T () S 16 T (}\);) N
(90) # () N
(91) # () S 8 T () S 16 T (JPanel bottomPanel = ) S
(new) K
( JPanel\(\);) p n
(92) # () S 8 T () S 16 T (bottomPanel.add\(okButton\);) N
(93) # () S 8 T () S 16 T (bottomPanel.add\(cancelButton\);) N
(94) # () N
(95) # () S 8 T () S 16 T (add\(centerPanel, BorderLayout.CENTER\);) N
(96) # () S 8 T () S 16 T (add\(bottomPanel, BorderLayout.PAGE_END\);) N
(97) # () N
(98) # () S 8 T () S 16 T (this.setDefaultCloseOperation\(JFrame.DISPOSE_ON_CLOSE\);) N
(99) # () N
(100) # () S 8 T () S 16 T (this.setTitle\(") S
(New project) str
("\);) p n
(101) # () S 8 T () S 16 T (this.pack\(\);) N
(102) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(103) # () S 8 T () S 16 T (this.setVisible\() S
(true) k
(\);) p n
(104) # () N
(105) # () S 8 T (}) N
(106) # () N
(107) # () S 8 T () S
(public) K
( String getName\(\) {) p n
(108) # () S 8 T () S 16 T () S
(return) K
( nameField.getText\(\);) p n
(109) # () S 8 T (}) N
(110) # () N
(111) # () S 8 T () S
(public) K
( String getPath\(\) {) p n
(112) # () S 8 T () S 16 T () S
(return) K
( pathField.getText\(\);) p n
(113) # () S 8 T (}) N
(114) # () N
(115) # () S 8 T () S
(public) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(116) # () N
(117) # () S 8 T () S 16 T (File f = ) S
(new) K
( File\(pathField.getText\(\)\);) p n
(118) # () N
(119) # () S 8 T () S 16 T () S
(if) K
( \(nameField.getText\(\).length\(\) == 0\) {) p n
(120) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Project name is empty) str
(",) p n
(121) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Error) str
(", JOptionPane.ERROR_MESSAGE\);) p n
(122) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(123) # () S 8 T () S 16 T (}) N
(124) # () N
(125) # () S 8 T () S 16 T () S
(if) K
( \(!f.isDirectory\(\)\) {) p n
(126) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(127) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(You must give an existing directory) str
(", ") p
(Error) str
(",) p n
(128) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(129) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(NewProjectFrame.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/NewProjectFrame.java) (91/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 92
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(130) # () p 8 T () S 16 T (}) N
(131) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(132) # () S 8 T (}) N
(133) # () N
(134) # (}) N
(NewProjectFrame.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/NewProjectFrame.java) (92/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 93
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.Dimension;) p n
(22) # () S
(import) K
( java.awt.FlowLayout;) p n
(23) # () S
(import) K
( java.awt.GridLayout;) p n
(24) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(25) # () S
(import) K
( java.awt.event.ActionListener;) p n
(26) # () S
(import) K
( java.awt.event.KeyEvent;) p n
(27) # () S
(import) K
( java.awt.event.KeyListener;) p n
(28) # () S
(import) K
( java.util.HashMap;) p n
(29) # () S
(import) K
( java.util.List;) p n
(30) # () S
(import) K
( java.util.Map;) p n
(31) # () N
(32) # () N
(33) # () S
(import) K
( javax.swing.BoxLayout;) p n
(34) # () S
(import) K
( javax.swing.DefaultListModel;) p n
(35) # () S
(import) K
( javax.swing.JButton;) p n
(36) # () S
(import) K
( javax.swing.JCheckBox;) p n
(37) # () S
(import) K
( javax.swing.JFrame;) p n
(38) # () S
(import) K
( javax.swing.JLabel;) p n
(39) # () S
(import) K
( javax.swing.JList;) p n
(40) # () S
(import) K
( javax.swing.JOptionPane;) p n
(41) # () S
(import) K
( javax.swing.JPanel;) p n
(42) # () S
(import) K
( javax.swing.JScrollPane;) p n
(43) # () S
(import) K
( javax.swing.JSeparator;) p n
(44) # () S
(import) K
( javax.swing.JTable;) p n
(45) # () S
(import) K
( javax.swing.JTextField;) p n
(46) # () S
(import) K
( javax.swing.JToolBar;) p n
(47) # () S
(import) K
( javax.swing.ListSelectionModel;) p n
(48) # () S
(import) K
( javax.swing.table.DefaultTableModel;) p n
(49) # () N
(50) # () S
(import) K
( controler.MainControler;) p n
(51) # () S
(import) K
( controler.Var;) p n
(52) # () S
(import) K
( controler.reactions.AddMetaboliteReactionListener;) p n
(53) # () S
(import) K
( controler.reactions.RemoveMetaboliteReactionListener;) p n
(54) # () N
(55) # () S
(import) K
( model.Metabolite;) p n
(56) # () N
(57) # () S
(public) K
( ) p
(class) K
( ) p
(ReactionFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(58) # () N
(59) # () S 8 T () S
(private) K
( MainControler controler;) p n
(60) # () S 8 T () S
(private) K
( JTextField stochiometry, name;) p n
(61) # () S 8 T () S
(private) K
( JCheckBox reversible;) p n
(62) # () S 8 T () S
(private) K
( JList metabolites;) p n
(63) # () S 8 T () S
(private) K
( JTable tableReactant, tableProduct;) p n
(64) # () S 8 T () S
(private) K
( JButton okButton, cancelButton;) p n
(65) # () S 8 T (DefaultTableModel ModelR, ModelP;) N
(ReactionFrame.java) (Page 1/7) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S
(private) K
( String enzName;) p n
(67) # () N
(68) # () S 8 T () S
(public) K
( ReactionFrame\(JFrame parent, MainControler controler,) p n
(69) # () S 8 T () S 16 T () S 24 T (String enzName, ) S
(boolean) k
( isReversible\) {) p n
(70) # () S 8 T () S 16 T () S
(super) K
(\(parent\);) p n
(71) # () N
(72) # () S 8 T () S 16 T (this.controler = controler;) N
(73) # () S 8 T () S 16 T (this.enzName = enzName;) N
(74) # () S 8 T () S 16 T (setTitle\(") S
(Reaction) str
("\);) p n
(75) # () N
(76) # () S 8 T () S 16 T (Dimension d = ) S
(new) K
( Dimension\(200, 200\);) p n
(77) # () N
(78) # () S 8 T () S 16 T () S
(// columns names) c n
(79) # () S
() p 8 T () S 16 T (String col1 = ") S
(Name) str
(";) p n
(80) # () S 8 T () S 16 T (String col2 = ") S
(Stoichiometry) str
(";) p n
(81) # () N
(82) # () S 8 T () S 16 T () S
(// enzyme name and reversible) c n
(83) # () S
() p 8 T () S 16 T (name = ) S
(new) K
( JTextField\(\);) p n
(84) # () S 8 T () S 16 T (reversible = ) S
(new) K
( JCheckBox\(\);) p n
(85) # () N
(86) # () S 8 T () S 16 T (setLayout\() S
(new) K
( BoxLayout\(this.getContentPane\(\), BoxLayout.PAGE_AX) p n
0 T (IS\)\);) N
(87) # () S 8 T () S 16 T (JPanel panelNorth = ) S
(new) K
( JPanel\(\);) p n
(88) # () S 8 T () S 16 T (JPanel panelSouth = ) S
(new) K
( JPanel\(\);) p n
(89) # () S 8 T () S 16 T (JPanel panelReactant = ) S
(new) K
( JPanel\(\);) p n
(90) # () S 8 T () S 16 T (JPanel panelProduct = ) S
(new) K
( JPanel\(\);) p n
(91) # () N
(92) # () S 8 T () S 16 T (panelNorth.setLayout\() S
(new) K
( GridLayout\(2, 2\)\);) p n
(93) # () N
(94) # () S 8 T () S 16 T (panelNorth.add\() S
(new) K
( JLabel\(") p
(Enzyme name) str
(", JLabel.CENTER\)\);) p n
(95) # () S 8 T () S 16 T (panelNorth.add\(name\);) N
(96) # () S 8 T () S 16 T (panelNorth.add\() S
(new) K
( JLabel\(") p
(Reversible) str
(", JLabel.CENTER\)\);) p n
(97) # () S 8 T () S 16 T (panelNorth.add\(reversible\);) N
(98) # () N
(99) # () S 8 T () S 16 T () S
(// Boutons ok cancel) c n
(100) # () S
() p 8 T () S 16 T (panelSouth.setLayout\() S
(new) K
( FlowLayout\(\)\);) p n
(101) # () N
(102) # () S 8 T () S 16 T (okButton = ) S
(new) K
( JButton\(") p
(ok) str
("\);) p n
(103) # () S 8 T () S 16 T (cancelButton = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(104) # () S 8 T () S 16 T (cancelButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(105) # () N
(106) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(107) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(108) # () S 8 T () S 16 T () S 24 T (}) N
(109) # () S 8 T () S 16 T (}\);) N
(110) # () N
(111) # () S 8 T () S 16 T (okButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(112) # () N
(113) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(114) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(115) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(116) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(117) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(name.getText\(\).equals\(""\)\) {) p n
(118) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Inva) str n
0 T (lid name.) S
(", ") p
( ) str
(",) p n
(119) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (JOptionPane.ERROR_MESSAG) N
0 T (E\);) N
(120) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
(121) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(122) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (") S
(Invalid stoichiometry) str
(", ") p
( ) str
(",) p n
(123) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (JOptionPane.ERROR_MESSAG) N
0 T (E\);) N
(124) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(125) # () S 8 T () S 16 T () S 24 T (}) N
(126) # () S 8 T () S 16 T (}\);) N
(127) # () N
(ReactionFrame.java) (Page 2/7) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/ReactionFrame.java) (93/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 94
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(128) # () p 8 T () S 16 T (panelSouth.add\(okButton\);) N
(129) # () S 8 T () S 16 T (panelSouth.add\(cancelButton\);) N
(130) # () N
(131) # () S 8 T () S 16 T () S
(// Reactants) c n
(132) # () S
() p 8 T () S 16 T (panelReactant.setLayout\() S
(new) K
( BoxLayout\(panelReactant,) p n
(133) # () S 8 T () S 16 T () S 24 T () S 32 T (BoxLayout.PAGE_AXIS\)\);) N
(134) # () N
(135) # () S 8 T () S 16 T (JToolBar toolbarR = ) S
(new) K
( JToolBar\(\);) p n
(136) # () N
(137) # () S 8 T () S 16 T (JButton buttonSuppR = ) S
(new) K
( JButton\(Var.iconsupp\);) p n
(138) # () S 8 T () S 16 T (buttonSuppR.addActionListener\() S
(new) K
( RemoveMetaboliteReactionListen) p n
0 T (er\() N
(139) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(this) k
(, ") p
(reactant) str
("\)\);) p n
(140) # () N
(141) # () S 8 T () S 16 T (toolbarR.add\(buttonSuppR\);) N
(142) # () S 8 T () S 16 T (toolbarR.setFloatable\() S
(false) k
(\);) p n
(143) # () N
(144) # () S 8 T () S 16 T (MyTableModel modelR = ) S
(new) K
( MyTableModel\(\);) p n
(145) # () N
(146) # () S 8 T () S 16 T (tableReactant = ) S
(new) K
( JTable\(\);) p n
(147) # () S 8 T () S 16 T (tableReactant.setModel\(modelR\);) N
(148) # () S 8 T () S 16 T (tableReactant.setPreferredScrollableViewportSize\(d\);) N
(149) # () S 8 T () S 16 T (modelR.addColumn\(col1\);) N
(150) # () S 8 T () S 16 T (modelR.addColumn\(col2\);) N
(151) # () N
(152) # () S 8 T () S 16 T (panelReactant.add\() S
(new) K
( JLabel\(") p
(<html><b>Reactants</b></html>) str
("\)\);) p n
(153) # () S 8 T () S 16 T (panelReactant.add\(toolbarR\);) N
(154) # () S 8 T () S 16 T (panelReactant.add\() S
(new) K
( JScrollPane\(tableReactant\)\);) p n
(155) # () N
(156) # () S 8 T () S 16 T () S
(// Products) c n
(157) # () S
() p 8 T () S 16 T (panelProduct) N
(158) # () S 8 T () S 16 T () S 24 T () S 32 T (.setLayout\() S
(new) K
( BoxLayout\(panelProduct, BoxLayout) p n
0 T (.PAGE_AXIS\)\);) N
(159) # () N
(160) # () S 8 T () S 16 T (JToolBar toolbarP = ) S
(new) K
( JToolBar\(\);) p n
(161) # () N
(162) # () S 8 T () S 16 T (JButton buttonSuppP = ) S
(new) K
( JButton\(Var.iconsupp\);) p n
(163) # () S 8 T () S 16 T (buttonSuppP.addActionListener\() S
(new) K
( RemoveMetaboliteReactionListen) p n
0 T (er\() N
(164) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(this) k
(, ") p
(product) str
("\)\);) p n
(165) # () N
(166) # () S 8 T () S 16 T (toolbarP.add\(buttonSuppP\);) N
(167) # () S 8 T () S 16 T (toolbarP.setFloatable\() S
(false) k
(\);) p n
(168) # () N
(169) # () S 8 T () S 16 T (MyTableModel modelP = ) S
(new) K
( MyTableModel\(\);) p n
(170) # () S 8 T () S 16 T (tableProduct = ) S
(new) K
( JTable\(\);) p n
(171) # () S 8 T () S 16 T (tableProduct.setModel\(modelP\);) N
(172) # () S 8 T () S 16 T (tableProduct.setPreferredScrollableViewportSize\(d\);) N
(173) # () N
(174) # () S 8 T () S 16 T (modelP.addColumn\(col1\);) N
(175) # () S 8 T () S 16 T (modelP.addColumn\(col2\);) N
(176) # () N
(177) # () S 8 T () S 16 T (panelProduct.add\() S
(new) K
( JLabel\(") p
(<html><b>Products</b></html>) str
("\)\);) p n
(178) # () S 8 T () S 16 T (panelProduct.add\(toolbarP\);) N
(179) # () S 8 T () S 16 T (panelProduct.add\() S
(new) K
( JScrollPane\(tableProduct\)\);) p n
(180) # () N
(181) # () S 8 T () S 16 T (JButton buttonRight = ) S
(new) K
( JButton\(Var.iconright\);) p n
(182) # () S 8 T () S 16 T (JButton buttonLeft = ) S
(new) K
( JButton\(Var.iconleft\);) p n
(183) # () S 8 T () S 16 T (buttonLeft.addActionListener\() S
(new) K
( AddMetaboliteReactionListener\() p
(t) k n
0 T (his) S
(,) p n
(184) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(reactant) str
("\)\);) p n
(185) # () S 8 T () S 16 T (buttonRight.addActionListener\() S
(new) K
( AddMetaboliteReactionListener\() p
() k n
0 T (this) S
(,) p n
(186) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(product) str
("\)\);) p n
(187) # () N
(188) # () S 8 T () S 16 T () S
(//) c n
(ReactionFrame.java) (Page 3/7) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(189) # () p n
(190) # () S 8 T () S 16 T () S
(// Jlist metabo) c n
(191) # () S
() p 8 T () S 16 T (DefaultListModel ListModel = ) S
(new) K
( DefaultListModel\(\);) p n
(192) # () N
(193) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite m : controler.getListMetabos\(\)\) {) p n
(194) # () S 8 T () S 16 T () S 24 T (ListModel.addElement\(m\);) N
(195) # () S 8 T () S 16 T (}) N
(196) # () N
(197) # () S 8 T () S 16 T (metabolites = ) S
(new) K
( JList\(ListModel\);) p n
(198) # () S 8 T () S 16 T (metabolites.setSelectedIndex\(0\);) N
(199) # () S 8 T () S 16 T (metabolites.setSelectionMode\(ListSelectionModel.SINGLE_SELECTION) N
0 T (\);) N
(200) # () S 8 T () S 16 T (stochiometry = ) S
(new) K
( JTextField\(3\);) p n
(201) # () N
(202) # () S 8 T () S 16 T (JPanel panelMetabo = ) S
(new) K
( JPanel\(\);) p n
(203) # () S 8 T () S 16 T (panelMetabo.setLayout\() S
(new) K
( BoxLayout\(panelMetabo, BoxLayout.PAGE_) p n
0 T (AXIS\)\);) N
(204) # () S 8 T () S 16 T (panelMetabo.add\() S
(new) K
( JScrollPane\(metabolites\)\);) p n
(205) # () S 8 T () S 16 T (panelMetabo.add\() S
(new) K
( JLabel\(") p
(Stochiometry) str
("\)\);) p n
(206) # () S 8 T () S 16 T (panelMetabo.add\(stochiometry\);) N
(207) # () N
(208) # () S 8 T () S 16 T (JPanel panelReaction = ) S
(new) K
( JPanel\(\);) p n
(209) # () N
(210) # () S 8 T () S 16 T (panelReaction.setLayout\() S
(new) K
( FlowLayout\(\)\);) p n
(211) # () S 8 T () S 16 T (panelReaction.add\(panelReactant\);) N
(212) # () S 8 T () S 16 T (panelReaction.add\(buttonLeft\);) N
(213) # () S 8 T () S 16 T (panelReaction.add\(panelMetabo\);) N
(214) # () S 8 T () S 16 T (panelReaction.add\(buttonRight\);) N
(215) # () S 8 T () S 16 T (panelReaction.add\(panelProduct\);) N
(216) # () N
(217) # () S 8 T () S 16 T (add\(panelNorth\);) N
(218) # () S 8 T () S 16 T (add\() S
(new) K
( JSeparator\(\)\);) p n
(219) # () S 8 T () S 16 T (add\(panelReaction\);) N
(220) # () S 8 T () S 16 T (add\() S
(new) K
( JSeparator\(\)\);) p n
(221) # () S 8 T () S 16 T (add\(panelSouth\);) N
(222) # () N
(223) # () S 8 T () S 16 T (tableProduct.addKeyListener\() S
(new) K
( KeyListener\(\) {) p n
(224) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyPressed\(KeyEvent e\) {) p n
(225) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(e.getKeyCode\(\) == 127 && tableProduct.hasFoc) p n
0 T (us\(\)\) {) N
(226) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (delProduct\(\);) N
(227) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(228) # () S 8 T () S 16 T () S 24 T (}) N
(229) # () N
(230) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyReleased\(KeyEvent e\) {) p n
(231) # () S 8 T () S 16 T () S 24 T (}) N
(232) # () N
(233) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyTyped\(KeyEvent e\) {) p n
(234) # () S 8 T () S 16 T () S 24 T (}) N
(235) # () N
(236) # () S 8 T () S 16 T (}\);) N
(237) # () S 8 T () S 16 T () N
(238) # () S 8 T () S 16 T (tableReactant.addKeyListener\() S
(new) K
( KeyListener\(\) {) p n
(239) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyPressed\(KeyEvent e\) {) p n
(240) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(e.getKeyCode\(\)==127 && tableReactant.hasFocu) p n
0 T (s\(\)\) {) N
(241) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (delReactant\(\);) N
(242) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(243) # () S 8 T () S 16 T () S 24 T (}) N
(244) # () N
(245) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyReleased\(KeyEvent e\) {) p n
(246) # () S 8 T () S 16 T () S 24 T (}) N
(247) # () N
(248) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( keyTyped\(KeyEvent e\) {) p n
(249) # () S 8 T () S 16 T () S 24 T (}) N
(250) # () N
(ReactionFrame.java) (Page 4/7) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/ReactionFrame.java) (94/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 95
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(251) # () p 8 T () S 16 T (}\);) N
(252) # () N
(253) # () S 8 T () S 16 T () S
(// edit : fields are already filled) c n
(254) # () S
() p 8 T () S 16 T () S
(if) K
( \(enzName != ) p
(null) k
(\) {) p n
(255) # () S 8 T () S 16 T () S 24 T (name.setText\(enzName\);) N
(256) # () S 8 T () S 16 T () S 24 T (reversible.setSelected\(isReversible\);) N
(257) # () S 8 T () S 16 T () S 24 T (reversible.setSelected\(controler.getReversible\(enzName\)\)) N
0 T (;) N
(258) # () S 8 T () S 16 T () S 24 T (List<Object[]> listeReactant = controler.getReactants\(en) N
0 T (zName\);) N
(259) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Object[] r : listeReactant\) {) p n
(260) # () S 8 T () S 16 T () S 24 T () S 32 T (\(\(DefaultTableModel\) tableReactant.getModel\(\)\).a) N
0 T (ddRow\(r\);) N
(261) # () S 8 T () S 16 T () S 24 T (}) N
(262) # () S 8 T () S 16 T () S 24 T (List<Object[]> listeProduct = controler.getProducts\(enzN) N
0 T (ame\);) N
(263) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Object[] p : listeProduct\) {) p n
(264) # () S 8 T () S 16 T () S 24 T () S 32 T (\(\(DefaultTableModel\) tableProduct.getModel\(\)\).ad) N
0 T (dRow\(p\);) N
(265) # () S 8 T () S 16 T () S 24 T (}) N
(266) # () N
(267) # () S 8 T () S 16 T (}) N
(268) # () N
(269) # () S 8 T () S 16 T (setDefaultCloseOperation\(JFrame.DISPOSE_ON_CLOSE\);) N
(270) # () S 8 T () S 16 T (pack\(\);) N
(271) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(272) # () S 8 T () S 16 T (setVisible\() S
(true) k
(\);) p n
(273) # () S 8 T (}) N
(274) # () N
(275) # () S 8 T () S
(public) K
( String getStochiometry\(\) {) p n
(276) # () S 8 T () S 16 T () S
(if) K
( \(!stochiometry.getText\(\).equals\(""\)\) {) p n
(277) # () S 8 T () S 16 T () S 24 T () S
(return) K
( stochiometry.getText\(\);) p n
(278) # () S 8 T () S 16 T (}) N
(279) # () S 8 T () S 16 T () S
(return) K
( ") p
(1) str
(";) p n
(280) # () S 8 T (}) N
(281) # () N
(282) # () S 8 T () S
(public) K
( String getName\(\) {) p n
(283) # () S 8 T () S 16 T () S
(return) K
( name.getText\(\);) p n
(284) # () S 8 T (}) N
(285) # () N
(286) # () S 8 T () S
(public) K
( ) p
(boolean) k
( getReversible\(\) {) p n
(287) # () S 8 T () S 16 T () S
(return) K
( reversible.isSelected\(\);) p n
(288) # () S 8 T (}) N
(289) # () N
(290) # () S 8 T () S
(public) K
( Metabolite getMetabolite\(\) {) p n
(291) # () S 8 T () S 16 T () S
(return) K
( \(Metabolite\) metabolites.getSelectedValue\(\);) p n
(292) # () S 8 T (}) N
(293) # () N
(294) # () S 8 T () S
(public) K
( ) p
(void) k
( addReactant\(\) {) p n
(295) # () S 8 T () S 16 T () S
(if) K
( \(getStochiometry\(\).equals\(""\)\) {) p n
(296) # () S 8 T () S 16 T () S 24 T (\(\(DefaultTableModel\) tableReactant.getModel\(\)\).addRow\() S
(ne) K n
0 T (w) S
( Object[] {) p n
(297) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (getMetabolite\(\), ") S
(1) str
(" }\);) p n
(298) # () S 8 T () S 16 T (} ) S
(else) K
( {) p n
(299) # () S 8 T () S 16 T () S 24 T (\(\(DefaultTableModel\) tableReactant.getModel\(\)\).addRow\() S
(ne) K n
0 T (w) S
( Object[] {) p n
(300) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (getMetabolite\(\), getStochiometry\(\) }\);) N
(301) # () S 8 T () S 16 T (}) N
(302) # () S 8 T () S 16 T (setStochiometry\(\);) N
(303) # () S 8 T (}) N
(304) # () N
(305) # () S 8 T () S
(public) K
( ) p
(void) k
( addProduct\(\) {) p n
(306) # () S 8 T () S 16 T () S
(if) K
( \(getStochiometry\(\).equals\(""\)\) {) p n
(307) # () S 8 T () S 16 T () S 24 T (\(\(DefaultTableModel\) tableProduct.getModel\(\)\).addRow\() S
(new) K
() p n
0 T ( Object[] {) N
(308) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (getMetabolite\(\), ") S
(1) str
(" }\);) p n
(ReactionFrame.java) (Page 5/7) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(309) # () p 8 T () S 16 T (} ) S
(else) K
( {) p n
(310) # () S 8 T () S 16 T () S 24 T (\(\(DefaultTableModel\) tableProduct.getModel\(\)\).addRow\() S
(new) K
() p n
0 T ( Object[] {) N
(311) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (getMetabolite\(\), getStochiometry\(\) }\);) N
(312) # () S 8 T () S 16 T (}) N
(313) # () S 8 T () S 16 T (setStochiometry\(\);) N
(314) # () S 8 T (}) N
(315) # () N
(316) # () S 8 T () S
(public) K
( ) p
(void) k
( delReactant\(\) {) p n
(317) # () S 8 T () S 16 T () S
(if) K
( \(tableReactant.getSelectedRow\(\)>=0\){) p n
(318) # () S 8 T () S 16 T (\(\(DefaultTableModel\) tableReactant.getModel\(\)\).removeRow\(tableRe) N
0 T (actant) N
(319) # () S 8 T () S 16 T () S 24 T () S 32 T (.getSelectedRow\(\)\);) N
(320) # () S 8 T () S 16 T (}) N
(321) # () S 8 T (}) N
(322) # () N
(323) # () S 8 T () S
(public) K
( ) p
(void) k
( delProduct\(\) {) p n
(324) # () S 8 T () S 16 T () S
(if) K
( \(tableProduct.getSelectedRow\(\)>=0\){) p n
(325) # () S 8 T () S 16 T () S 24 T (\(\(DefaultTableModel\) tableProduct.getModel\(\)\).removeRow\() N
0 T (tableProduct) N
(326) # () S 8 T () S 16 T () S 24 T () S 32 T (.getSelectedRow\(\)\);) N
(327) # () S 8 T () S 16 T (}) N
(328) # () S 8 T (}) N
(329) # () N
(330) # () S 8 T () S
(public) K
( Map<Metabolite, Double> getReactants\(\) {) p n
(331) # () S 8 T () S 16 T (HashMap<Metabolite, Double> reactant = ) S
(new) K
( HashMap<Metabolite, D) p n
0 T (ouble>\(\);) N
(332) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < tableReactant.getModel\(\).getRowCount\(\); i++\)) p n
0 T ( {) N
(333) # () S 8 T () S 16 T () S 24 T (String s = \(String\) tableReactant.getModel\(\).getValueAt\() N
0 T (i, 1\);) N
(334) # () S 8 T () S 16 T () S 24 T (Metabolite metab = \(Metabolite\) tableReactant.getModel\(\)) N
(335) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getValueAt\(i, 0\);) N
(336) # () S 8 T () S 16 T () S 24 T (Double stochio = Double.parseDouble\(s\);) N
(337) # () S 8 T () S 16 T () S 24 T (reactant.put\(metab, stochio\);) N
(338) # () S 8 T () S 16 T (}) N
(339) # () S 8 T () S 16 T () S
(return) K
( reactant;) p n
(340) # () N
(341) # () S 8 T (}) N
(342) # () N
(343) # () S 8 T () S
(public) K
( Map<Metabolite, Double> getProducts\(\) {) p n
(344) # () S 8 T () S 16 T (HashMap<Metabolite, Double> product = ) S
(new) K
( HashMap<Metabolite, Do) p n
0 T (uble>\(\);) N
(345) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < tableProduct.getModel\(\).getRowCount\(\); i++\) ) p n
0 T ({) N
(346) # () S 8 T () S 16 T () S 24 T (String s = \(String\) tableProduct.getModel\(\).getValueAt\(i) N
0 T (, 1\);) N
(347) # () S 8 T () S 16 T () S 24 T (Metabolite metab = \(Metabolite\) tableProduct.getModel\(\).) N
0 T (getValueAt\() N
(348) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (i, 0\);) N
(349) # () S 8 T () S 16 T () S 24 T (Double stochio = Double.parseDouble\(s\);) N
(350) # () S 8 T () S 16 T () S 24 T (product.put\(metab, stochio\);) N
(351) # () S 8 T () S 16 T (}) N
(352) # () S 8 T () S 16 T () S
(return) K
( product;) p n
(353) # () N
(354) # () S 8 T (}) N
(355) # () N
(356) # () S 8 T () S
(public) K
( ) p
(void) k
( setStochiometry\(\) {) p n
(357) # () S 8 T () S 16 T (stochiometry.setText\(""\);) N
(358) # () S 8 T (}) N
(359) # () N
(360) # () S 8 T () S
(private) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(361) # () S 8 T () S 16 T () S
(if) K
( \(name.getText\(\).equals\(""\)\) {) p n
(362) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(363) # () S 8 T () S 16 T (}) N
(364) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < tableProduct.getModel\(\).getRowCount\(\); i++\) ) p n
(ReactionFrame.java) (Page 6/7) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/ReactionFrame.java) (95/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7) 96
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T ({) p n
(365) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(366) # () S 8 T () S 16 T () S 24 T () S 32 T (Double stochio = Double.parseDouble\(\(String\) tab) N
0 T (leProduct) N
(367) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getModel\(\).getValueAt\(i, 1\)\);) N
(368) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(NumberFormatException ex\) {) p n
(369) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(false) k
(;) p n
(370) # () S 8 T () S 16 T () S 24 T (}) N
(371) # () S 8 T () S 16 T (}) N
(372) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < tableReactant.getModel\(\).getRowCount\(\); i++\)) p n
0 T ( {) N
(373) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(374) # () S 8 T () S 16 T () S 24 T () S 32 T (Double stochio = Double.parseDouble\(\(String\) tab) N
0 T (leReactant) N
(375) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getModel\(\).getValueAt\(i, 1\)\);) N
(376) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(NumberFormatException ex\) {) p n
(377) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(false) k
(;) p n
(378) # () N
(379) # () S 8 T () S 16 T () S 24 T (}) N
(380) # () S 8 T () S 16 T (}) N
(381) # () N
(382) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(383) # () S 8 T (}) N
(384) # () N
(385) # () S 8 T () S
(// Stochiometry case can be modified by hand) c n
(386) # () S
() p 8 T () S
(class) K
( ) p
(MyTableModel) L
( ) p
(extends) K
( DefaultTableModel {) p n
(387) # () S 8 T () S 16 T () S
(private) K
( String[] columnNames = { ") p
(Name) str
(", ") p
(Stochiometry) str
(" };) p n
(388) # () N
(389) # () S 8 T () S 16 T () S
(public) K
( ) p
(boolean) k
( isCellEditable\() p
(int) k
( iRowIndex, ) p
(int) k
( iColumnIndex\) {) p n
(390) # () N
(391) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(iColumnIndex == 1\) {) p n
(392) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(true) k
(;) p n
(393) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
(394) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(false) k
(;) p n
(395) # () S 8 T () S 16 T () S 24 T (}) N
(396) # () N
(397) # () S 8 T () S 16 T (}) N
(398) # () N
(399) # () S 8 T (}) N
(400) # () N
(401) # (}) N
(ReactionFrame.java) (Page 7/7) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/ReactionFrame.java) (96/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 97
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.GridLayout;) p n
(22) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(23) # () S
(import) K
( java.awt.event.ActionListener;) p n
(24) # () N
(25) # () S
(import) K
( javax.swing.ButtonGroup;) p n
(26) # () S
(import) K
( javax.swing.JButton;) p n
(27) # () S
(import) K
( javax.swing.JFrame;) p n
(28) # () S
(import) K
( javax.swing.JLabel;) p n
(29) # () S
(import) K
( javax.swing.JOptionPane;) p n
(30) # () S
(import) K
( javax.swing.JRadioButton;) p n
(31) # () S
(import) K
( javax.swing.JTextField;) p n
(32) # () N
(33) # () S
(public) K
( ) p
(class) K
( ) p
(MetaboliteFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(34) # () N
(35) # () S 8 T (JTextField name, description;) N
(36) # () S 8 T (JRadioButton intern, extern;) N
(37) # () N
(38) # () S 8 T () S
(public) K
( MetaboliteFrame\(JFrame parent, ) p
(boolean) k
( internal, String metName,) p n
(39) # () S 8 T () S 16 T () S 24 T (String metDescription\) {) N
(40) # () S 8 T () S 16 T () S
(super) K
(\(parent\);) p n
(41) # () N
(42) # () S 8 T () S 16 T (setTitle\(") S
(Metabolite) str
("\);) p n
(43) # () N
(44) # () S 8 T () S 16 T (JLabel n = ) S
(new) K
( JLabel\(") p
(Name) str
(",JLabel.CENTER\);) p n
(45) # () S 8 T () S 16 T (JLabel d = ) S
(new) K
( JLabel\(") p
(Description) str
(",JLabel.CENTER\);) p n
(46) # () N
(47) # () S 8 T () S 16 T (name = ) S
(new) K
( JTextField\(15\);) p n
(48) # () S 8 T () S 16 T (description = ) S
(new) K
( JTextField\(15\);) p n
(49) # () N
(50) # () S 8 T () S 16 T (ButtonGroup bg = ) S
(new) K
( ButtonGroup\(\);) p n
(51) # () S 8 T () S 16 T (intern = ) S
(new) K
( JRadioButton\(") p
(intern) str
("\);) p n
(52) # () S 8 T () S 16 T (extern = ) S
(new) K
( JRadioButton\(") p
(extern) str
("\);) p n
(53) # () N
(54) # () S 8 T () S 16 T (JButton ok = ) S
(new) K
( JButton\(") p
(ok) str
("\);) p n
(55) # () S 8 T () S 16 T (JButton cancel = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(56) # () N
(57) # () S 8 T () S 16 T (description.setText\(metDescription\);) N
(58) # () S 8 T () S 16 T (name.setText\(metName\);) N
(59) # () N
(60) # () S 8 T () S 16 T (bg.add\(intern\);) N
(61) # () S 8 T () S 16 T (bg.add\(extern\);) N
(62) # () S 8 T () S 16 T (intern.setSelected\(internal\);) N
(63) # () S 8 T () S 16 T (extern.setSelected\(!internal\);) N
(64) # () N
(65) # () S 8 T () S 16 T (setLayout\() S
(new) K
( GridLayout\(4, 2\)\);) p n
(MetaboliteFrame.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p n
(67) # () N
(68) # () S 8 T () S 16 T (add\(n\);) N
(69) # () S 8 T () S 16 T (add\(name\);) N
(70) # () N
(71) # () S 8 T () S 16 T (add\(d\);) N
(72) # () S 8 T () S 16 T (add\(description\);) N
(73) # () N
(74) # () S 8 T () S 16 T (add\(intern\);) N
(75) # () S 8 T () S 16 T (add\(extern\);) N
(76) # () S 8 T () S 16 T () N
(77) # () S 8 T () S 16 T (add\(ok\);) N
(78) # () S 8 T () S 16 T (add\(cancel\);) N
(79) # () S 8 T () S 16 T () N
(80) # () N
(81) # () S 8 T () S 16 T (cancel.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(82) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(83) # () N
(84) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(85) # () S 8 T () S 16 T () S 24 T (}) N
(86) # () S 8 T () S 16 T (}\);) N
(87) # () S 8 T () S 16 T (ok.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(88) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(89) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(90) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(91) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(92) # () S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
(93) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(94) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (") S
(Metabolite name is not valid) str
(", ) p n
0 T (") S
(Error) str
(",) p n
(95) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (JOptionPane.ERROR_MESSAG) N
0 T (E\);) N
(96) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(97) # () S 8 T () S 16 T () S 24 T (}) N
(98) # () S 8 T () S 16 T (}\);) N
(99) # () S 8 T () S 16 T (pack\(\);) N
(100) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(101) # () S 8 T () S 16 T (setVisible\() S
(true) k
(\);) p n
(102) # () N
(103) # () S 8 T (}) N
(104) # () N
(105) # () S 8 T () S
(public) K
( String getName\(\) {) p n
(106) # () S 8 T () S 16 T () S
(return) K
( name.getText\(\);) p n
(107) # () S 8 T (}) N
(108) # () N
(109) # () S 8 T () S
(public) K
( String getDescription\(\) {) p n
(110) # () S 8 T () S 16 T () S
(return) K
( description.getText\(\);) p n
(111) # () S 8 T (}) N
(112) # () N
(113) # () S 8 T () S
(public) K
( ) p
(boolean) k
( isInternal\(\) {) p n
(114) # () S 8 T () S 16 T () S
(if) K
( \(intern.isSelected\(\)\) {) p n
(115) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(true) k
(;) p n
(116) # () S 8 T () S 16 T (}) N
(117) # () S 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
(118) # () S 8 T (}) N
(119) # () N
(120) # () S 8 T () S
(public) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(121) # () S 8 T () S 16 T () S
(if) K
( \(name.getText\(\).equals\(""\)\) {) p n
(122) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(123) # () S 8 T () S 16 T (}) N
(124) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(125) # () N
(126) # () S 8 T (}) N
(127) # (}) N
(MetaboliteFrame.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/MetaboliteFrame.java) (97/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 98
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( javax.swing.JDialog;) p n
(22) # () S
(import) K
( javax.swing.JFrame;) p n
(23) # () N
(24) # () S
(public) K
( ) p
(abstract) K
( ) p
(class) K
( ) p
(PopUpAbs) L
( ) p
(extends) K
( JDialog {) p n
(25) # () N
(26) # () S 8 T () S
(protected) K
( ) p
(boolean) k
( okPressed = ) p
(false) k
(;) p n
(27) # () N
(28) # () S 8 T () S
(public) K
( PopUpAbs\(JFrame parent\) {) p n
(29) # () S 8 T () S 16 T () S
(super) K
(\(parent, ) p
(true) k
(\);) p n
(30) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(31) # () N
(32) # () S 8 T (}) N
(33) # () N
(34) # () S 8 T () S
(public) K
( ) p
(boolean) k
( okPressed\(\) {) p n
(35) # () S 8 T () S 16 T () S
(return) K
( okPressed;) p n
(36) # () S 8 T (}) N
(37) # (}) N
(PopUpAbs.java) (Page 1/1) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/PopUpAbs.java) (98/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 99
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Dimension;) p n
(23) # () S
(import) K
( java.awt.FlowLayout;) p n
(24) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(25) # () S
(import) K
( java.awt.event.ActionListener;) p n
(26) # () S
(import) K
( java.util.ArrayList;) p n
(27) # () S
(import) K
( java.util.List;) p n
(28) # () N
(29) # () S
(import) K
( javax.swing.BoxLayout;) p n
(30) # () S
(import) K
( javax.swing.ButtonGroup;) p n
(31) # () S
(import) K
( javax.swing.JButton;) p n
(32) # () S
(import) K
( javax.swing.JFrame;) p n
(33) # () S
(import) K
( javax.swing.JLabel;) p n
(34) # () S
(import) K
( javax.swing.JOptionPane;) p n
(35) # () S
(import) K
( javax.swing.JPanel;) p n
(36) # () S
(import) K
( javax.swing.JRadioButton;) p n
(37) # () S
(import) K
( javax.swing.JScrollPane;) p n
(38) # () S
(import) K
( javax.swing.JTable;) p n
(39) # () S
(import) K
( javax.swing.table.DefaultTableModel;) p n
(40) # () N
(41) # () S
(import) K
( model.Metabolite;) p n
(42) # () S
(import) K
( model.Reaction;) p n
(43) # () N
(44) # () S
(import) K
( controler.MainControler;) p n
(45) # () N
(46) # () S
(// display boolean in ckeckboxes in tables) c n
(47) # () S
(class) K
( ) p
(MyTableModel) L
( ) p
(extends) K
( DefaultTableModel {) p n
(48) # () S 8 T () S
(public) K
( Class getColumnClass\() p
(int) k
( c\) {) p n
(49) # () S 8 T () S 16 T () S
(return) K
( getValueAt\(0, c\).getClass\(\);) p n
(50) # () S 8 T (}) N
(51) # () N
(52) # () S 8 T () S
(public) K
( ) p
(boolean) k
( isCellEditable\() p
(int) k
( iRowIndex, ) p
(int) k
( iColumnIndex\) {) p n
(53) # () N
(54) # () S 8 T () S 16 T () S
(if) K
( \(getColumnName\(iColumnIndex\) == ") p
(visible) str
("\) {) p n
(55) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(true) k
(;) p n
(56) # () S 8 T () S 16 T (}) N
(57) # () N
(58) # () S 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
(59) # () S 8 T (}) N
(60) # (}) N
(61) # () N
(62) # () S
(public) K
( ) p
(class) K
( ) p
(VisuChoiceFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(63) # () N
(64) # () S 8 T () S
(private) K
( MainControler controler;) p n
(65) # () N
(VisuChoiceFrame.java) (Page 1/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S
(private) K
( List<JRadioButton> layouts;) p n
(67) # () S 8 T () S
(private) K
( ButtonGroup bg;) p n
(68) # () S 8 T () S
(private) K
( JTable metaTable;) p n
(69) # () S 8 T () S
(private) K
( JTable reacTable;) p n
(70) # () N
(71) # () S 8 T (Dimension d = ) S
(new) K
( Dimension\(300, 300\);) p n
(72) # () N
(73) # () S 8 T () S
(public) K
( VisuChoiceFrame\(JFrame parent, MainControler controler\) {) p n
(74) # () S 8 T () S 16 T () S
(super) K
(\(parent\);) p n
(75) # () S 8 T () S 16 T (this.controler = controler;) N
(76) # () S 8 T () S 16 T (setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(77) # () N
(78) # () S 8 T () S 16 T (JPanel centerPanel = ) S
(new) K
( JPanel\(\);) p n
(79) # () N
(80) # () S 8 T () S 16 T (centerPanel.setLayout\() S
(new) K
( BoxLayout\(centerPanel, BoxLayout.PAGE_) p n
0 T (AXIS\)\);) N
(81) # () S 8 T () S 16 T (JPanel tables = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(82) # () S 8 T () S 16 T (JPanel leftTablePanel = ) S
(new) K
( JPanel\(\);) p n
(83) # () S 8 T () S 16 T (JPanel rightTablePanel = ) S
(new) K
( JPanel\(\);) p n
(84) # () S 8 T () S 16 T (leftTablePanel.setLayout\() S
(new) K
( BoxLayout\(leftTablePanel,) p n
(85) # () S 8 T () S 16 T () S 24 T () S 32 T (BoxLayout.PAGE_AXIS\)\);) N
(86) # () S 8 T () S 16 T (rightTablePanel.setLayout\() S
(new) K
( BoxLayout\(rightTablePanel,) p n
(87) # () S 8 T () S 16 T () S 24 T () S 32 T (BoxLayout.PAGE_AXIS\)\);) N
(88) # () S 8 T () S 16 T (tables.add\(leftTablePanel\);) N
(89) # () S 8 T () S 16 T (tables.add\(rightTablePanel\);) N
(90) # () S 8 T () S 16 T (centerPanel.add\(tables\);) N
(91) # () S 8 T () S 16 T (JPanel layoutPanel = ) S
(new) K
( JPanel\(\);) p n
(92) # () S 8 T () S 16 T (layoutPanel.setLayout\() S
(new) K
( BoxLayout\(layoutPanel, BoxLayout.PAGE_) p n
0 T (AXIS\)\);) N
(93) # () S 8 T () S 16 T (JPanel tulipLayoutPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(94) # () S 8 T () S 16 T (JPanel bioinfoLayoutPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(95) # () S 8 T () S 16 T (layoutPanel.add\(tulipLayoutPanel\);) N
(96) # () S 8 T () S 16 T (tulipLayoutPanel.add\() S
(new) K
( JLabel\(") p
(Tulip layouts : ) str
("\)\);) p n
(97) # () S 8 T () S 16 T (layoutPanel.add\(bioinfoLayoutPanel\);) N
(98) # () S 8 T () S 16 T (bioinfoLayoutPanel.add\() S
(new) K
( JLabel\(") p
(Bioinfo layouts : ) str
("\)\);) p n
(99) # () S 8 T () S 16 T (centerPanel.add\(layoutPanel\);) N
(100) # () N
(101) # () S 8 T () S 16 T (JPanel bottomPanel = ) S
(new) K
( JPanel\(\);) p n
(102) # () N
(103) # () S 8 T () S 16 T (leftTablePanel.add\() S
(new) K
( JLabel\(") p
(Metabolites) str
("\)\);) p n
(104) # () S 8 T () S 16 T (rightTablePanel.add\() S
(new) K
( JLabel\(") p
(Reactions) str
("\)\);) p n
(105) # () N
(106) # () S 8 T () S 16 T (MyTableModel model1 = ) S
(new) K
( MyTableModel\(\);) p n
(107) # () S 8 T () S 16 T (model1.addColumn\(") S
(name) str
("\);) p n
(108) # () S 8 T () S 16 T (model1.addColumn\(") S
(visible) str
("\);) p n
(109) # () S 8 T () S 16 T (model1.addColumn\(") S
(number of links) str
("\);) p n
(110) # () S 8 T () S 16 T (MyTableModel model2 = ) S
(new) K
( MyTableModel\(\);) p n
(111) # () S 8 T () S 16 T (model2.addColumn\(") S
(name) str
("\);) p n
(112) # () S 8 T () S 16 T (model2.addColumn\(") S
(visible) str
("\);) p n
(113) # () N
(114) # () S 8 T () S 16 T (metaTable = ) S
(new) K
( JTable\(model1\);) p n
(115) # () S 8 T () S 16 T (metaTable.setPreferredScrollableViewportSize\(d\);) N
(116) # () S 8 T () S 16 T (metaTable.setAutoCreateRowSorter\() S
(true) k
(\);) p n
(117) # () S 8 T () S 16 T (reacTable = ) S
(new) K
( JTable\(model2\);) p n
(118) # () S 8 T () S 16 T (reacTable.setPreferredScrollableViewportSize\(d\);) N
(119) # () S 8 T () S 16 T (reacTable.setAutoCreateRowSorter\() S
(true) k
(\);) p n
(120) # () S 8 T () S 16 T (leftTablePanel.add\() S
(new) K
( JScrollPane\(metaTable\)\);) p n
(121) # () S 8 T () S 16 T (rightTablePanel.add\() S
(new) K
( JScrollPane\(reacTable\)\);) p n
(122) # () N
(123) # () S 8 T () S 16 T (remplirMetTable\(controler.getListMetabos\(\)\);) N
(124) # () S 8 T () S 16 T (remplirReacTable\(controler.getListReactions\(\)\);) N
(125) # () N
(126) # () S 8 T () S 16 T (layouts = ) S
(new) K
( ArrayList<JRadioButton>\(\);) p n
(127) # () S 8 T () S 16 T () S
(// addition of tulip layouts) c n
(128) # () S
() p 8 T () S 16 T (layouts.add\() S
(new) K
( JRadioButton\(") p
(Random layout) str
("\)\);) p n
(129) # () S 8 T () S 16 T (layouts.add\() S
(new) K
( JRadioButton\(") p
(Circular) str
("\)\);) p n
(VisuChoiceFrame.java) (Page 2/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/VisuChoiceFrame.java) (99/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 100
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(130) # () p n
(131) # () S 8 T () S 16 T () S
(// this algorithm is not implemented on Windows) c n
(132) # () S
() p 8 T () S 16 T (String OS = System.getProperty\(") S
(os.name) str
("\).toLowerCase\(\);) p n
(133) # () S 8 T () S 16 T () S
(if) K
( \(!\(OS.indexOf\(") p
(win) str
("\) >= 0\)\) {) p n
(134) # () S 8 T () S 16 T () S 24 T (layouts.add\() S
(new) K
( JRadioButton\(") p
(Balloon \(OGDF\)) str
("\)\);) p n
(135) # () S 8 T () S 16 T () S 24 T (layouts.add\() S
(new) K
( JRadioButton\(") p
(GEM Frick \(OGDF\)) str
("\)\);) p n
(136) # () S 8 T () S 16 T (}) N
(137) # () S 8 T () S 16 T (bg = ) S
(new) K
( ButtonGroup\(\);) p n
(138) # () S 8 T () S 16 T () S
(for) K
( \(JRadioButton jrb : layouts\) {) p n
(139) # () S 8 T () S 16 T () S 24 T (bg.add\(jrb\);) N
(140) # () S 8 T () S 16 T () S 24 T (tulipLayoutPanel.add\(jrb\);) N
(141) # () S 8 T () S 16 T (}) N
(142) # () S 8 T () S 16 T () S
(// addition of bioinfo layouts) c n
(143) # () S
() p 8 T () S 16 T (JRadioButton linearLayout = ) S
(new) K
( JRadioButton\(") p
(Linear layout) str
("\);) p n
(144) # () S 8 T () S 16 T (layouts.add\(linearLayout\);) N
(145) # () S 8 T () S 16 T (bg.add\(linearLayout\);) N
(146) # () S 8 T () S 16 T (bioinfoLayoutPanel.add\(linearLayout\);) N
(147) # () N
(148) # () S 8 T () S 16 T (JRadioButton squareLayout = ) S
(new) K
( JRadioButton\(") p
(Square layout) str
("\);) p n
(149) # () S 8 T () S 16 T (layouts.add\(squareLayout\);) N
(150) # () S 8 T () S 16 T (bg.add\(squareLayout\);) N
(151) # () S 8 T () S 16 T (bioinfoLayoutPanel.add\(squareLayout\);) N
(152) # () N
(153) # () S 8 T () S 16 T (JButton cancelButton = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(154) # () S 8 T () S 16 T (cancelButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(155) # () N
(156) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(157) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(158) # () S 8 T () S 16 T () S 24 T (}) N
(159) # () S 8 T () S 16 T (}\);) N
(160) # () N
(161) # () S 8 T () S 16 T (JButton okButton = ) S
(new) K
( JButton\(") p
(ok) str
("\);) p n
(162) # () S 8 T () S 16 T (okButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(163) # () N
(164) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(165) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(166) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(167) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(168) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(169) # () S 8 T () S 16 T () S 24 T (}) N
(170) # () S 8 T () S 16 T (}\);) N
(171) # () N
(172) # () S 8 T () S 16 T (bottomPanel.add\(okButton\);) N
(173) # () S 8 T () S 16 T (bottomPanel.add\(cancelButton\);) N
(174) # () N
(175) # () S 8 T () S 16 T (add\(centerPanel, BorderLayout.CENTER\);) N
(176) # () S 8 T () S 16 T (add\(bottomPanel, BorderLayout.PAGE_END\);) N
(177) # () S 8 T () S 16 T (add\() S
(new) K
( JLabel\(") p
(Choose what you want to see in the visualization) str
("\),) p n
(178) # () S 8 T () S 16 T () S 24 T () S 32 T (BorderLayout.NORTH\);) N
(179) # () N
(180) # () S 8 T () S 16 T (pack\(\);) N
(181) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(182) # () S 8 T () S 16 T (setVisible\() S
(true) k
(\);) p n
(183) # () S 8 T (}) N
(184) # () N
(185) # () S 8 T () S
(public) K
( ) p
(void) k
( remplirMetTable\(List<Metabolite> list\) {) p n
(186) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite meta : list\) {) p n
(187) # () N
(188) # () S 8 T () S 16 T () S 24 T () S
(int) k
( nbLinks = 0;) p n
(189) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction reac : controler.getNetwork\(\).getReactions) p n
0 T (\(\)\) {) N
(190) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Metabolite m : reac.getListReactants\(\)\) {) p n
(191) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(meta.equals\(m\)\) {) p n
(192) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (nbLinks++;) N
(193) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(194) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(VisuChoiceFrame.java) (Page 3/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(195) # () p 8 T () S 16 T () S 24 T (}) N
(196) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(Reaction reac : controler.getNetwork\(\).getReactions) p n
0 T (\(\)\) {) N
(197) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Metabolite m : reac.getListProducts\(\)\) {) p n
(198) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(meta.equals\(m\)\) {) p n
(199) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (nbLinks++;) N
(200) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(201) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(202) # () N
(203) # () S 8 T () S 16 T () S 24 T (}) N
(204) # () N
(205) # () S 8 T () S 16 T () S 24 T (\(\(MyTableModel\) metaTable.getModel\(\)\).addRow\() S
(new) K
( Object[) p n
0 T (] {) N
(206) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (meta.getName\(\), ) S
(true) k
(, nbLinks }\);) p n
(207) # () S 8 T () S 16 T (}) N
(208) # () N
(209) # () S 8 T (}) N
(210) # () N
(211) # () S 8 T () S
(public) K
( ) p
(void) k
( remplirReacTable\(List<Reaction> list\) {) p n
(212) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : list\) {) p n
(213) # () S 8 T () S 16 T () S 24 T (\(\(MyTableModel\) reacTable.getModel\(\)\).addRow\() S
(new) K
( Object[) p n
0 T (] {) N
(214) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (reac.getName\(\), ) S
(true) k
( }\);) p n
(215) # () S 8 T () S 16 T (}) N
(216) # () N
(217) # () S 8 T (}) N
(218) # () N
(219) # () S 8 T () S
(public) K
( String getLayoutAlgorithm\(\) {) p n
(220) # () S 8 T () S 16 T () S
(for) K
( \(JRadioButton jrb : layouts\) {) p n
(221) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(jrb.isSelected\(\)\) {) p n
(222) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( jrb.getText\(\);) p n
(223) # () S 8 T () S 16 T () S 24 T (}) N
(224) # () S 8 T () S 16 T (}) N
(225) # () N
(226) # () S 8 T () S 16 T () S
(return) K
( "";) p n
(227) # () S 8 T (}) N
(228) # () N
(229) # () S 8 T () S
(public) K
( List<Metabolite> getSelectedMetabolites\(\) {) p n
(230) # () S 8 T () S 16 T (List<Metabolite> list = ) S
(new) K
( ArrayList<Metabolite>\(\);) p n
(231) # () S 8 T () S 16 T () S
(int) k
( size = metaTable.getRowCount\(\);) p n
(232) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < size; i++\) {) p n
(233) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(Boolean\) metaTable.getValueAt\(i, 1\)\) {) p n
(234) # () S 8 T () S 16 T () S 24 T () S 32 T (list.add\(controler.getNetwork\(\).getMetabolite\() N
(235) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (\(String\) metaTable.getValueAt\(i,) N
0 T ( 0\)\)\);) N
(236) # () S 8 T () S 16 T () S 24 T (}) N
(237) # () S 8 T () S 16 T (}) N
(238) # () N
(239) # () S 8 T () S 16 T () S
(return) K
( list;) p n
(240) # () N
(241) # () S 8 T (}) N
(242) # () N
(243) # () S 8 T () S
(public) K
( List<Reaction> getSelectedReactions\(\) {) p n
(244) # () S 8 T () S 16 T (List<Reaction> list = ) S
(new) K
( ArrayList<Reaction>\(\);) p n
(245) # () S 8 T () S 16 T () S
(int) k
( size = reacTable.getRowCount\(\);) p n
(246) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < size; i++\) {) p n
(247) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(Boolean\) reacTable.getValueAt\(i, 1\)\) {) p n
(248) # () S 8 T () S 16 T () S 24 T () S 32 T (list.add\(controler.getNetwork\(\).getReaction\() N
(249) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (\(String\) reacTable.getValueAt\(i,) N
0 T ( 0\)\)\);) N
(250) # () S 8 T () S 16 T () S 24 T (}) N
(251) # () S 8 T () S 16 T (}) N
(252) # () S 8 T () S 16 T () S
(return) K
( list;) p n
(253) # () N
(254) # () S 8 T (}) N
(255) # () N
(VisuChoiceFrame.java) (Page 4/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/VisuChoiceFrame.java) (100/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 101
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(256) # () p 8 T () S
(public) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(257) # () S 8 T () S 16 T () S
(if) K
( \(getSelectedReactions\(\).size\(\) == 0\) {) p n
(258) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(259) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(You must choose at least one reaction) str
(", ") p
(Error) str
(",) p n
(260) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(261) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(262) # () S 8 T () S 16 T (}) N
(263) # () S 8 T () S 16 T () S
(if) K
( \(getSelectedMetabolites\(\).size\(\) == 0\) {) p n
(264) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(265) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(You must choose at least one metabolite) str
(", ") p
(Error) str
(",) p n
(266) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(267) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(268) # () S 8 T () S 16 T (}) N
(269) # () S 8 T () S 16 T () S
(if) K
( \(getLayoutAlgorithm\(\) == ""\) {) p n
(270) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(271) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(You must choose a layout algorithm) str
(", ") p
(Error) str
(",) p n
(272) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(273) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(274) # () S 8 T () S 16 T (}) N
(275) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(276) # () S 8 T (}) N
(277) # () N
(278) # (}) N
(VisuChoiceFrame.java) (Page 5/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/VisuChoiceFrame.java) (101/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 102
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Color;) p n
(23) # () S
(import) K
( java.awt.Component;) p n
(24) # () S
(import) K
( java.awt.GridLayout;) p n
(25) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(26) # () S
(import) K
( java.awt.event.ActionListener;) p n
(27) # () S
(import) K
( java.util.HashMap;) p n
(28) # () S
(import) K
( java.util.Map;) p n
(29) # () N
(30) # () S
(import) K
( javax.swing.BorderFactory;) p n
(31) # () S
(import) K
( javax.swing.ButtonGroup;) p n
(32) # () S
(import) K
( javax.swing.JButton;) p n
(33) # () S
(import) K
( javax.swing.JComboBox;) p n
(34) # () S
(import) K
( javax.swing.JFrame;) p n
(35) # () S
(import) K
( javax.swing.JLabel;) p n
(36) # () S
(import) K
( javax.swing.JOptionPane;) p n
(37) # () S
(import) K
( javax.swing.JPanel;) p n
(38) # () S
(import) K
( javax.swing.JRadioButton;) p n
(39) # () S
(import) K
( javax.swing.JTextField;) p n
(40) # () N
(41) # () S
(public) K
( ) p
(class) K
( ) p
(LaunchRegEfmToolFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(42) # () N
(43) # () S 8 T (JRadioButton defaultAdvancedButton;) N
(44) # () S 8 T (JPanel centerPanel;) N
(45) # () N
(46) # () S 8 T () S
(// components which contains parameters) c n
(47) # () S
() p 8 T (JComboBox kind;) N
(48) # () S 8 T (JComboBox out;) N
(49) # () S 8 T (JComboBox level;) N
(50) # () S 8 T (JComboBox format;) N
(51) # () S 8 T (JComboBox comp;) N
(52) # () S 8 T (JComboBox adj;) N
(53) # () S 8 T (JTextField maxthread;) N
(54) # () S 8 T (JTextField ram;) N
(55) # () S 8 T (JComboBox arithmetic;) N
(56) # () S 8 T (JComboBox precision;) N
(57) # () S 8 T (JComboBox norm;) N
(58) # () S 8 T (ButtonGroup bg;) N
(59) # () S 8 T (JRadioButton yes;) N
(60) # () N
(61) # () S 8 T () S
(public) K
( LaunchRegEfmToolFrame\(JFrame parent\) {) p n
(62) # () S 8 T () S 16 T () S
(super) K
(\(parent\);) p n
(63) # () S 8 T () S 16 T (setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(64) # () S 8 T () S 16 T (setTitle\(") S
(regEfmtool options) str
("\);) p n
(65) # () S 8 T () S 16 T () N
(LaunchRegEfmToolFrame.java) (Page 1/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p n
(67) # () S 8 T () S 16 T (JPanel bottomPanel = ) S
(new) K
( JPanel\(\);) p n
(68) # () S 8 T () S 16 T (JButton okButton = ) S
(new) K
( JButton\(") p
(Run !) str
("\);) p n
(69) # () S 8 T () S 16 T (okButton.addActionListener\() S
(new) K
( ActionListener\(\)) p n
(70) # () N
(71) # () S 8 T () S 16 T ({) N
(72) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(73) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(74) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(76) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(77) # () N
(78) # () S 8 T () S 16 T () S 24 T (}) N
(79) # () S 8 T () S 16 T (}\);) N
(80) # () S 8 T () S 16 T (JButton cancelButton = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(81) # () S 8 T () S 16 T (cancelButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(82) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(83) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(84) # () S 8 T () S 16 T () S 24 T (}) N
(85) # () S 8 T () S 16 T (}\);) N
(86) # () S 8 T () S 16 T (bottomPanel.add\(okButton\);) N
(87) # () S 8 T () S 16 T (bottomPanel.add\(cancelButton\);) N
(88) # () N
(89) # () S 8 T () S 16 T (centerPanel = ) S
(new) K
( JPanel\(\);) p n
(90) # () N
(91) # () S 8 T () S 16 T (centerPanel.setLayout\() S
(new) K
( GridLayout\(0, 2\)\);) p n
(92) # () S 8 T () S 16 T (centerPanel.setBorder\(BorderFactory.createLineBorder\(Color.GRAY\)) N
0 T (\);) N
(93) # () S 8 T () S 16 T () N
(94) # () S 8 T () S 16 T (bg = ) S
(new) K
( ButtonGroup\(\);) p n
(95) # () S 8 T () S 16 T (yes = ) S
(new) K
( JRadioButton\(") p
(yes) str
("\);) p n
(96) # () S 8 T () S 16 T (JRadioButton no = ) S
(new) K
( JRadioButton\(") p
(no) str
("\);) p n
(97) # () S 8 T () S 16 T (bg.add\(yes\);) N
(98) # () S 8 T () S 16 T (bg.add\(no\);) N
(99) # () S 8 T () S 16 T (yes.setSelected\() S
(true) k
(\);) p n
(100) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(Use gene rules :) str
("\)\);) p n
(101) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(""\)\);) p n
(102) # () S 8 T () S 16 T (centerPanel.add\(yes\);) N
(103) # () S 8 T () S 16 T (centerPanel.add\(no\);) N
(104) # () N
(105) # () S 8 T () S 16 T () N
(106) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(Allocated memory \(GB\)) str
("\)\);) p n
(107) # () S 8 T () S 16 T () N
(108) # () S 8 T () S 16 T (System.out.println\(Runtime.getRuntime\(\).freeMemory\(\)\);) N
(109) # () S 8 T () S 16 T () N
(110) # () S 8 T () S 16 T () S
(int) k
( totalMemory =\() p
(int) k
(\) Math.ceil\(Runtime.getRuntime\(\).totalMemor) p n
0 T (y\(\)/1073741824.0\);) N
(111) # () S 8 T () S 16 T () S 24 T () S 32 T () N
(112) # () S 8 T () S 16 T (ram = ) S
(new) K
( JTextField\(String.valueOf\(totalMemory\)\);) p n
(113) # () S 8 T () S 16 T (centerPanel.add\(ram\);) N
(114) # () S 8 T () S 16 T () N
(115) # () S 8 T () S 16 T () N
(116) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(kind :) str
("\)\);) p n
(117) # () S 8 T () S 16 T (Object[] kindElements = ) S
(new) K
( Object[] { ") p
(stoichiometry) str
(", ") p
(sbml) str
(" };) p n
(118) # () S 8 T () S 16 T (kind = ) S
(new) K
( JComboBox\(kindElements\);) p n
(119) # () N
(120) # () S 8 T () S 16 T (centerPanel.add\(kind\);) N
(121) # () N
(122) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(out :) str
("\)\);) p n
(123) # () S 8 T () S 16 T (Object[] outElements = ) S
(new) K
( Object[] { ") p
(text-doubles) str
(", ") p
(text-boolean) str
(",) p n
(124) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(binary-boolean) str
(", ") p
(binary-doubles) str
(", ") p
(count) str
(", ") p
(null) str
(", ") p
(matla) str n
0 T (b) S
(",) p n
(125) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(matlab-directions) str
(" };) p n
(126) # () S 8 T () S 16 T (out = ) S
(new) K
( JComboBox\(outElements\);) p n
(127) # () N
(128) # () S 8 T () S 16 T (centerPanel.add\(out\);) N
(LaunchRegEfmToolFrame.java) (Page 2/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/LaunchRegEfmToolFrame.java) (102/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 103
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(129) # () p n
(130) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(level :) str
("\)\);) p n
(131) # () S 8 T () S 16 T (Object[] levelElements = ) S
(new) K
( Object[] { ") p
(FINEST) str
(", ") p
(FINER) str
(", ") p
(FINE) str
() p n
0 T (",) N
(132) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(WARNING) str
(", ") p
(CONFIG) str
(", ") p
(INFO) str
(" };) p n
(133) # () S 8 T () S 16 T (level = ) S
(new) K
( JComboBox\(levelElements\);) p n
(134) # () N
(135) # () S 8 T () S 16 T (centerPanel.add\(level\);) N
(136) # () N
(137) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(format :) str
("\)\);) p n
(138) # () S 8 T () S 16 T (Object[] formatElements = ) S
(new) K
( Object[] { ") p
(plain) str
(", ") p
(default) str
(" };) p n
(139) # () S 8 T () S 16 T (format = ) S
(new) K
( JComboBox\(formatElements\);) p n
(140) # () N
(141) # () S 8 T () S 16 T (centerPanel.add\(format\);) N
(142) # () N
(143) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(compression :) str
("\)\);) p n
(144) # () S 8 T () S 16 T (Object[] compElements = ) S
(new) K
( Object[] { ") p
(default) str
(", ") p
(off) str
(", ") p
(unique) str
(",) p n
(145) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(nullspace) str
(", ") p
(unique-no-recursion) str
(", ") p
(nullspace-no-recursion) str
(" ) p n
0 T (};) N
(146) # () S 8 T () S 16 T (comp = ) S
(new) K
( JComboBox\(compElements\);) p n
(147) # () N
(148) # () S 8 T () S 16 T (centerPanel.add\(comp\);) N
(149) # () N
(150) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(adjacency-method :) str
("\)\);) p n
(151) # () S 8 T () S 16 T (Object[] adjElements = ) S
(new) K
( Object[] { ") p
(default) str
(",) p n
(152) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(pattern-tree-minzero) str
(", ") p
(pattern-tree-rank) str
(" };) p n
(153) # () S 8 T () S 16 T (adj = ) S
(new) K
( JComboBox\(adjElements\);) p n
(154) # () N
(155) # () S 8 T () S 16 T (centerPanel.add\(adj\);) N
(156) # () N
(157) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(maxthreads :) str
("\)\);) p n
(158) # () S 8 T () S 16 T (maxthread = ) S
(new) K
( JTextField\(String.valueOf\(Runtime.getRuntime\(\).a) p n
0 T (vailableProcessors\(\)\)\);) N
(159) # () S 8 T () S 16 T (centerPanel.add\(maxthread\);) N
(160) # () S 8 T () S 16 T () N
(161) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(arithmetic :) str
("\)\);) p n
(162) # () S 8 T () S 16 T (Object[] ariElements = ) S
(new) K
( Object[] { ") p
(double) str
(", ") p
(fractional) str
(" };) p n
(163) # () S 8 T () S 16 T (arithmetic = ) S
(new) K
( JComboBox\(ariElements\);) p n
(164) # () N
(165) # () S 8 T () S 16 T (centerPanel.add\(arithmetic\);) N
(166) # () S 8 T () S 16 T () N
(167) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(precision :) str
("\)\);) p n
(168) # () S 8 T () S 16 T (Object[] preElements = ) S
(new) K
( Object[] { ") p
(-1) str
(", ") p
(128) str
(",") p
(256) str
(" };) p n
(169) # () S 8 T () S 16 T (precision = ) S
(new) K
( JComboBox\(preElements\);) p n
(170) # () N
(171) # () S 8 T () S 16 T (centerPanel.add\(precision\);) N
(172) # () N
(173) # () S 8 T () S 16 T (centerPanel.add\() S
(new) K
( JLabel\(") p
(normalize :) str
("\)\);) p n
(174) # () S 8 T () S 16 T (Object[] normElements = ) S
(new) K
( Object[] { ") p
(none) str
(",") p
(max) str
(", ") p
(min) str
(", ") p
(norm) str n
0 T (2) S
(", ") p
(squared) str
("};) p n
(175) # () S 8 T () S 16 T (norm = ) S
(new) K
( JComboBox\(normElements\);) p n
(176) # () N
(177) # () S 8 T () S 16 T (centerPanel.add\(norm\);) N
(178) # () S 8 T () S 16 T () N
(179) # () S 8 T () S 16 T () N
(180) # () S 8 T () S 16 T (defaultAdvancedButton = ) S
(new) K
( JRadioButton\(") p
(Advanced setup) str
("\);) p n
(181) # () S 8 T () S 16 T (defaultAdvancedButton.setSelected\() S
(false) k
(\);) p n
(182) # () S 8 T () S 16 T (defaultAdvancedButton.addActionListener\() S
(new) K
( ActionListener\(\)) p n
(183) # () N
(184) # () S 8 T () S 16 T ({) N
(185) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent arg0\) {) p n
(186) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(187) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (update\(\);) N
(188) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(189) # () N
(190) # () S 8 T () S 16 T () S 24 T (}) N
(LaunchRegEfmToolFrame.java) (Page 3/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(191) # () p 8 T () S 16 T (}\);) N
(192) # () S 8 T () S 16 T (add\(defaultAdvancedButton, BorderLayout.PAGE_START\);) N
(193) # () S 8 T () S 16 T (add\(centerPanel, BorderLayout.CENTER\);) N
(194) # () S 8 T () S 16 T (add\(bottomPanel, BorderLayout.PAGE_END\);) N
(195) # () S 8 T () S 16 T (pack\(\);) N
(196) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(197) # () S 8 T () S 16 T (update\(\);) N
(198) # () S 8 T () S 16 T (setVisible\() S
(true) k
(\);) p n
(199) # () N
(200) # () S 8 T (}) N
(201) # () N
(202) # () S 8 T () S
(private) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(203) # () N
(204) # () S 8 T () S 16 T () S
(try) K
( {) p n
(205) # () S 8 T () S 16 T () S 24 T () S
(double) k
( d = Integer.parseInt\(maxthread.getText\(\)\);) p n
(206) # () S 8 T () S 16 T (} ) S
(catch) K
( \(NumberFormatException nfe\) {) p n
(207) # () N
(208) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(209) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(maxthread must be an integer) str
(", ") p
(Error) str
(",) p n
(210) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(211) # () N
(212) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(213) # () S 8 T () S 16 T (}) N
(214) # () S 8 T () S 16 T () N
(215) # () S 8 T () S 16 T () S
(try) K
( {) p n
(216) # () S 8 T () S 16 T () S 24 T () S
(double) k
( d = Integer.parseInt\(ram.getText\(\)\);) p n
(217) # () S 8 T () S 16 T (} ) S
(catch) K
( \(NumberFormatException nfe\) {) p n
(218) # () N
(219) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
(220) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Alocated ram must be an integer) str
(", ") p
(Error) str
(",) p n
(221) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.ERROR_MESSAGE\);) N
(222) # () N
(223) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(224) # () S 8 T () S 16 T (}) N
(225) # () N
(226) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(227) # () S 8 T (}) N
(228) # () N
(229) # () S 8 T () S
(public) K
( Map<String, String> getParameters\(\) {) p n
(230) # () S 8 T () S 16 T (Map<String, String> params = ) S
(new) K
( HashMap<String, String>\(\);) p n
(231) # () N
(232) # () S 8 T () S 16 T (params.put\(") S
(ram) str
(",ram.getText\(\)\);) p n
(233) # () S 8 T () S 16 T (params.put\(") S
(kind) str
(", kind.getSelectedItem\(\).toString\(\)\);) p n
(234) # () S 8 T () S 16 T (params.put\(") S
(out) str
(", out.getSelectedItem\(\).toString\(\)\);) p n
(235) # () S 8 T () S 16 T (params.put\(") S
(level) str
(", level.getSelectedItem\(\).toString\(\)\);) p n
(236) # () S 8 T () S 16 T (params.put\(") S
(format) str
(", format.getSelectedItem\(\).toString\(\)\);) p n
(237) # () S 8 T () S 16 T (params.put\(") S
(comp) str
(", comp.getSelectedItem\(\).toString\(\)\);) p n
(238) # () S 8 T () S 16 T (params.put\(") S
(adj) str
(", adj.getSelectedItem\(\).toString\(\)\);) p n
(239) # () S 8 T () S 16 T (params.put\(") S
(maxthreads) str
(", maxthread.getText\(\)\);) p n
(240) # () S 8 T () S 16 T (params.put\(") S
(ari) str
(", arithmetic.getSelectedItem\(\).toString\(\)\);) p n
(241) # () S 8 T () S 16 T (params.put\(") S
(pre) str
(", precision.getSelectedItem\(\).toString\(\)\);) p n
(242) # () S 8 T () S 16 T (params.put\(") S
(norm) str
(", norm.getSelectedItem\(\).toString\(\)\);) p n
(243) # () S 8 T () S 16 T () N
(244) # () N
(245) # () S 8 T () S 16 T () S
(return) K
( params;) p n
(246) # () S 8 T (}) N
(247) # () S 8 T () N
(248) # () S 8 T () S
(public) K
( ) p
(boolean) k
( geneRule\(\){) p n
(249) # () S 8 T () S 16 T () S
(return) K
( \(yes.isSelected\(\)\);) p n
(250) # () S 8 T (}) N
(251) # () N
(252) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
(253) # () N
(254) # () S 8 T () S 16 T () S
(for) K
( \(Component c : centerPanel.getComponents\(\)\) {) p n
(255) # () S 8 T () S 16 T () S 24 T (c.setEnabled\(defaultAdvancedButton.isSelected\(\)\);) N
(256) # () S 8 T () S 16 T (}) N
(LaunchRegEfmToolFrame.java) (Page 4/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/LaunchRegEfmToolFrame.java) (103/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 104
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(257) # () p 8 T (}) N
(258) # (}) N
(LaunchRegEfmToolFrame.java) (Page 5/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/LaunchRegEfmToolFrame.java) (104/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 105
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Color;) p n
(23) # () S
(import) K
( java.awt.FlowLayout;) p n
(24) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(25) # () S
(import) K
( java.awt.event.ActionListener;) p n
(26) # () N
(27) # () S
(import) K
( javax.swing.BoxLayout;) p n
(28) # () S
(import) K
( javax.swing.JButton;) p n
(29) # () S
(import) K
( javax.swing.JColorChooser;) p n
(30) # () S
(import) K
( javax.swing.JFrame;) p n
(31) # () S
(import) K
( javax.swing.JLabel;) p n
(32) # () S
(import) K
( javax.swing.JOptionPane;) p n
(33) # () S
(import) K
( javax.swing.JPanel;) p n
(34) # () S
(import) K
( javax.swing.JTextField;) p n
(35) # () N
(36) # () N
(37) # () S
(public) K
( ) p
(class) K
( ) p
(VisuEditFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(38) # () N
(39) # () S 8 T () S
(private) K
( Color reacRevColor;) p n
(40) # () S 8 T () S
(private) K
( Color reacIrrevColor;) p n
(41) # () S 8 T () S
(private) K
( Color metabIntColor;) p n
(42) # () S 8 T () S
(private) K
( Color metabExtColor;) p n
(43) # () S 8 T () S
(private) K
( Color textColor;) p n
(44) # () S 8 T () S
(private) K
( JTextField textSizeField;) p n
(45) # () S 8 T () S
(private) K
( JButton okButton, cancelButton;) p n
(46) # () S 8 T () S
(private) K
( JPanel reacRevColorImage, reacIrrevColorImage, metabIntColorImag) p n
0 T (e,) N
(47) # () S 8 T () S 16 T () S 24 T (metabExtColorImage, textColorImage;) N
(48) # () S 8 T () S
(private) K
( ) p
(int) k
( textSize;) p n
(49) # () N
(50) # () S 8 T () S
(public) K
( VisuEditFrame\(JFrame parent, Color reacRevColor,) p n
(51) # () S 8 T () S 16 T () S 24 T (Color reacIrrevColor, Color metabIntColor, Color metabEx) N
0 T (tColor,) N
(52) # () S 8 T () S 16 T () S 24 T (Color textColor, ) S
(int) k
( textSize\) {) p n
(53) # () S 8 T () S 16 T () S
(super) K
(\(parent\);) p n
(54) # () S 8 T () S 16 T (this.setTitle\(") S
(Edit the image) str
("\);) p n
(55) # () S 8 T () S 16 T (this.textSize = textSize;) N
(56) # () S 8 T () S 16 T (this.reacRevColor = reacRevColor;) N
(57) # () S 8 T () S 16 T (this.reacIrrevColor = reacIrrevColor;) N
(58) # () S 8 T () S 16 T (this.metabIntColor = metabIntColor;) N
(59) # () S 8 T () S 16 T (this.metabExtColor = metabExtColor;) N
(60) # () S 8 T () S 16 T (this.textColor = textColor;) N
(61) # () N
(62) # () S 8 T () S 16 T (cancelButton = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(63) # () S 8 T () S 16 T (cancelButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(VisuEditFrame.java) (Page 1/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(64) # () p n
(65) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(66) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(67) # () S 8 T () S 16 T () S 24 T (}) N
(68) # () S 8 T () S 16 T (}\);) N
(69) # () N
(70) # () S 8 T () S 16 T (okButton = ) S
(new) K
( JButton\(") p
(ok) str
("\);) p n
(71) # () S 8 T () S 16 T (okButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(72) # () N
(73) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(74) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(75) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(76) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(77) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(78) # () S 8 T () S 16 T () S 24 T (}) N
(79) # () N
(80) # () S 8 T () S 16 T (}\);) N
(81) # () S 8 T () S 16 T (JPanel bottomPanel = ) S
(new) K
( JPanel\(\);) p n
(82) # () S 8 T () S 16 T (bottomPanel.add\(okButton\);) N
(83) # () S 8 T () S 16 T (bottomPanel.add\(cancelButton\);) N
(84) # () N
(85) # () S 8 T () S 16 T (JPanel centerPanel = ) S
(new) K
( JPanel\(\);) p n
(86) # () S 8 T () S 16 T (centerPanel.setLayout\() S
(new) K
( BoxLayout\(centerPanel, BoxLayout.PAGE_) p n
0 T (AXIS\)\);) N
(87) # () N
(88) # () S 8 T () S 16 T (JPanel reactionRevPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(89) # () S 8 T () S 16 T (JPanel reactionIrrevPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(90) # () S 8 T () S 16 T (JPanel metabosIntPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(91) # () S 8 T () S 16 T (JPanel metabosExtPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(92) # () S 8 T () S 16 T (JPanel textColorPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(93) # () S 8 T () S 16 T (JPanel textSizePanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(94) # () N
(95) # () S 8 T () S 16 T (reactionRevPanel) N
(96) # () S 8 T () S 16 T () S 24 T () S 32 T (.add\() S
(new) K
( JLabel\(") p
(Color of the reversible reactions : ) str
("\)\);) p n
(97) # () S 8 T () S 16 T (reacRevColorImage = ) S
(new) K
( JPanel\(\);) p n
(98) # () S 8 T () S 16 T (reacRevColorImage.setBackground\(reacRevColor\);) N
(99) # () S 8 T () S 16 T (reacRevColorImage.setSize\(70, 70\);) N
(100) # () S 8 T () S 16 T (reactionRevPanel.add\(reacRevColorImage\);) N
(101) # () S 8 T () S 16 T (JButton editReacRevColor = ) S
(new) K
( JButton\(") p
(edit) str
("\);) p n
(102) # () S 8 T () S 16 T (reactionRevPanel.add\(editReacRevColor\);) N
(103) # () S 8 T () S 16 T (editReacRevColor.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(104) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(105) # () S 8 T () S 16 T () S 24 T () S 32 T (Color c = editColor\(getReacRevColor\(\)\);) N
(106) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(c != ) p
(null) k
(\)) p n
(107) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (setReacRevColor\(c\);) N
(108) # () S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
(109) # () S 8 T () S 16 T () S 24 T (}) N
(110) # () S 8 T () S 16 T (}\);) N
(111) # () N
(112) # () S 8 T () S 16 T (reactionIrrevPanel.add\() S
(new) K
( JLabel\() p n
(113) # () S 8 T () S 16 T () S 24 T () S 32 T (") S
(Color of the irreversible reactions : ) str
("\)\);) p n
(114) # () S 8 T () S 16 T (reacIrrevColorImage = ) S
(new) K
( JPanel\(\);) p n
(115) # () S 8 T () S 16 T (reacIrrevColorImage.setBackground\(reacIrrevColor\);) N
(116) # () S 8 T () S 16 T (reacIrrevColorImage.setSize\(70, 70\);) N
(117) # () S 8 T () S 16 T (reactionIrrevPanel.add\(reacIrrevColorImage\);) N
(118) # () S 8 T () S 16 T (JButton editReacIrrevColor = ) S
(new) K
( JButton\(") p
(edit) str
("\);) p n
(119) # () S 8 T () S 16 T (reactionIrrevPanel.add\(editReacIrrevColor\);) N
(120) # () S 8 T () S 16 T (editReacIrrevColor.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(121) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(122) # () S 8 T () S 16 T () S 24 T () S 32 T (Color c = editColor\(getReacIrrevColor\(\)\);) N
(123) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(c != ) p
(null) k
(\)) p n
(124) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (setReacIrrevColor\(c\);) N
(125) # () S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
(126) # () S 8 T () S 16 T () S 24 T (}) N
(127) # () S 8 T () S 16 T (}\);) N
(128) # () N
(VisuEditFrame.java) (Page 2/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/VisuEditFrame.java) (105/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 106
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(129) # () p 8 T () S 16 T (metabosIntPanel.add\() S
(new) K
( JLabel\(") p
(Color of the internal metabolites : ) str
("\)\);) p n
(130) # () S 8 T () S 16 T (metabIntColorImage = ) S
(new) K
( JPanel\(\);) p n
(131) # () S 8 T () S 16 T (metabIntColorImage.setBackground\(metabIntColor\);) N
(132) # () S 8 T () S 16 T (metabIntColorImage.setSize\(70, 70\);) N
(133) # () S 8 T () S 16 T (metabosIntPanel.add\(metabIntColorImage\);) N
(134) # () S 8 T () S 16 T (JButton editMetabIntColor = ) S
(new) K
( JButton\(") p
(edit) str
("\);) p n
(135) # () S 8 T () S 16 T (metabosIntPanel.add\(editMetabIntColor\);) N
(136) # () S 8 T () S 16 T (editMetabIntColor.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(137) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(138) # () S 8 T () S 16 T () S 24 T () S 32 T (Color c = editColor\(getMetabIntColor\(\)\);) N
(139) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(c != ) p
(null) k
(\)) p n
(140) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (setMetabIntColor\(c\);) N
(141) # () S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
(142) # () S 8 T () S 16 T () S 24 T (}) N
(143) # () S 8 T () S 16 T (}\);) N
(144) # () N
(145) # () S 8 T () S 16 T (metabosExtPanel.add\() S
(new) K
( JLabel\(") p
(Color of the external metabolites : ) str
("\)\);) p n
(146) # () S 8 T () S 16 T (metabExtColorImage = ) S
(new) K
( JPanel\(\);) p n
(147) # () S 8 T () S 16 T (metabExtColorImage.setBackground\(metabExtColor\);) N
(148) # () S 8 T () S 16 T (metabExtColorImage.setSize\(70, 70\);) N
(149) # () S 8 T () S 16 T (metabosExtPanel.add\(metabExtColorImage\);) N
(150) # () S 8 T () S 16 T (JButton editMetabExtColor = ) S
(new) K
( JButton\(") p
(edit) str
("\);) p n
(151) # () S 8 T () S 16 T (metabosExtPanel.add\(editMetabExtColor\);) N
(152) # () S 8 T () S 16 T (editMetabExtColor.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(153) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(154) # () S 8 T () S 16 T () S 24 T () S 32 T (Color c = editColor\(getMetabExtColor\(\)\);) N
(155) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(c != ) p
(null) k
(\)) p n
(156) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (setMetabExtColor\(c\);) N
(157) # () S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
(158) # () S 8 T () S 16 T () S 24 T (}) N
(159) # () S 8 T () S 16 T (}\);) N
(160) # () N
(161) # () S 8 T () S 16 T (textColorPanel.add\() S
(new) K
( JLabel\(") p
(Color of the text : ) str
("\)\);) p n
(162) # () S 8 T () S 16 T (textColorImage = ) S
(new) K
( JPanel\(\);) p n
(163) # () S 8 T () S 16 T (textColorImage.setBackground\(textColor\);) N
(164) # () S 8 T () S 16 T (textColorImage.setSize\(70, 70\);) N
(165) # () S 8 T () S 16 T (textColorPanel.add\(textColorImage\);) N
(166) # () S 8 T () S 16 T (JButton editTextColor = ) S
(new) K
( JButton\(") p
(edit) str
("\);) p n
(167) # () S 8 T () S 16 T (textColorPanel.add\(editTextColor\);) N
(168) # () S 8 T () S 16 T (editTextColor.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(169) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(170) # () S 8 T () S 16 T () S 24 T () S 32 T (Color c = editColor\(getTextColor\(\)\);) N
(171) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(c != ) p
(null) k
(\)) p n
(172) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (setTextColor\(c\);) N
(173) # () S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
(174) # () S 8 T () S 16 T () S 24 T (}) N
(175) # () S 8 T () S 16 T (}\);) N
(176) # () N
(177) # () S 8 T () S 16 T (textSizePanel.add\() S
(new) K
( JLabel\(") p
(Size of the text : ) str
("\)\);) p n
(178) # () N
(179) # () S 8 T () S 16 T (textSizeField = ) S
(new) K
( JTextField\(String.valueOf\(textSize\)\);) p n
(180) # () S 8 T () S 16 T (textSizeField.setColumns\(3\);) N
(181) # () S 8 T () S 16 T (textSizePanel.add\(textSizeField\);) N
(182) # () N
(183) # () S 8 T () S 16 T (centerPanel.add\(reactionRevPanel\);) N
(184) # () S 8 T () S 16 T (centerPanel.add\(reactionIrrevPanel\);) N
(185) # () S 8 T () S 16 T (centerPanel.add\(metabosIntPanel\);) N
(186) # () S 8 T () S 16 T (centerPanel.add\(metabosExtPanel\);) N
(187) # () S 8 T () S 16 T (centerPanel.add\(textColorPanel\);) N
(188) # () S 8 T () S 16 T (centerPanel.add\(textSizePanel\);) N
(189) # () N
(190) # () S 8 T () S 16 T (add\(bottomPanel, BorderLayout.PAGE_END\);) N
(191) # () S 8 T () S 16 T (add\(centerPanel, BorderLayout.CENTER\);) N
(192) # () S 8 T () S 16 T (pack\(\);) N
(193) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(194) # () S 8 T () S 16 T (setVisible\() S
(true) k
(\);) p n
(VisuEditFrame.java) (Page 3/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(195) # () p 8 T (}) N
(196) # () N
(197) # () S 8 T () S
(public) K
( Color editColor\(Color color\) {) p n
(198) # () S 8 T () S 16 T (Color newColor = JColorChooser) N
(199) # () S 8 T () S 16 T () S 24 T () S 32 T (.showDialog\() S
(this) k
(, ") p
(Choose a color) str
(", color\);) p n
(200) # () N
(201) # () S 8 T () S 16 T () S
(return) K
( newColor;) p n
(202) # () N
(203) # () S 8 T (}) N
(204) # () N
(205) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
(206) # () S 8 T () S 16 T (reacRevColorImage.setBackground\(reacRevColor\);) N
(207) # () S 8 T () S 16 T (reacIrrevColorImage.setBackground\(reacIrrevColor\);) N
(208) # () S 8 T () S 16 T (metabIntColorImage.setBackground\(metabIntColor\);) N
(209) # () S 8 T () S 16 T (metabExtColorImage.setBackground\(metabExtColor\);) N
(210) # () S 8 T () S 16 T (textColorImage.setBackground\(textColor\);) N
(211) # () S 8 T (}) N
(212) # () N
(213) # () S 8 T () S
(private) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(214) # () S 8 T () S 16 T () S
(try) K
( {) p n
(215) # () S 8 T () S 16 T () S 24 T (Integer.parseInt\(textSizeField.getText\(\).trim\(\)\);) N
(216) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(true) k
(;) p n
(217) # () S 8 T () S 16 T (} ) S
(catch) K
( \(NumberFormatException nfe\) {) p n
(218) # () S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Text size must be an integer) str
() p n
0 T (",) N
(219) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Error) str
(", JOptionPane.ERROR_MESSAGE\);) p n
(220) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(221) # () S 8 T () S 16 T (}) N
(222) # () N
(223) # () S 8 T (}) N
(224) # () N
(225) # () S 8 T () S
(public) K
( Color getReacRevColor\(\) {) p n
(226) # () S 8 T () S 16 T () S
(return) K
( reacRevColor;) p n
(227) # () S 8 T (}) N
(228) # () N
(229) # () S 8 T () S
(public) K
( Color getReacIrrevColor\(\) {) p n
(230) # () S 8 T () S 16 T () S
(return) K
( reacIrrevColor;) p n
(231) # () S 8 T (}) N
(232) # () N
(233) # () S 8 T () S
(public) K
( Color getMetabIntColor\(\) {) p n
(234) # () S 8 T () S 16 T () S
(return) K
( metabIntColor;) p n
(235) # () S 8 T (}) N
(236) # () N
(237) # () S 8 T () S
(public) K
( Color getMetabExtColor\(\) {) p n
(238) # () S 8 T () S 16 T () S
(return) K
( metabExtColor;) p n
(239) # () S 8 T (}) N
(240) # () N
(241) # () S 8 T () S
(public) K
( Color getTextColor\(\) {) p n
(242) # () S 8 T () S 16 T () S
(return) K
( textColor;) p n
(243) # () S 8 T (}) N
(244) # () N
(245) # () S 8 T () S
(public) K
( ) p
(void) k
( setReacRevColor\(Color c\) {) p n
(246) # () S 8 T () S 16 T (reacRevColor = c;) N
(247) # () S 8 T (}) N
(248) # () N
(249) # () S 8 T () S
(public) K
( ) p
(void) k
( setReacIrrevColor\(Color c\) {) p n
(250) # () S 8 T () S 16 T (reacIrrevColor = c;) N
(251) # () S 8 T (}) N
(252) # () N
(253) # () S 8 T () S
(public) K
( ) p
(void) k
( setMetabIntColor\(Color c\) {) p n
(254) # () S 8 T () S 16 T (metabIntColor = c;) N
(255) # () S 8 T (}) N
(256) # () N
(257) # () S 8 T () S
(public) K
( ) p
(void) k
( setMetabExtColor\(Color c\) {) p n
(258) # () S 8 T () S 16 T (metabExtColor = c;) N
(259) # () S 8 T (}) N
(VisuEditFrame.java) (Page 4/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/VisuEditFrame.java) (106/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 107
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(260) # () p n
(261) # () S 8 T () S
(public) K
( ) p
(void) k
( setTextColor\(Color c\) {) p n
(262) # () S 8 T () S 16 T (textColor = c;) N
(263) # () S 8 T (}) N
(264) # () N
(265) # () S 8 T () S
(public) K
( ) p
(int) k
( getTextSize\(\) {) p n
(266) # () S 8 T () S 16 T () S
(return) K
( Integer.parseInt\(textSizeField.getText\(\).trim\(\)\);) p n
(267) # () S 8 T (}) N
(268) # (}) N
(VisuEditFrame.java) (Page 5/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/VisuEditFrame.java) (107/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 108
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Component;) p n
(23) # () S
(import) K
( java.awt.FlowLayout;) p n
(24) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(25) # () S
(import) K
( java.awt.event.ActionListener;) p n
(26) # () S
(import) K
( java.util.ArrayList;) p n
(27) # () S
(import) K
( java.util.Arrays;) p n
(28) # () S
(import) K
( java.util.Collections;) p n
(29) # () S
(import) K
( java.util.List;) p n
(30) # () N
(31) # () S
(import) K
( javax.swing.BoxLayout;) p n
(32) # () S
(import) K
( javax.swing.ComboBoxModel;) p n
(33) # () S
(import) K
( javax.swing.DefaultComboBoxModel;) p n
(34) # () S
(import) K
( javax.swing.ImageIcon;) p n
(35) # () S
(import) K
( javax.swing.JButton;) p n
(36) # () S
(import) K
( javax.swing.JComboBox;) p n
(37) # () S
(import) K
( javax.swing.JFrame;) p n
(38) # () S
(import) K
( javax.swing.JLabel;) p n
(39) # () S
(import) K
( javax.swing.JOptionPane;) p n
(40) # () S
(import) K
( javax.swing.JPanel;) p n
(41) # () S
(import) K
( javax.swing.JTextField;) p n
(42) # () N
(43) # () S
(import) K
( model.Reaction;) p n
(44) # () N
(45) # () S
(import) K
( controler.MainControler;) p n
(46) # () S
(import) K
( controler.Var;) p n
(47) # () S
(import) K
( controler.rule.AddPanelRulePoPupListener;) p n
(48) # () N
(49) # () S
(public) K
( ) p
(class) K
( ) p
(AddRuleFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(50) # () N
(51) # () S 8 T () S
(private) K
( ) p
(static) K
( ) p
(final) K
( ) p
(long) k
( serialVersionUID = 1L;) p n
(52) # () S 8 T () S
(private) K
( JPanel panel;) p n
(53) # () S 8 T () S
(private) K
( JPanel bottomPanel;) p n
(54) # () S 8 T () S
(private) K
( JComboBox<Reaction> listReaction1;) p n
(55) # () N
(56) # () S 8 T () S
(public) K
( AddRuleFrame\(JFrame generalFrame, MainControler controler,) p n
(57) # () S 8 T () S 16 T () S 24 T (String rule\) {) N
(58) # () N
(59) # () S 8 T () S 16 T () S
(super) K
(\(generalFrame\);) p n
(60) # () S 8 T () S 16 T (okPressed = ) S
(false) k
(;) p n
(61) # () N
(62) # () S 8 T () S 16 T () S
(// List of the reactions) c n
(63) # () S
() p 8 T () S 16 T (ComboBoxModel<Reaction> model1 = ) S
(new) K
( DefaultComboBoxModel<Reacti) p n
0 T (on>\(\);) N
(64) # () S 8 T () S 16 T () S
(for) K
( \(Reaction r : controler.getListReactions\(\)\) {) p n
(AddRuleFrame.java) (Page 1/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T () S 24 T (\(\(DefaultComboBoxModel<Reaction>\) model1\).addElement\(r\);) N
(66) # () S 8 T () S 16 T (}) N
(67) # () S 8 T () S 16 T (listReaction1 = ) S
(new) K
( JComboBox<Reaction>\(model1\);) p n
(68) # () N
(69) # () S 8 T () S 16 T (ComboBoxModel<Reaction> model2 = ) S
(new) K
( DefaultComboBoxModel<Reacti) p n
0 T (on>\(\);) N
(70) # () S 8 T () S 16 T () S
(for) K
( \(Reaction r : controler.getListReactions\(\)\) {) p n
(71) # () S 8 T () S 16 T () S 24 T (\(\(DefaultComboBoxModel<Reaction>\) model2\).addElement\(r\);) N
(72) # () S 8 T () S 16 T (}) N
(73) # () S 8 T () S 16 T (JComboBox<Reaction> listReaction2 = ) S
(new) K
( JComboBox<Reaction>\(mode) p n
0 T (l2\);) N
(74) # () N
(75) # () S 8 T () S 16 T (setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(76) # () S 8 T () S 16 T (JLabel StringIf = ) S
(new) K
( JLabel\(") p
(IF) str
("\);) p n
(77) # () S 8 T () S 16 T (JLabel StringEqual = ) S
(new) K
( JLabel\(") p
(=) str
("\);) p n
(78) # () S 8 T () S 16 T (JComboBox<String> ) S
(operator) K
( = ) p
(new) K
( JComboBox<String>\() p
(new) K
( String[] ) p n
0 T ({) N
(79) # () S 8 T () S 16 T () S 24 T () S 32 T ("",") S
(AND) str
(", ") p
(OR) str
(" }\);) p n
(80) # () N
(81) # () S 8 T () S 16 T (JComboBox<String> flux = ) S
(new) K
( JComboBox<String>\() p n
(82) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( String[] { ") p
(0) str
(", ") p
(1) str
(" }\);) p n
(83) # () N
(84) # () S 8 T () S 16 T (JComboBox<String> fluxEnd = ) S
(new) K
( JComboBox<String>\() p n
(85) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( String[] { ") p
(0) str
(", ") p
(1) str
(" }\);) p n
(86) # () N
(87) # () S 8 T () S 16 T (panel = ) S
(new) K
( JPanel\(\);) p n
(88) # () S 8 T () S 16 T (panel.setLayout\() S
(new) K
( BoxLayout\(panel, BoxLayout.PAGE_AXIS\)\);) p n
(89) # () N
(90) # () S 8 T () S 16 T (JPanel firstPanel = ) S
(new) K
( JPanel\(\);) p n
(91) # () S 8 T () S 16 T (firstPanel.setLayout\() S
(new) K
( FlowLayout\(\)\);) p n
(92) # () S 8 T () S 16 T (firstPanel.add\(StringIf\);) N
(93) # () S 8 T () S 16 T (firstPanel.add\(listReaction1\);) N
(94) # () S 8 T () S 16 T (firstPanel.add\(StringEqual\);) N
(95) # () S 8 T () S 16 T (firstPanel.add\(flux\);) N
(96) # () S 8 T () S 16 T (firstPanel.add\() S
(operator) K
(\);) p n
(97) # () N
(98) # () S 8 T () S 16 T (JPanel secondPanel = ) S
(new) K
( JPanel\(\);) p n
(99) # () S 8 T () S 16 T (secondPanel.add\() S
(new) K
( JLabel\(") p
(THEN) str
("\)\);) p n
(100) # () S 8 T () S 16 T (secondPanel.add\(listReaction2\);) N
(101) # () S 8 T () S 16 T (secondPanel.add\() S
(new) K
( JLabel\(") p
(=) str
("\)\);) p n
(102) # () S 8 T () S 16 T (secondPanel.add\(fluxEnd\);) N
(103) # () N
(104) # () S 8 T () S 16 T (JButton okButton = ) S
(new) K
( JButton\(") p
(ok) str
("\);) p n
(105) # () S 8 T () S 16 T (JButton cancelButton = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(106) # () N
(107) # () S 8 T () S 16 T () S
(// ok) c n
(108) # () S
() p 8 T () S 16 T (cancelButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(109) # () N
(110) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(111) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(112) # () S 8 T () S 16 T () S 24 T (}) N
(113) # () S 8 T () S 16 T (}\);) N
(114) # () N
(115) # () S 8 T () S 16 T () S
(// cancel) c n
(116) # () S
() p 8 T () S 16 T (okButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(117) # () N
(118) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(119) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(120) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(121) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(122) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(123) # () S 8 T () S 16 T () S 24 T (}) N
(124) # () S 8 T () S 16 T (}\);) N
(125) # () N
(126) # () S 8 T () S 16 T (operator.addActionListener\() S
(new) K
( AddPanelRulePoPupListener\(panel,) p n
(127) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(operator) K
(, controler,) p
(this) k
(\)\);) p n
(AddRuleFrame.java) (Page 2/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/AddRuleFrame.java) (108/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 109
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(128) # () p 8 T () S 16 T (bottomPanel = ) S
(new) K
( JPanel\(\);) p n
(129) # () S 8 T () S 16 T (bottomPanel.setLayout\() S
(new) K
( BoxLayout\(bottomPanel, BoxLayout.PAGE_) p n
0 T (AXIS\)\);) N
(130) # () N
(131) # () S 8 T () S 16 T (JPanel buttonPanel = ) S
(new) K
( JPanel\(\);) p n
(132) # () S 8 T () S 16 T (buttonPanel.add\(okButton\);) N
(133) # () S 8 T () S 16 T (buttonPanel.add\(cancelButton\);) N
(134) # () N
(135) # () S 8 T () S 16 T (panel.add\(firstPanel\);) N
(136) # () N
(137) # () S 8 T () S 16 T (bottomPanel.add\(secondPanel\);) N
(138) # () S 8 T () S 16 T (bottomPanel.add\(buttonPanel\);) N
(139) # () S 8 T () S 16 T (add\(panel, BorderLayout.CENTER\);) N
(140) # () S 8 T () S 16 T (add\(bottomPanel, BorderLayout.PAGE_END\);) N
(141) # () N
(142) # () S 8 T () S 16 T () S
(if) K
( \(!rule.equals\(""\)\) { ) p
(// edit rule) c n
(143) # () S
() p 8 T () S 16 T () S 24 T (System.out.println\(rule\);) N
(144) # () S 8 T () S 16 T () S 24 T (ImageIcon delPanel =Var.suplittle;) N
(145) # () N
(146) # () S 8 T () S 16 T () S 24 T (rule = rule.replace\(") S
(   ) str
(", ") p
( ) str
("\);) p n
(147) # () S 8 T () S 16 T () S 24 T (rule = rule.replace\(") S
(  ) str
(",") p
( ) str
("\);) p n
(148) # () S 8 T () S 16 T () S 24 T (String[] tab = rule.split\(") S
( ) str
("\);) p n
(149) # () N
(150) # () S 8 T () S 16 T () S 24 T () S
(//values of IF panel) c n
(151) # () S
() p 8 T () S 16 T () S 24 T (listReaction1.setSelectedItem\(controler.getReaction\(tab[) N
0 T (1]\)\);) N
(152) # () S 8 T () S 16 T () S 24 T (flux.setSelectedItem\(tab[3]\);) N
(153) # () S 8 T () S 16 T () S 24 T (operator.setSelectedItem\(tab[4]\);) N
(154) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(tab.length>8\){) p n
(155) # () S 8 T () S 16 T () S 24 T () S 32 T (panel.remove\(1\);) N
(156) # () S 8 T () S 16 T () S 24 T (}) N
(157) # () S 8 T () S 16 T () S 24 T () S
(//values of THEN panel) c n
(158) # () S
() p 8 T () S 16 T () S 24 T (listReaction2.setSelectedItem\(controler.getReaction\(tab[) N
0 T (tab.length-3]\)\);) N
(159) # () S 8 T () S 16 T () S 24 T (fluxEnd.setSelectedItem\(tab[tab.length-1]\);) N
(160) # () N
(161) # () S 8 T () S 16 T () S 24 T () S
(//add panels OR / AND) c n
(162) # () S
() p 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( j=4;j<tab.length-4;j+=4\){) p n
(163) # () S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(j+tab[j]\);) N
(164) # () S 8 T () S 16 T () S 24 T () S 32 T (JPanel nextPanel = ) S
(new) K
( JPanel\(\);) p n
(165) # () N
(166) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// The model is created for each combobox) c n
(167) # () S
() p 8 T () S 16 T () S 24 T () S 32 T (ComboBoxModel<Reaction> model = ) S
(new) K
( DefaultCombo) p n
0 T (BoxModel<Reaction>\(\);) N
(168) # () N
(169) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Reaction r : controler.getListReactions\(\)\) ) p n
0 T ({) N
(170) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (\(\(DefaultComboBoxModel<Reaction>\) model\)) N
0 T (.addElement\(r\);) N
(171) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(172) # () N
(173) # () S 8 T () S 16 T () S 24 T () S 32 T (JComboBox listReaction = ) S
(new) K
( JComboBox<Reaction>) p n
0 T (\(model\);) N
(174) # () S 8 T () S 16 T () S 24 T () S 32 T (listReaction.setSelectedItem\(controler.getReacti) N
0 T (on\(tab[j+1]\)\);) N
(175) # () S 8 T () S 16 T () S 24 T () S 32 T (JComboBox<String> nextoperator = ) S
(new) K
( JComboBox<S) p n
0 T (tring>\() N
(176) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(new) K
( String[] {"",") p
(AND) str
(", ") p
(OR) str
("}\);) p n
(177) # () S 8 T () S 16 T () S 24 T () S 32 T (nextoperator.setSelectedItem\(tab[j+4]\);) N
(178) # () N
(179) # () S 8 T () S 16 T () S 24 T () S 32 T (JComboBox<String> flux2 = ) S
(new) K
( JComboBox<String>\() p
() K n
0 T (new) S
( String[] { ") p
(0) str
(", ") p
(1) str
(" }\);) p n
(180) # () S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(") S
(j+3) str
("+tab[j+3]\);) p n
(181) # () S 8 T () S 16 T () S 24 T () S 32 T (flux2.setSelectedItem\(tab[j+3]\);) N
(182) # () N
(183) # () S 8 T () S 16 T () S 24 T () S 32 T (nextPanel.add\() S
(new) K
( JComboBox\(model\)\);) p n
(AddRuleFrame.java) (Page 3/5) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(184) # () p 8 T () S 16 T () S 24 T () S 32 T (nextPanel.add\() S
(new) K
( JLabel\(") p
(=) str
("\)\);) p n
(185) # () S 8 T () S 16 T () S 24 T () S 32 T (nextPanel.add\(flux2\);) N
(186) # () S 8 T () S 16 T () S 24 T () S 32 T (nextPanel.add\(nextoperator\);) N
(187) # () S 8 T () S 16 T () S 24 T () S 32 T (nextoperator.addActionListener\() S
(new) K
( AddPanelRuleP) p n
0 T (oPupListener\(panel,) N
(188) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (nextoperator, controler,) S
(this) k
(\)\);) p n
(189) # () N
(190) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(final) K
( JButton del = ) p
(new) K
( JButton\(delPanel\);) p n
(191) # () S 8 T () S 16 T () S 24 T () S 32 T (del.addActionListener\() S
(new) K
( ActionListener\(\){) p n
(192) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent ) p n
0 T (e\) {) N
(193) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (panel.remove\(del.getParent\(\)\);) N
(194) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (panel.revalidate\(\);) N
(195) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (panel.repaint\(\);) N
(196) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (pack\(\);) N
(197) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(198) # () N
(199) # () S 8 T () S 16 T () S 24 T () S 32 T (}\);) N
(200) # () S 8 T () S 16 T () S 24 T () S 32 T (nextPanel.add\(del\);) N
(201) # () N
(202) # () S 8 T () S 16 T () S 24 T () S 32 T (panel.add\(nextPanel\);) N
(203) # () S 8 T () S 16 T () S 24 T () S 32 T (panel.revalidate\(\);) N
(204) # () S 8 T () S 16 T () S 24 T () S 32 T (panel.repaint\(\);) N
(205) # () S 8 T () S 16 T () S 24 T () S 32 T (pack\(\);) N
(206) # () S 8 T () S 16 T () S 24 T (}) N
(207) # () S 8 T () S 16 T (}) N
(208) # () N
(209) # () N
(210) # () S 8 T () S 16 T (this.setDefaultCloseOperation\(JFrame.DISPOSE_ON_CLOSE\);) N
(211) # () S 8 T () S 16 T (this.setTitle\(") S
(Add a rule) str
("\);) p n
(212) # () S 8 T () S 16 T (this.pack\(\);) N
(213) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(214) # () S 8 T () S 16 T (this.setVisible\() S
(true) k
(\);) p n
(215) # () N
(216) # () S 8 T (}) N
(217) # () N
(218) # () S 8 T () S
(// collect all the components of the frame) c n
(219) # () S
() p 8 T () S
(public) K
( List<Component> getListComponents\(\) {) p n
(220) # () S 8 T () S 16 T (List<Component> listComponent = ) S
(new) K
( ArrayList<Component>\(\);) p n
(221) # () S 8 T () S 16 T () S
(for) K
( \(Component c : panel.getComponents\(\)\) {) p n
(222) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(c ) p
(instanceof) K
( JPanel\) {) p n
(223) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Component comp : \(\(JPanel\) c\).getComponents) p n
0 T (\(\)\) {) N
(224) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (listComponent.add\(comp\);) N
(225) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(226) # () S 8 T () S 16 T () S 24 T (}) N
(227) # () S 8 T () S 16 T (}) N
(228) # () S 8 T () S 16 T () S
(for) K
( \(Component c : bottomPanel.getComponents\(\)\) {) p n
(229) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(c ) p
(instanceof) K
( JPanel\) {) p n
(230) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Component comp : \(\(JPanel\) c\).getComponents) p n
0 T (\(\)\) {) N
(231) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (listComponent.add\(comp\);) N
(232) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(233) # () S 8 T () S 16 T () S 24 T (}) N
(234) # () S 8 T () S 16 T (}) N
(235) # () S 8 T () S 16 T () S
(return) K
( listComponent;) p n
(236) # () S 8 T (}) N
(237) # () N
(238) # () S 8 T () S
(// return rule in string) c n
(239) # () S
() p 8 T () S
(public) K
( String getRule\(\) {) p n
(240) # () S 8 T () S 16 T (String rule = "";) N
(241) # () S 8 T () S 16 T () S
(for) K
( \(Component comp : getListComponents\(\)\) {) p n
(242) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(comp ) p
(instanceof) K
( JComboBox\) {) p n
(243) # () S 8 T () S 16 T () S 24 T () S 32 T (rule += \(\(JComboBox<?>\) comp\).getSelectedItem\(\);) N
(244) # () S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(comp ) p
(instanceof) K
( JLabel\) {) p n
(245) # () S 8 T () S 16 T () S 24 T () S 32 T (rule += \(\(JLabel\) comp\).getText\(\);) N
(AddRuleFrame.java) (Page 4/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/AddRuleFrame.java) (109/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 110
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(246) # () p 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(comp ) p
(instanceof) K
( JTextField\) {) p n
(247) # () S 8 T () S 16 T () S 24 T () S 32 T (rule += \(\(JTextField\) comp\).getText\(\);) N
(248) # () S 8 T () S 16 T () S 24 T (}) N
(249) # () S 8 T () S 16 T () S 24 T (rule += ") S
( ) str
(";) p n
(250) # () S 8 T () S 16 T (}) N
(251) # () S 8 T () S 16 T (rule = rule.replace\(") S
(  ) str
(",") p
( ) str
("\);) p n
(252) # () S 8 T () S 16 T (rule = rule.replace\(") S
(   ) str
(",") p
( ) str
("\);) p n
(253) # () S 8 T () S 16 T () S
(return) K
( rule;) p n
(254) # () S 8 T (}) N
(255) # () N
(256) # () S 8 T () S
(public) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(257) # () S 8 T () S 16 T (String str = getRule\(\).replace\(") S
(   ) str
(",") p
( ) str
("\); ) p n
(258) # () S 8 T () S 16 T (str = str.replace\(") S
(  ) str
(",") p
( ) str
("\);) p n
(259) # () S 8 T () S 16 T (String[] tab = str.split\(") S
( ) str
("\);) p n
(260) # () S 8 T () S 16 T (ArrayList<String> list = ) S
(new) K
( ArrayList<String>\(Arrays.asList\(tab) p n
0 T (\)\);) N
(261) # () S 8 T () S 16 T (String OutputReaction = listReaction1.getSelectedItem\(\).toString) N
0 T (\(\);) N
(262) # () S 8 T () S 16 T () S
(//output reaction can't be an input reaction) c n
(263) # () S
() p 8 T () S 16 T () S
(if) K
( \(Collections.frequency\(list, OutputReaction\) > 1\) {) p n
(264) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(The) str n
0 T ( output reaction must never be an input reaction.) S
(", ") p
( ) str
(",) p n
(265) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (JOptionPane.ERROR_MESSAG) N
0 T (E\);) N
(266) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(267) # () S 8 T () S 16 T (}) N
(268) # () S 8 T () S 16 T () S
(//operator before then must be empty) c n
(269) # () S
() p 8 T () S 16 T () S
(else) K
( ) p
(if) K
( \(\(!tab[tab.length-5].equals\(") p
(0) str
("\)\) && \(!tab[tab.length-5]) p n
0 T (.equals\(") S
(1) str
("\)\)\){) p n
(270) # () S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(No operator bef) str n
0 T (ore THEN ) S
(", ") p
( ) str
(",) p n
(271) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane.ERROR_MESSAGE\);) N
(272) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(273) # () S 8 T () S 16 T (}) N
(274) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(275) # () S 8 T (}) N
(276) # () N
(277) # (}) N
(AddRuleFrame.java) (Page 5/5) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/AddRuleFrame.java) (110/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 111
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Desktop;) p n
(23) # () S
(import) K
( java.io.BufferedReader;) p n
(24) # () S
(import) K
( java.io.File;) p n
(25) # () S
(import) K
( java.io.FileReader;) p n
(26) # () S
(import) K
( java.io.IOException;) p n
(27) # () S
(import) K
( java.net.URI;) p n
(28) # () S
(import) K
( java.net.URISyntaxException;) p n
(29) # () N
(30) # () S
(import) K
( javax.swing.JEditorPane;) p n
(31) # () S
(import) K
( javax.swing.JFrame;) p n
(32) # () S
(import) K
( javax.swing.JLabel;) p n
(33) # () S
(import) K
( javax.swing.JPanel;) p n
(34) # () S
(import) K
( javax.swing.JScrollPane;) p n
(35) # () S
(import) K
( javax.swing.JTabbedPane;) p n
(36) # () S
(import) K
( javax.swing.event.HyperlinkEvent;) p n
(37) # () S
(import) K
( javax.swing.event.HyperlinkListener;) p n
(38) # () N
(39) # () S
(import) K
( controler.Var;) p n
(40) # () N
(41) # () S
(public) K
( ) p
(class) K
( ) p
(AboutFrame) L
( ) p
(extends) K
( PopUpAbs ) p
(implements) K
( HyperlinkListener {) p n
(42) # () N
(43) # () S 8 T () S
(public) K
( AboutFrame\(JFrame parent\) {) p n
(44) # () S 8 T () S 16 T () S
(super) K
(\(parent\);) p n
(45) # () N
(46) # () S 8 T () S 16 T (this.setDefaultCloseOperation\(JFrame.DISPOSE_ON_CLOSE\);) N
(47) # () S 8 T () S 16 T (this.setTitle\(") S
(About J-VARO) str
("\);) p n
(48) # () N
(49) # () S 8 T () S 16 T (JPanel up = ) S
(new) K
( JPanel\(\);) p n
(50) # () S 8 T () S 16 T () N
(51) # () S 8 T () S 16 T (up.add\() S
(new) K
( JLabel\(Var.logo\)\);) p n
(52) # () S 8 T () S 16 T () N
(53) # () S 8 T () S 16 T (up.add\() S
(new) K
( JLabel\(") p
( 1.0) str
("\)\);) p n
(54) # () N
(55) # () S 8 T () S 16 T (JTabbedPane jtp = ) S
(new) K
( JTabbedPane\(\);) p n
(56) # () N
(57) # () N
(58) # () S 8 T () S 16 T (JEditorPane editorInfos = ) S
(new) K
( JEditorPane\(\);) p n
(59) # () S 8 T () S 16 T (editorInfos.setContentType\(") S
(text/html) str
("\);) p n
(60) # () S 8 T () S 16 T (editorInfos) N
(61) # () S 8 T () S 16 T () S 24 T () S 32 T (.setText\(") S
(<html><h2 align='center'> User interface for RegEfmT) str n
0 T (ool </h2>    ) S
(") p n
(62) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(<p align='center'>2013</p>) str
(") p n
(63) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(<br/>) str
(") p n
(64) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(<p align='center'><a  href='http://christop) str n
(AboutFrame.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (he.djemiel.emi.u-bordeaux1.fr/'>J-VARO web site</a></p>) str
(") p n
(65) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(<br/>) str
(") p n
(66) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(<p align='center'><a  href='http://www.yo) str n
0 T (utube.com/user/projectjvaro?feature=watch/'>YouTube channel</a></p>) S
(") p n
(67) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(<br/>) str
(") p n
(68) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(<p align='center'>\303M-^Ilodie Cassan<br/) str n
0 T (>Christophe Djemiel<br/>Thomas Faux<br/>Aur\303\251lie Leli\303\250vre<br/>Lucas Marmiesse</p> ) S
(") p n
(69) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(</html>) str
("\);) p n
(70) # () N
(71) # () S 8 T () S 16 T (editorInfos.addHyperlinkListener\() S
(this) k
(\);) p n
(72) # () S 8 T () S 16 T (editorInfos.setEditable\() S
(false) k
(\);) p n
(73) # () N
(74) # () N
(75) # () S 8 T () S 16 T (JEditorPane editorLicence = ) S
(new) K
( JEditorPane\(\);) p n
(76) # () S 8 T () S 16 T (editorLicence.setContentType\(") S
(text) str
("\);) p n
(77) # () N
(78) # () S 8 T () S 16 T () N
(79) # () S 8 T () S 16 T (String licenceContent="";) N
(80) # () S 8 T () S 16 T (BufferedReader in;) N
(81) # () S 8 T () S 16 T () S
(try) K
( {) p n
(82) # () S 8 T () S 16 T () S 24 T (in = ) S
(new) K
( BufferedReader\() p
(new) K
( FileReader\() p
(new) K
( File\(") p
(licence.txt) str
() p n
0 T ("\)\)\);) N
(83) # () S 8 T () S 16 T () S 24 T (String input = in.readLine\(\);) N
(84) # () N
(85) # () S 8 T () S 16 T () S 24 T () S
(while) K
( \(input != ) p
(null) k
(\) {) p n
(86) # () S 8 T () S 16 T () S 24 T () S 32 T (licenceContent+=input+") S
(\\n) str
(";) p n
(87) # () S 8 T () S 16 T () S 24 T () S 32 T (input = in.readLine\(\);) N
(88) # () S 8 T () S 16 T () S 24 T (}) N
(89) # () S 8 T () S 16 T () S 24 T () N
(90) # () S 8 T () S 16 T () S 24 T () N
(91) # () S 8 T () S 16 T () S 24 T () N
(92) # () S 8 T () S 16 T () S 24 T (in.close\(\);) N
(93) # () S 8 T () S 16 T (} ) S
(catch) K
( \(IOException e\) {) p n
(94) # () S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
(95) # () S 8 T () S 16 T (}) N
(96) # () N
(97) # () S 8 T () S 16 T (editorLicence.setText\(licenceContent\);) N
(98) # () S 8 T () S 16 T (editorLicence.setEditable\() S
(false) k
(\);) p n
(99) # () S 8 T () S 16 T (editorLicence.setCaretPosition\(0\);) N
(100) # () S 8 T () S 16 T () N
(101) # () S 8 T () S 16 T (jtp.add\(") S
(Infos) str
(", ) p
(new) K
( JScrollPane\(editorInfos\)\);) p n
(102) # () S 8 T () S 16 T (JScrollPane scrollLicence = ) S
(new) K
( JScrollPane\(editorLicence\);) p n
(103) # () S 8 T () S 16 T (jtp.add\(") S
(Licence) str
(", scrollLicence\);) p n
(104) # () N
(105) # () S 8 T () S 16 T (add\(up, BorderLayout.PAGE_START\);) N
(106) # () S 8 T () S 16 T (add\(jtp, BorderLayout.CENTER\);) N
(107) # () S 8 T () S 16 T (this.pack\(\);) N
(108) # () S 8 T () S 16 T (this.setSize\(550, 400\);) N
(109) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(110) # () S 8 T () S 16 T (this.setVisible\() S
(true) k
(\);) p n
(111) # () N
(112) # () S 8 T (}) N
(113) # () N
(114) # () S 8 T () S
(public) K
( ) p
(void) k
( hyperlinkUpdate\(HyperlinkEvent e\) {) p n
(115) # () S 8 T () S 16 T () S
(if) K
( \(e.getEventType\(\) == HyperlinkEvent.EventType.ACTIVATED\) {) p n
(116) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(117) # () S 8 T () S 16 T () S 24 T () S 32 T (Desktop d = Desktop.getDesktop\(\);) N
(118) # () S 8 T () S 16 T () S 24 T () S 32 T (d.browse\() S
(new) K
( URI\(e.getURL\(\).toString\(\)\)\);) p n
(119) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(IOException e1\) {) p n
(120) # () N
(121) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(URISyntaxException e1\) {) p n
(122) # () S 8 T () S 16 T () S 24 T () S 32 T (e1.printStackTrace\(\);) N
(123) # () S 8 T () S 16 T () S 24 T (}) N
(124) # () N
(125) # () S 8 T () S 16 T (}) N
(126) # () N
(AboutFrame.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/AboutFrame.java) (111/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 112
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(127) # () p 8 T (}) N
(128) # () N
(129) # (}) N
(AboutFrame.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/AboutFrame.java) (112/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 113
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.FlowLayout;) p n
(23) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(24) # () S
(import) K
( java.awt.event.ActionListener;) p n
(25) # () S
(import) K
( java.util.ArrayList;) p n
(26) # () S
(import) K
( java.util.List;) p n
(27) # () N
(28) # () S
(import) K
( javax.swing.BoxLayout;) p n
(29) # () S
(import) K
( javax.swing.JButton;) p n
(30) # () S
(import) K
( javax.swing.JFrame;) p n
(31) # () S
(import) K
( javax.swing.JLabel;) p n
(32) # () S
(import) K
( javax.swing.JOptionPane;) p n
(33) # () S
(import) K
( javax.swing.JPanel;) p n
(34) # () S
(import) K
( javax.swing.JScrollPane;) p n
(35) # () S
(import) K
( javax.swing.JTable;) p n
(36) # () S
(import) K
( javax.swing.table.DefaultTableModel;) p n
(37) # () N
(38) # () S
(import) K
( model.MetabolicNetworkItf;) p n
(39) # () S
(import) K
( model.Metabolite;) p n
(40) # () S
(import) K
( model.Reaction;) p n
(41) # () S
(import) K
( controler.MainControler;) p n
(42) # () S
(import) K
( controler.Var;) p n
(43) # () N
(44) # () S
(public) K
( ) p
(class) K
( ) p
(ImportReactionFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(45) # () N
(46) # () S 8 T () S
(private) K
( MyTableModel modelImport, modelChoice;) p n
(47) # () N
(48) # () S 8 T () S
(private) K
( List<Reaction> dbList, choiceList;) p n
(49) # () N
(50) # () S 8 T () S
(public) K
( ImportReactionFrame\(JFrame parent, ) p
(final) K
( MainControler controler\)) p n
0 T ( {) N
(51) # () S 8 T () S 16 T () S
(super) K
(\(parent\);) p n
(52) # () S 8 T () S 16 T (dbList=) S
(new) K
( ArrayList<Reaction>\(\);) p n
(53) # () S 8 T () S 16 T (choiceList=) S
(new) K
( ArrayList<Reaction>\(\);) p n
(54) # () S 8 T () S 16 T (this.setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(55) # () N
(56) # () S 8 T () S 16 T (MetabolicNetworkItf dbNetwork = controler.getDataBaseNetwork\(\);) N
(57) # () S 8 T () S 16 T () N
(58) # () S 8 T () S 16 T (String colName1 = ") S
(Enzyme name) str
(";) p n
(59) # () S 8 T () S 16 T (String colName2 = ") S
(Reversible) str
(";) p n
(60) # () S 8 T () S 16 T (String colName3 = ") S
(Reaction) str
(";) p n
(61) # () N
(62) # () S 8 T () S 16 T () S
(final) K
( JTable importReaction = ) p
(new) K
( JTable\(\);) p n
(63) # () S 8 T () S 16 T (modelImport = ) S
(new) K
( MyTableModel\(\);) p n
(64) # () S 8 T () S 16 T (modelImport.addColumn\(colName1\);) N
(ImportReactionFrame.java) (Page 1/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p 8 T () S 16 T (modelImport.addColumn\(colName2\);) N
(66) # () S 8 T () S 16 T (modelImport.addColumn\(colName3\);) N
(67) # () S 8 T () S 16 T (importReaction.setAutoCreateRowSorter\() S
(true) k
(\);) p n
(68) # () N
(69) # () S 8 T () S 16 T (List<Reaction> reactions = dbNetwork.getReactions\(\);) N
(70) # () N
(71) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : reactions\) {) p n
(72) # () S 8 T () S 16 T () S 24 T (dbList.add\(reac\);) N
(73) # () S 8 T () S 16 T (}) N
(74) # () N
(75) # () S 8 T () S 16 T (importReaction.setModel\(modelImport\);) N
(76) # () N
(77) # () S 8 T () S 16 T () S
(final) K
( JTable choiceReaction = ) p
(new) K
( JTable\(\);) p n
(78) # () S 8 T () S 16 T (modelChoice = ) S
(new) K
( MyTableModel\(\);) p n
(79) # () S 8 T () S 16 T (modelChoice.addColumn\(colName1\);) N
(80) # () S 8 T () S 16 T (modelChoice.addColumn\(colName2\);) N
(81) # () S 8 T () S 16 T (modelChoice.addColumn\(colName3\);) N
(82) # () S 8 T () S 16 T (choiceReaction.setModel\(modelChoice\);) N
(83) # () S 8 T () S 16 T (choiceReaction.setAutoCreateRowSorter\() S
(true) k
(\);) p n
(84) # () N
(85) # () S 8 T () S 16 T (reactions = controler.getNetwork\(\).getReactions\(\);) N
(86) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : reactions\) {) p n
(87) # () S 8 T () S 16 T () S 24 T (choiceList.add\(reac\);) N
(88) # () S 8 T () S 16 T (}) N
(89) # () S 8 T () S 16 T () N
(90) # () S 8 T () S 16 T (update\(\);) N
(91) # () N
(92) # () S 8 T () S 16 T (JButton selectButton = ) S
(new) K
( JButton\(Var.iconright\);) p n
(93) # () S 8 T () S 16 T (selectButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(94) # () N
(95) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(96) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \() p
(int) k
( i : importReaction.getSelectedRows\(\)\) {) p n
(97) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(boolean) k
( doIt = ) p
(true) k
(;) p n
(98) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(for) K
( \() p
(int) k
( j = 0; j < choiceReaction.getRo) p n
0 T (wCount\(\); j++\) {) N
(99) # () N
(100) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(modelImport.getValueAt\(i, 0\)) p n
0 T ( == modelChoice) N
(101) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (.getValueAt\(j, 0) N
0 T (\)\) {) N
(102) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (doIt = ) S
(false) k
(;) p n
(103) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (JOptionPane.showMessageD) N
0 T (ialog\() S
(null) k
(, ") p
(Reaction ) str
(") p n
(104) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (+ modelI) N
0 T (mport.getValueAt\(i, 0\)) N
(105) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (+ ") S
( is alre) str n
0 T (ady in your network) S
(", "",) p n
(106) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (JOptionP) N
0 T (ane.ERROR_MESSAGE\);) N
(107) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
(108) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(109) # () N
(110) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(doIt\) {) p n
(111) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (choiceList.add\(dbList.get\(i\)\);) N
(112) # () N
(113) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(114) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (update\(\);) N
(115) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(116) # () S 8 T () S 16 T () S 24 T (}) N
(117) # () N
(118) # () S 8 T () S 16 T (}\);) N
(119) # () N
(120) # () S 8 T () S 16 T (JPanel centerPanel = ) S
(new) K
( JPanel\(\);) p n
(121) # () S 8 T () S 16 T (centerPanel.setLayout\() S
(new) K
( FlowLayout\(\)\);) p n
(122) # () S 8 T () S 16 T () N
(123) # () S 8 T () S 16 T () N
(ImportReactionFrame.java) (Page 2/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/ImportReactionFrame.java) (113/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 114
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(124) # () p 8 T () S 16 T (JPanel dataBasePanel = ) S
(new) K
( JPanel\(\);) p n
(125) # () S 8 T () S 16 T (dataBasePanel.setLayout\() S
(new) K
( BoxLayout\(dataBasePanel, BoxLayout.P) p n
0 T (AGE_AXIS\)\);) N
(126) # () S 8 T () S 16 T (dataBasePanel.add\() S
(new) K
( JLabel\(") p
(Database) str
(",JLabel.CENTER\)\);) p n
(127) # () S 8 T () S 16 T (dataBasePanel.add\() S
(new) K
( JScrollPane\(importReaction\)\);) p n
(128) # () S 8 T () S 16 T () N
(129) # () S 8 T () S 16 T (JPanel networkPanel = ) S
(new) K
( JPanel\(\);) p n
(130) # () S 8 T () S 16 T (networkPanel.setLayout\() S
(new) K
( BoxLayout\(networkPanel, BoxLayout.PAG) p n
0 T (E_AXIS\)\);) N
(131) # () S 8 T () S 16 T (networkPanel.add\() S
(new) K
( JLabel\(") p
(Network) str
(",JLabel.CENTER\)\);) p n
(132) # () S 8 T () S 16 T (networkPanel.add\() S
(new) K
( JScrollPane\(choiceReaction\)\);) p n
(133) # () S 8 T () S 16 T () N
(134) # () S 8 T () S 16 T () N
(135) # () S 8 T () S 16 T (centerPanel.add\(dataBasePanel\);) N
(136) # () S 8 T () S 16 T (centerPanel.add\(selectButton\);) N
(137) # () S 8 T () S 16 T (centerPanel.add\(networkPanel\);) N
(138) # () N
(139) # () S 8 T () S 16 T () N
(140) # () S 8 T () S 16 T () N
(141) # () S 8 T () S 16 T (JPanel southPanel = ) S
(new) K
( JPanel\(\);) p n
(142) # () S 8 T () S 16 T (southPanel.setLayout\() S
(new) K
( FlowLayout\(\)\);) p n
(143) # () S 8 T () S 16 T (JButton okButton = ) S
(new) K
( JButton\(") p
(ok) str
("\);) p n
(144) # () S 8 T () S 16 T (okButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(145) # () N
(146) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(147) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(148) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(149) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(150) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(for) K
( \(Reaction reac : choiceList\){) p n
(151) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (controler.getNetwork\(\).addReacti) N
0 T (on\(reac.getName\(\), reac.getReactants\(\), reac.getProducts\(\), reac.isReversible\(\)\)) N
0 T (;) N
(152) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(for) K
( \(Metabolite m : reac.getList) p n
0 T (Products\(\)\) {) N
(153) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (    controler.getNetwork\(\).AddMe) N
0 T (tabolite\(m.getName\(\), m.getDescription\(\), m.isInternal\(\)\);) N
(154) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (} ) N
(155) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(for) K
( \(Metabolite m : reac.getList) p n
0 T (Reactants\(\)\) {) N
(156) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (    controler.getNetwork\(\).AddMe) N
0 T (tabolite\(m.getName\(\), m.getDescription\(\), m.isInternal\(\)\);) N
(157) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (} ) N
(158) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(159) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () N
(160) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (controler.notifyObservers\(\);) N
(161) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(162) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(163) # () S 8 T () S 16 T () S 24 T (}) N
(164) # () N
(165) # () S 8 T () S 16 T (}\);) N
(166) # () S 8 T () S 16 T (JButton cancelButton = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(167) # () S 8 T () S 16 T (southPanel.add\(okButton\);) N
(168) # () S 8 T () S 16 T (southPanel.add\(cancelButton\);) N
(169) # () S 8 T () S 16 T (cancelButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(170) # () N
(171) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(172) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(173) # () S 8 T () S 16 T () S 24 T (}) N
(174) # () S 8 T () S 16 T (}\);) N
(175) # () N
(176) # () S 8 T () S 16 T (this.add\(centerPanel, BorderLayout.CENTER\);) N
(177) # () S 8 T () S 16 T (this.add\(southPanel, BorderLayout.PAGE_END\);) N
(178) # () N
(179) # () S 8 T () S 16 T (setDefaultCloseOperation\(JFrame.DISPOSE_ON_CLOSE\);) N
(180) # () S 8 T () S 16 T (pack\(\);) N
(181) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(ImportReactionFrame.java) (Page 3/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(182) # () p 8 T () S 16 T (setVisible\() S
(true) k
(\);) p n
(183) # () S 8 T (}) N
(184) # () N
(185) # () S 8 T () S
(public) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(186) # () N
(187) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(188) # () S 8 T (}) N
(189) # () N
(190) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
(191) # () N
(192) # () S 8 T () S 16 T () S
(while) K
(\(modelImport.getRowCount\(\)>0\){) p n
(193) # () S 8 T () S 16 T () S 24 T (modelImport.removeRow\(0\);) N
(194) # () S 8 T () S 16 T (}) N
(195) # () S 8 T () S 16 T () S
(while) K
(\(modelChoice.getRowCount\(\)>0\){) p n
(196) # () S 8 T () S 16 T () S 24 T (modelChoice.removeRow\(0\);) N
(197) # () S 8 T () S 16 T (}) N
(198) # () S 8 T () S 16 T () N
(199) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : dbList\) {) p n
(200) # () S 8 T () S 16 T () S 24 T (modelImport.addRow\() S
(new) K
( Object[] { reac.getName\(\),) p n
(201) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (reac.isReversible\(\), reac.getStringReact) N
0 T (ion\(\) }\);) N
(202) # () N
(203) # () S 8 T () S 16 T (}) N
(204) # () N
(205) # () S 8 T () S 16 T () S
(for) K
( \(Reaction reac : choiceList\) {) p n
(206) # () S 8 T () S 16 T () S 24 T (modelChoice.addRow\() S
(new) K
( Object[] { reac.getName\(\),) p n
(207) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (reac.isReversible\(\), reac.getStringReact) N
0 T (ion\(\) }\);) N
(208) # () N
(209) # () S 8 T () S 16 T (}) N
(210) # () S 8 T (}) N
(211) # () N
(212) # () S 8 T () S
(// Display checkbox in tables) c n
(213) # () S
() p 8 T () S
(class) K
( ) p
(MyTableModel) L
( ) p
(extends) K
( DefaultTableModel {) p n
(214) # () S 8 T () S 16 T () S
(public) K
( Class getColumnClass\() p
(int) k
( c\) {) p n
(215) # () S 8 T () S 16 T () S 24 T () S
(return) K
( getValueAt\(0, c\).getClass\(\);) p n
(216) # () S 8 T () S 16 T (}) N
(217) # () N
(218) # () S 8 T () S 16 T () S
(public) K
( ) p
(boolean) k
( isCellEditable\() p
(int) k
( iRowIndex, ) p
(int) k
( iColumnIndex\) {) p n
(219) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(220) # () S 8 T () S 16 T (}) N
(221) # () S 8 T (}) N
(222) # () N
(223) # (}) N
(ImportReactionFrame.java) (Page 4/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/ImportReactionFrame.java) (114/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 115
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view.popup;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.awt.Dimension;) p n
(23) # () S
(import) K
( java.awt.FlowLayout;) p n
(24) # () S
(import) K
( java.awt.event.ActionEvent;) p n
(25) # () S
(import) K
( java.awt.event.ActionListener;) p n
(26) # () S
(import) K
( java.util.ArrayList;) p n
(27) # () S
(import) K
( java.util.List;) p n
(28) # () N
(29) # () S
(import) K
( javax.swing.BoxLayout;) p n
(30) # () S
(import) K
( javax.swing.DefaultListModel;) p n
(31) # () S
(import) K
( javax.swing.JButton;) p n
(32) # () S
(import) K
( javax.swing.JFrame;) p n
(33) # () S
(import) K
( javax.swing.JLabel;) p n
(34) # () S
(import) K
( javax.swing.JList;) p n
(35) # () S
(import) K
( javax.swing.JPanel;) p n
(36) # () S
(import) K
( javax.swing.JScrollPane;) p n
(37) # () N
(38) # () S
(import) K
( model.ElementaryMode;) p n
(39) # () S
(import) K
( model.Metabolite;) p n
(40) # () S
(import) K
( model.Reaction;) p n
(41) # () S
(import) K
( controler.Filter;) p n
(42) # () S
(import) K
( controler.MainControler;) p n
(43) # () S
(import) K
( controler.Var;) p n
(44) # () N
(45) # () S
(public) K
( ) p
(class) K
( ) p
(FilterFrame) L
( ) p
(extends) K
( PopUpAbs {) p n
(46) # () N
(47) # () S 8 T () S
(private) K
( List<ElementaryMode> modes;) p n
(48) # () S 8 T () S
(private) K
( List<Integer> indices = ) p
(new) K
( ArrayList<Integer>\(\);) p n
(49) # () S 8 T () S
(private) K
( List<ElementaryMode> newModes = ) p
(new) K
( ArrayList<ElementaryMode>\(\);) p n
(50) # () S 8 T () S
(private) K
( Filter filter;) p n
(51) # () S 8 T () S
(private) K
( JList<String> filterReacsList = ) p
(new) K
( JList<String>\(\);) p n
(52) # () S 8 T () S
(private) K
( JList<String> filterMetabsList = ) p
(new) K
( JList<String>\(\);) p n
(53) # () N
(54) # () S 8 T () S
(public) K
( FilterFrame\(JFrame parent, List<ElementaryMode> modes,) p n
(55) # () S 8 T () S 16 T () S 24 T (Filter filter, ) S
(final) K
( MainControler controler\) {) p n
(56) # () S 8 T () S 16 T () S
(super) K
(\(parent\);) p n
(57) # () S 8 T () S 16 T (this.modes = modes;) N
(58) # () S 8 T () S 16 T (this.filter = filter;) N
(59) # () S 8 T () S 16 T (this.setDefaultCloseOperation\(JFrame.DISPOSE_ON_CLOSE\);) N
(60) # () S 8 T () S 16 T (this.setTitle\(") S
(Set filter) str
("\);) p n
(61) # () N
(62) # () S 8 T () S 16 T (Dimension d = ) S
(new) K
( Dimension\(300, 500\);) p n
(63) # () S 8 T () S 16 T (filterReacsList.setModel\() S
(new) K
( DefaultListModel<String>\(\)\);) p n
(64) # () S 8 T () S 16 T (filterReacsList.setMaximumSize\(d\);) N
(65) # () S 8 T () S 16 T (filterMetabsList.setModel\() S
(new) K
( DefaultListModel<String>\(\)\);) p n
(FilterFrame.java) (Page 1/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T (filterMetabsList.setMaximumSize\(d\);) N
(67) # () S 8 T () S 16 T () N
(68) # () S 8 T () S 16 T (JPanel centerPanel = ) S
(new) K
( JPanel\(\);) p n
(69) # () N
(70) # () S 8 T () S 16 T (centerPanel.setLayout\() S
(new) K
( BoxLayout\(centerPanel, BoxLayout.PAGE_) p n
0 T (AXIS\)\);) N
(71) # () N
(72) # () S 8 T () S 16 T (JPanel reactionsPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(73) # () N
(74) # () S 8 T () S 16 T (JPanel reactionsListPanel = ) S
(new) K
( JPanel\(\);) p n
(75) # () S 8 T () S 16 T (reactionsListPanel.setLayout\() S
(new) K
( BoxLayout\(reactionsListPanel,) p n
(76) # () S 8 T () S 16 T () S 24 T () S 32 T (BoxLayout.PAGE_AXIS\)\);) N
(77) # () S 8 T () S 16 T (reactionsListPanel.add\() S
(new) K
( JLabel\(") p
(Your network:) str
(", JLabel.CENTER\)\);) p n
(78) # () S 8 T () S 16 T (reactionsListPanel.add\() S
(new) K
( JLabel\(") p
(Reactions) str
(", JLabel.CENTER\)\);) p n
(79) # () S 8 T () S 16 T () S
(final) K
( JList<Reaction> reactionsList = ) p
(new) K
( JList<Reaction>\(\);) p n
(80) # () S 8 T () S 16 T (reactionsList.setModel\() S
(new) K
( DefaultListModel<Reaction>\(\)\);) p n
(81) # () S 8 T () S 16 T (reactionsList.setMaximumSize\(d\);) N
(82) # () S 8 T () S 16 T () S
(for) K
( \(Reaction r : controler.getNetwork\(\).getReactions\(\)\) {) p n
(83) # () S 8 T () S 16 T () S 24 T (\(\(DefaultListModel<Reaction>\) reactionsList.getModel\(\)\)) N
(84) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.addElement\(r\);) N
(85) # () N
(86) # () S 8 T () S 16 T (}) N
(87) # () S 8 T () S 16 T (reactionsListPanel.add\() S
(new) K
( JScrollPane\(reactionsList\)\);) p n
(88) # () S 8 T () S 16 T (reactionsPanel.add\(reactionsListPanel\);) N
(89) # () S 8 T () S 16 T (JButton addReac = ) S
(new) K
( JButton\(Var.iconright\);) p n
(90) # () N
(91) # () S 8 T () S 16 T (addReac.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(92) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(93) # () N
(94) # () S 8 T () S 16 T () S 24 T () S 32 T (List<Reaction> selectedReacs = reactionsList) N
(95) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getSelectedValuesList\(\);) N
(96) # () N
(97) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Reaction r : selectedReacs\) {) p n
(98) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (getFilter\(\).addReaction\(r\);) N
(99) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(100) # () N
(101) # () S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
(102) # () S 8 T () S 16 T () S 24 T (}) N
(103) # () N
(104) # () S 8 T () S 16 T (}\);) N
(105) # () N
(106) # () S 8 T () S 16 T (reactionsPanel.add\(addReac\);) N
(107) # () N
(108) # () S 8 T () S 16 T (JPanel reactionsFilterPanel = ) S
(new) K
( JPanel\(\);) p n
(109) # () S 8 T () S 16 T (reactionsFilterPanel.setLayout\() S
(new) K
( BoxLayout\(reactionsFilterPane) p n
0 T (l,) N
(110) # () S 8 T () S 16 T () S 24 T () S 32 T (BoxLayout.PAGE_AXIS\)\);) N
(111) # () S 8 T () S 16 T (reactionsFilterPanel.add\() S
(new) K
( JLabel\(") p
(The filter:) str
(", JLabel.CENTER\)\);) p n
(112) # () S 8 T () S 16 T (reactionsFilterPanel.add\() S
(new) K
( JLabel\(") p
(Reactions) str
(", JLabel.CENTER\)\);) p n
(113) # () S 8 T () S 16 T (reactionsFilterPanel.add\() S
(new) K
( JScrollPane\(filterReacsList\)\);) p n
(114) # () S 8 T () S 16 T (reactionsPanel.add\(reactionsFilterPanel\);) N
(115) # () N
(116) # () S 8 T () S 16 T (JPanel metabolitesPanel = ) S
(new) K
( JPanel\() p
(new) K
( FlowLayout\(\)\);) p n
(117) # () N
(118) # () S 8 T () S 16 T (JPanel metabolitesListPanel = ) S
(new) K
( JPanel\(\);) p n
(119) # () S 8 T () S 16 T (metabolitesListPanel.setLayout\() S
(new) K
( BoxLayout\(metabolitesListPane) p n
0 T (l,) N
(120) # () S 8 T () S 16 T () S 24 T () S 32 T (BoxLayout.PAGE_AXIS\)\);) N
(121) # () S 8 T () S 16 T (metabolitesListPanel.add\() S
(new) K
( JLabel\(") p
(Metabolites) str
(", JLabel.CENTER\)\);) p n
(122) # () S 8 T () S 16 T () S
(final) K
( JList<Metabolite> metabolitesList = ) p
(new) K
( JList<Metabolite>\() p n
0 T (\);) N
(123) # () S 8 T () S 16 T (metabolitesList.setModel\() S
(new) K
( DefaultListModel<Metabolite>\(\)\);) p n
(124) # () S 8 T () S 16 T (metabolitesList.setMaximumSize\(d\);) N
(125) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite m : controler.getNetwork\(\).getMetabolites\(\)\) {) p n
(126) # () S 8 T () S 16 T () S 24 T (\(\(DefaultListModel<Metabolite>\) metabolitesList.getModel) N
0 T (\(\)\)) N
(FilterFrame.java) (Page 2/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/FilterFrame.java) (115/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 116
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(127) # () p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.addElement\(m\);) N
(128) # () N
(129) # () S 8 T () S 16 T (}) N
(130) # () S 8 T () S 16 T (metabolitesListPanel.add\() S
(new) K
( JScrollPane\(metabolitesList\)\);) p n
(131) # () S 8 T () S 16 T (metabolitesPanel.add\(metabolitesListPanel\);) N
(132) # () S 8 T () S 16 T (JButton addMetab = ) S
(new) K
( JButton\(Var.iconright\);) p n
(133) # () N
(134) # () S 8 T () S 16 T (addMetab.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(135) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(136) # () N
(137) # () S 8 T () S 16 T () S 24 T () S 32 T (List<Metabolite> selectedMetabs = metabolitesLis) N
0 T (t) N
(138) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getSelectedValuesList\(\);) N
(139) # () N
(140) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(Metabolite m : selectedMetabs\) {) p n
(141) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (getFilter\(\).addMetabolite\(m\);) N
(142) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(143) # () N
(144) # () S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
(145) # () S 8 T () S 16 T () S 24 T (}) N
(146) # () N
(147) # () S 8 T () S 16 T (}\);) N
(148) # () N
(149) # () S 8 T () S 16 T (metabolitesPanel.add\(addMetab\);) N
(150) # () N
(151) # () S 8 T () S 16 T (JPanel metabolitesFilterPanel = ) S
(new) K
( JPanel\(\);) p n
(152) # () S 8 T () S 16 T (metabolitesFilterPanel.setLayout\() S
(new) K
( BoxLayout\(metabolitesFilter) p n
0 T (Panel,) N
(153) # () S 8 T () S 16 T () S 24 T () S 32 T (BoxLayout.PAGE_AXIS\)\);) N
(154) # () S 8 T () S 16 T (metabolitesFilterPanel.add\() S
(new) K
( JLabel\(") p
(Metabolites) str
(", JLabel.CENTER\)) p n
0 T (\);) N
(155) # () S 8 T () S 16 T (metabolitesFilterPanel.add\() S
(new) K
( JScrollPane\(filterMetabsList\)\);) p n
(156) # () N
(157) # () S 8 T () S 16 T (metabolitesPanel.add\(metabolitesFilterPanel\);) N
(158) # () N
(159) # () S 8 T () S 16 T (centerPanel.add\(reactionsPanel\);) N
(160) # () S 8 T () S 16 T (centerPanel.add\(metabolitesPanel\);) N
(161) # () N
(162) # () S 8 T () S 16 T (JButton cancelButton = ) S
(new) K
( JButton\(") p
(cancel) str
("\);) p n
(163) # () S 8 T () S 16 T (cancelButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(164) # () N
(165) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(166) # () S 8 T () S 16 T () S 24 T () S 32 T (dispose\(\);) N
(167) # () S 8 T () S 16 T () S 24 T (}) N
(168) # () S 8 T () S 16 T (}\);) N
(169) # () N
(170) # () S 8 T () S 16 T (JButton okButton = ) S
(new) K
( JButton\(") p
(ok) str
("\);) p n
(171) # () S 8 T () S 16 T (okButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(172) # () N
(173) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(174) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(noErrors\(\)\) {) p n
(175) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (okPressed = ) S
(true) k
(;) p n
(176) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (setModes\(\);) N
(177) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (dispose\(\);) N
(178) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(179) # () S 8 T () S 16 T () S 24 T (}) N
(180) # () S 8 T () S 16 T (}\);) N
(181) # () N
(182) # () S 8 T () S 16 T (JButton resetButton = ) S
(new) K
( JButton\(") p
(Reset filter) str
("\);) p n
(183) # () S 8 T () S 16 T (resetButton.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
(184) # () N
(185) # () S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
(186) # () N
(187) # () S 8 T () S 16 T () S 24 T () S 32 T (getFilter\(\).reset\(\);) N
(188) # () S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
(189) # () S 8 T () S 16 T () S 24 T (}) N
(FilterFrame.java) (Page 3/4) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(190) # () p 8 T () S 16 T (}\);) N
(191) # () N
(192) # () S 8 T () S 16 T (JPanel bottomPanel = ) S
(new) K
( JPanel\(\);) p n
(193) # () S 8 T () S 16 T (bottomPanel.add\(okButton\);) N
(194) # () S 8 T () S 16 T (bottomPanel.add\(cancelButton\);) N
(195) # () S 8 T () S 16 T (bottomPanel.add\(resetButton\);) N
(196) # () N
(197) # () S 8 T () S 16 T (add\(centerPanel, BorderLayout.CENTER\);) N
(198) # () S 8 T () S 16 T (add\(bottomPanel, BorderLayout.PAGE_END\);) N
(199) # () N
(200) # () S 8 T () S 16 T (update\(\);) N
(201) # () N
(202) # () S 8 T () S 16 T (this.pack\(\);) N
(203) # () S 8 T () S 16 T (setLocationRelativeTo\() S
(null) k
(\);) p n
(204) # () S 8 T () S 16 T (this.setVisible\() S
(true) k
(\);) p n
(205) # () S 8 T (}) N
(206) # () N
(207) # () S 8 T () S
(private) K
( ) p
(boolean) k
( noErrors\(\) {) p n
(208) # () S 8 T () S 16 T () S
(return) K
( ) p
(true) k
(;) p n
(209) # () S 8 T (}) N
(210) # () N
(211) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
(212) # () N
(213) # () S 8 T () S 16 T (\(\(DefaultListModel<String>\) filterReacsList.getModel\(\)\)) N
(214) # () S 8 T () S 16 T () S 24 T () S 32 T (.removeAllElements\(\);) N
(215) # () S 8 T () S 16 T (\(\(DefaultListModel<String>\) filterMetabsList.getModel\(\)\)) N
(216) # () S 8 T () S 16 T () S 24 T () S 32 T (.removeAllElements\(\);) N
(217) # () N
(218) # () S 8 T () S 16 T () S
(for) K
( \(Reaction r : filter.getReactions\(\)\) {) p n
(219) # () S 8 T () S 16 T () S 24 T (\(\(DefaultListModel<String>\) filterReacsList.getModel\(\)\)) N
(220) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.addElement\(r.getName\(\)\);) N
(221) # () S 8 T () S 16 T (}) N
(222) # () S 8 T () S 16 T () S
(for) K
( \(Metabolite m : filter.getMetabolites\(\)\) {) p n
(223) # () S 8 T () S 16 T () S 24 T (\(\(DefaultListModel<String>\) filterMetabsList.getModel\(\)\)) N
(224) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.addElement\(m.getName\(\)\);) N
(225) # () S 8 T () S 16 T (}) N
(226) # () S 8 T (}) N
(227) # () N
(228) # () S 8 T () S
(public) K
( ) p
(void) k
( setModes\(\) {) p n
(229) # () N
(230) # () S 8 T () S 16 T (indices.clear\(\);) N
(231) # () S 8 T () S 16 T (newModes.clear\(\);) N
(232) # () N
(233) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0;i<modes.size\(\);i++\) {) p n
(234) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(filter.accepts\(modes.get\(i\)\)\) {) p n
(235) # () S 8 T () S 16 T () S 24 T () S 32 T (newModes.add\(modes.get\(i\)\);) N
(236) # () S 8 T () S 16 T () S 24 T () S 32 T (indices.add\(i+1\);) N
(237) # () S 8 T () S 16 T () S 24 T (}) N
(238) # () S 8 T () S 16 T (}) N
(239) # () S 8 T (}) N
(240) # () N
(241) # () S 8 T () S
(public) K
( List<ElementaryMode> getNewModes\(\) {) p n
(242) # () S 8 T () S 16 T () S
(return) K
( newModes;) p n
(243) # () S 8 T (}) N
(244) # () N
(245) # () S 8 T () S
(public) K
( List<Integer> getIndices\(\) {) p n
(246) # () S 8 T () S 16 T () S
(return) K
( indices;) p n
(247) # () S 8 T (}) N
(248) # () S 8 T () N
(249) # () S 8 T () S
(public) K
( Filter getFilter\(\) {) p n
(250) # () S 8 T () S 16 T () S
(return) K
( filter;) p n
(251) # () S 8 T (}) N
(252) # (}) N
(FilterFrame.java) (Page 4/4) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/popup/FilterFrame.java) (116/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 117
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.BorderLayout;) p n
(22) # () S
(import) K
( java.util.List;) p n
(23) # () S
(import) K
( java.util.Observable;) p n
(24) # () S
(import) K
( java.util.Observer;) p n
(25) # () N
(26) # () S
(import) K
( javax.swing.DefaultListModel;) p n
(27) # () S
(import) K
( javax.swing.JButton;) p n
(28) # () S
(import) K
( javax.swing.JList;) p n
(29) # () S
(import) K
( javax.swing.JPanel;) p n
(30) # () S
(import) K
( javax.swing.JScrollPane;) p n
(31) # () S
(import) K
( javax.swing.JToolBar;) p n
(32) # () S
(import) K
( javax.swing.ListSelectionModel;) p n
(33) # () N
(34) # () S
(import) K
( controler.MainControler;) p n
(35) # () S
(import) K
( controler.RulesListSelectionListener;) p n
(36) # () S
(import) K
( controler.Var;) p n
(37) # () S
(import) K
( controler.rule.AddRuleListener;) p n
(38) # () S
(import) K
( controler.rule.DelRuleListener;) p n
(39) # () S
(import) K
( controler.rule.EditRuleListener;) p n
(40) # () N
(41) # () S
(public) K
( ) p
(class) K
( ) p
(RulesPanel) L
( ) p
(extends) K
( JPanel ) p
(implements) K
( Observer {) p n
(42) # () N
(43) # () N
(44) # () N
(45) # () S 8 T () S
(private) K
( JButton buttonajoutrule = ) p
(new) K
( JButton\(Var.iconajout\);) p n
(46) # () S 8 T () S
(private) K
( JButton buttonmodifrule = ) p
(new) K
( JButton\(Var.iconmodif\);) p n
(47) # () S 8 T () S
(private) K
( JButton buttonsupprule = ) p
(new) K
( JButton\(Var.iconsupp\);) p n
(48) # () N
(49) # () S 8 T () S
(private) K
( MainControler controler;) p n
(50) # () N
(51) # () S 8 T () S
(private) K
( JList<String> listRule;) p n
(52) # () S 8 T () S
(private) K
( DefaultListModel<String> model;) p n
(53) # () N
(54) # () S 8 T () S
(public) K
( RulesPanel\(MainControler controler\) {) p n
(55) # () N
(56) # () S 8 T () S 16 T (this.controler = controler;) N
(57) # () N
(58) # () S 8 T () S 16 T (buttonajoutrule.setEnabled\() S
(false) k
(\);) p n
(59) # () S 8 T () S 16 T (buttonmodifrule.setEnabled\() S
(false) k
(\);) p n
(60) # () S 8 T () S 16 T (buttonsupprule.setEnabled\() S
(false) k
(\);) p n
(61) # () N
(62) # () S 8 T () S 16 T (buttonajoutrule.setToolTipText\(") S
(Add a rule) str
("\);) p n
(63) # () S 8 T () S 16 T (buttonmodifrule.setToolTipText\(") S
(Edit) str
("\);) p n
(64) # () S 8 T () S 16 T (buttonsupprule.setToolTipText\(") S
(Remove) str
("\);) p n
(65) # () N
(RulesPanel.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(66) # () p 8 T () S 16 T (buttonsupprule.addActionListener\() S
(new) K
( DelRuleListener\(controler, ) p
() k n
0 T (this) S
(\)\);) p n
(67) # () S 8 T () S 16 T (buttonajoutrule.addActionListener\() S
(new) K
( AddRuleListener\(controler\)) p n
0 T (\);) N
(68) # () S 8 T () S 16 T (buttonmodifrule) N
(69) # () S 8 T () S 16 T () S 24 T () S 32 T (.addActionListener\() S
(new) K
( EditRuleListener\(controle) p n
0 T (r, ) S
(this) k
(\)\);) p n
(70) # () N
(71) # () S 8 T () S 16 T (JToolBar toolbarrule = ) S
(new) K
( JToolBar\(\);) p n
(72) # () S 8 T () S 16 T (toolbarrule.setFloatable\() S
(false) k
(\);) p n
(73) # () S 8 T () S 16 T (model = ) S
(new) K
( DefaultListModel<String>\(\);) p n
(74) # () S 8 T () S 16 T (listRule = ) S
(new) K
( JList<String>\(model\);) p n
(75) # () S 8 T () S 16 T (listRule.setSelectionMode\(ListSelectionModel.SINGLE_SELECTION\);) N
(76) # () S 8 T () S 16 T (listRule.addListSelectionListener\() S
(new) K
( RulesListSelectionListener) p n
0 T (\() S
(this) k
(,) p n
(77) # () S 8 T () S 16 T () S 24 T () S 32 T (listRule\)\);) N
(78) # () S 8 T () S 16 T () N
(79) # () S 8 T () S 16 T () S
(//delete key delete rule) c n
(80) # () S
() p 8 T () S 16 T (listRule.addKeyListener\() S
(new) K
( DelRuleListener\(controler, ) p
(this) k
(\)\);) p n
(81) # () N
(82) # () S 8 T () S 16 T (toolbarrule.add\(buttonajoutrule\);) N
(83) # () S 8 T () S 16 T (toolbarrule.add\(buttonmodifrule\);) N
(84) # () S 8 T () S 16 T (toolbarrule.add\(buttonsupprule\);) N
(85) # () S 8 T () S 16 T (setLayout\() S
(new) K
( BorderLayout\(\)\);) p n
(86) # () S 8 T () S 16 T (add\(toolbarrule, BorderLayout.PAGE_START\);) N
(87) # () S 8 T () S 16 T (add\() S
(new) K
( JScrollPane\(listRule\)\);) p n
(88) # () S 8 T () S 16 T (controler.addObserver\() S
(this) k
(\);) p n
(89) # () N
(90) # () S 8 T (}) N
(91) # () N
(92) # () S 8 T () S
(public) K
( ) p
(void) k
( setEnableButtons\() p
(boolean) k
( enabled\) {) p n
(93) # () S 8 T () S 16 T (buttonmodifrule.setEnabled\(enabled\);) N
(94) # () S 8 T () S 16 T (buttonsupprule.setEnabled\(enabled\);) N
(95) # () N
(96) # () S 8 T (}) N
(97) # () N
(98) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(Observable o, Object arg\) {) p n
(99) # () N
(100) # () S 8 T () S 16 T (buttonajoutrule.setEnabled\(controler.hasLoadedProject\(\)\);) N
(101) # () N
(102) # () S 8 T () S 16 T () S
(if) K
( \(!model.isEmpty\(\)\) {) p n
(103) # () S 8 T () S 16 T () S 24 T (model.removeAllElements\(\);) N
(104) # () S 8 T () S 16 T (}) N
(105) # () S 8 T () S 16 T (List<String> listRules = controler.getRules\(\);) N
(106) # () S 8 T () S 16 T () S
(for) K
( \(String rule : listRules\) {) p n
(107) # () S 8 T () S 16 T () S 24 T (model.addElement\(rule\);) N
(108) # () S 8 T () S 16 T (}) N
(109) # () S 8 T () S 16 T (buttonmodifrule.setEnabled\(listRule.getSelectedValue\(\) != ) S
(null) k
(\);) p n
(110) # () S 8 T () S 16 T (buttonsupprule.setEnabled\(listRule.getSelectedValue\(\) != ) S
(null) k
(\);) p n
(111) # () N
(112) # () S 8 T (}) N
(113) # () N
(114) # () S 8 T () S
(public) K
( JList<String> getList\(\) {) p n
(115) # () S 8 T () S 16 T () S
(return) K
( listRule;) p n
(116) # () S 8 T (}) N
(117) # () N
(118) # () S 8 T () S
(public) K
( String getSelected\(\) {) p n
(119) # () S 8 T () S 16 T () S
(return) K
( listRule.getSelectedValue\(\);) p n
(120) # () S 8 T (}) N
(121) # () N
(122) # (}) N
(RulesPanel.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/RulesPanel.java) (117/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 118
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.util.List;) p n
(22) # () N
(23) # () S
(import) K
( javax.swing.JTable;) p n
(24) # () S
(import) K
( javax.swing.table.DefaultTableModel;) p n
(25) # () S
(import) K
( javax.swing.table.TableColumn;) p n
(26) # () N
(27) # () S
(import) K
( controler.MainControler;) p n
(28) # () N
(29) # () S
(public) K
( ) p
(class) K
( ) p
(ReactionsTable) L
( ) p
(extends) K
( JTable {) p n
(30) # () N
(31) # () S 8 T () S
(private) K
( ) p
(static) K
( ReactionsTable instance = ) p
(null) k
(;) p n
(32) # () S 8 T () S
(private) K
( MainControler controler;) p n
(33) # () S 8 T () S
(private) K
( String col2;) p n
(34) # () N
(35) # () S 8 T () S
(private) K
( ReactionsTable\(MainControler controler, String col1, String col2) p n
0 T (,) N
(36) # () S 8 T () S 16 T () S 24 T (String col3\) {) N
(37) # () S 8 T () S 16 T () S
(super) K
(\(0, 3\);) p n
(38) # () N
(39) # () S 8 T () S 16 T (this.col2 = col2;) N
(40) # () N
(41) # () S 8 T () S 16 T (MyTableModel model = ) S
(new) K
( MyTableModel\(\);) p n
(42) # () S 8 T () S 16 T (this.setModel\(model\);) N
(43) # () N
(44) # () S 8 T () S 16 T (model.addColumn\(col1\);) N
(45) # () S 8 T () S 16 T (model.addColumn\(col2\);) N
(46) # () S 8 T () S 16 T (model.addColumn\(col3\);) N
(47) # () N
(48) # () S 8 T () S 16 T (TableColumn column = getColumnModel\(\).getColumn\(1\);) N
(49) # () S 8 T () S 16 T (column.setPreferredWidth\(90\);) N
(50) # () S 8 T () S 16 T (column.setMaxWidth\(90\);) N
(51) # () N
(52) # () S 8 T () S 16 T (setAutoCreateRowSorter\() S
(true) k
(\);) p n
(53) # () N
(54) # () S 8 T () S 16 T (this.controler = controler;) N
(55) # () N
(56) # () S 8 T (}) N
(57) # () N
(58) # () S 8 T () S
(// Diplay checkboxes in the tables) c n
(59) # () S
() p 8 T () S
(class) K
( ) p
(MyTableModel) L
( ) p
(extends) K
( DefaultTableModel {) p n
(60) # () S 8 T () S 16 T () S
(public) K
( Class getColumnClass\() p
(int) k
( c\) {) p n
(61) # () S 8 T () S 16 T () S 24 T () S
(return) K
( getValueAt\(0, c\).getClass\(\);) p n
(62) # () S 8 T () S 16 T (}) N
(63) # () N
(64) # () S 8 T () S 16 T () S
(public) K
( ) p
(boolean) k
( isCellEditable\() p
(int) k
( iRowIndex, ) p
(int) k
( iColumnIndex\) {) p n
(ReactionsTable.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(65) # () p n
(66) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(getColumnName\(iColumnIndex\) == col2\) {) p n
(67) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(true) k
(;) p n
(68) # () S 8 T () S 16 T () S 24 T (}) N
(69) # () N
(70) # () S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(false) k
(;) p n
(71) # () S 8 T () S 16 T (}) N
(72) # () S 8 T (}) N
(73) # () N
(74) # () S 8 T () S
(public) K
( ) p
(static) K
( ReactionsTable getInstance\(MainControler controler,) p n
(75) # () S 8 T () S 16 T () S 24 T (String c1, String c2, String c3\) {) N
(76) # () S 8 T () S 16 T () S
(if) K
( \(instance == ) p
(null) k
(\) {) p n
(77) # () S 8 T () S 16 T () S 24 T () S
(return) K
( instance = ) p
(new) K
( ReactionsTable\(controler, c1, c2, ) p n
0 T (c3\);) N
(78) # () S 8 T () S 16 T (}) N
(79) # () S 8 T () S 16 T () S
(return) K
( instance;) p n
(80) # () S 8 T (}) N
(81) # () N
(82) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
(83) # () N
(84) # () S 8 T () S 16 T () S
(// rows are deleted and reloaded) c n
(85) # () S
() p 8 T () S 16 T () S
(while) K
( \(getModel\(\).getRowCount\(\) > 0\) {) p n
(86) # () S 8 T () S 16 T () S 24 T (\(\(MyTableModel\) this.getModel\(\)\).removeRow\(0\);) N
(87) # () S 8 T () S 16 T (}) N
(88) # () N
(89) # () S 8 T () S 16 T () S
(// Controller give the new states of the reactions) c n
(90) # () S
() p 8 T () S 16 T (List<Object[]> listeReac = controler.getReactions\(\);) N
(91) # () N
(92) # () S 8 T () S 16 T () S
(for) K
( \(Object[] reac : listeReac\) {) p n
(93) # () S 8 T () S 16 T () S 24 T (\(\(MyTableModel\) this.getModel\(\)\).addRow\(reac\);) N
(94) # () S 8 T () S 16 T (}) N
(95) # () N
(96) # () S 8 T (}) N
(97) # () N
(98) # (}) N
(ReactionsTable.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/ReactionsTable.java) (118/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 119
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(package) K
( view;) p n
(20) # () N
(21) # () S
(import) K
( java.awt.Dimension;) p n
(22) # () S
(import) K
( java.io.File;) p n
(23) # () S
(import) K
( java.util.ArrayList;) p n
(24) # () S
(import) K
( java.util.List;) p n
(25) # () S
(import) K
( java.util.Map;) p n
(26) # () S
(import) K
( java.util.Observable;) p n
(27) # () S
(import) K
( java.util.Observer;) p n
(28) # () N
(29) # () S
(import) K
( javax.swing.JPanel;) p n
(30) # () S
(import) K
( javax.swing.JTabbedPane;) p n
(31) # () N
(32) # () N
(33) # () S
(import) K
( controler.ChangeTabListener;) p n
(34) # () S
(import) K
( controler.MainControler;) p n
(35) # () N
(36) # () S
(public) K
( ) p
(class) K
( ) p
(RightPanel) L
( ) p
(extends) K
( JTabbedPane ) p
(implements) K
( Observer {) p n
(37) # () N
(38) # () S 8 T () S
(private) K
( MainControler controler;) p n
(39) # () S 8 T () S
(private) K
( List<VisualizationPanel> listVisuPanels = ) p
(new) K
( ArrayList<Visualiz) p n
0 T (ationPanel>\(\);) N
(40) # () S 8 T () S
(private) K
( List<ResultsPanel> listResPanels = ) p
(new) K
( ArrayList<ResultsPanel>\(\)) p n
0 T (;) N
(41) # () N
(42) # () S 8 T () S
(public) K
( RightPanel\(MainControler controler\) {) p n
(43) # () S 8 T () S 16 T (this.controler = controler;) N
(44) # () N
(45) # () S 8 T () S 16 T (controler.addObserver\() S
(this) k
(\);) p n
(46) # () N
(47) # () S 8 T () S 16 T (add\(") S
(Reactions) str
(", ) p
(new) K
( ReactionsPanel\(controler\)\);) p n
(48) # () N
(49) # () S 8 T () S 16 T (add\(") S
(Rules) str
(", ) p
(new) K
( RulesPanel\(controler\)\);) p n
(50) # () N
(51) # () S 8 T () S 16 T (setPreferredSize\() S
(new) K
( Dimension\(600, 400\)\);) p n
(52) # () N
(53) # () S 8 T () S 16 T (this.addChangeListener\() S
(new) K
( ChangeTabListener\() p
(this) k
(\)\);) p n
(54) # () N
(55) # () S 8 T () S 16 T (this.initCloseTab\(\);) N
(56) # () N
(57) # () S 8 T (}) N
(58) # () N
(59) # () S 8 T () S
(public) K
( ) p
(void) k
( removeVisuPane\(JPanel panel\) {) p n
(60) # () S 8 T () S 16 T (listVisuPanels.remove\(\(VisualizationPanel\) panel\);) N
(61) # () S 8 T () S 16 T (this.remove\(panel\);) N
(62) # () S 8 T (}) N
(63) # () N
(RightPanel.java) (Page 1/3) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(64) # () p 8 T () S
(public) K
( ) p
(void) k
( removeResPane\(JPanel panel\) {) p n
(65) # () S 8 T () S 16 T (listResPanels.remove\(\(ResultsPanel\) panel\);) N
(66) # () S 8 T () S 16 T (this.remove\(panel\);) N
(67) # () S 8 T (}) N
(68) # () S 8 T () N
(69) # () S 8 T () S
(public) K
( ) p
(void) k
( resetPanes\(\){) p n
(70) # () S 8 T () S 16 T () S
(while) K
( \(listVisuPanels.size\(\)>0\){) p n
(71) # () S 8 T () S 16 T () S 24 T (this.remove\(listVisuPanels.get\(0\)\);) N
(72) # () S 8 T () S 16 T () S 24 T (listVisuPanels.remove\(0\);) N
(73) # () S 8 T () S 16 T (}) N
(74) # () S 8 T () S 16 T () S
(while) K
( \(listResPanels.size\(\)>0\){) p n
(75) # () S 8 T () S 16 T () S 24 T (this.remove\(listResPanels.get\(0\)\);) N
(76) # () S 8 T () S 16 T () S 24 T (listResPanels.remove\(0\);) N
(77) # () S 8 T () S 16 T () S 24 T () N
(78) # () S 8 T () S 16 T (}) N
(79) # () S 8 T () S 16 T () N
(80) # () S 8 T (}) N
(81) # () N
(82) # () S 8 T () S
(public) K
( ) p
(void) k
( addVisuPane\(JPanel panel, String name\) {) p n
(83) # () N
(84) # () S 8 T () S 16 T (listVisuPanels.add\(\(VisualizationPanel\) panel\);) N
(85) # () S 8 T () S 16 T (add\(name, panel\);) N
(86) # () S 8 T () S 16 T (initCloseTab\(\);) N
(87) # () N
(88) # () S 8 T (}) N
(89) # () N
(90) # () S 8 T () S
(public) K
( ) p
(void) k
( addResPane\(JPanel panel, String name\) {) p n
(91) # () S 8 T () S 16 T (listResPanels.add\(\(ResultsPanel\) panel\);) N
(92) # () S 8 T () S 16 T (add\(name, panel\);) N
(93) # () S 8 T () S 16 T (initCloseTab\(\);) N
(94) # () N
(95) # () S 8 T (}) N
(96) # () N
(97) # () S 8 T () S
(public) K
( ) p
(void) k
( update\(Observable arg0, Object arg1\) {) p n
(98) # () N
(99) # () S 8 T () S 16 T () S
(if) K
( \(listVisuPanels.size\(\) == 0 && listResPanels.size\(\) == 0\) {) p n
(100) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(controler.hasLoadedProject\(\)\) {) p n
(101) # () S 8 T () S 16 T () S 24 T () S 32 T (List<String> pathsToRemove = ) S
(new) K
( ArrayList<Strin) p n
0 T (g>\(\);) N
(102) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(String path : controler.getProject\(\).getIma) p n
0 T (gePaths\(\)\) {) N
(103) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (VisualizationPanel panel;) N
(104) # () N
(105) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(try) K
( {) p n
(106) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (panel = ) S
(new) K
( VisualizationPanel\() p
(n) K n
0 T (ew) S
( File\(path\),) p n
(107) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (controler\);) N
(108) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (addVisuPane\(panel, ") S
(Visualization) str
("\);) p n
(109) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(catch) K
( \(NullPointerException e\) {) p n
(110) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (pathsToRemove.add\(path\);) N
(111) # () N
(112) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(113) # () N
(114) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(115) # () N
(116) # () S 8 T () S 16 T () S 24 T () S 32 T (Map<String, String[]> map = controler.getProject) N
0 T (\(\)) N
(117) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getResultsPaths\(\);) N
(118) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(String key : map.keySet\(\)\) {) p n
(119) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (ResultsPanel panel;) N
(120) # () N
(121) # () N
(122) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (panel = ) S
(new) K
( ResultsPanel\(controler, map.) p n
0 T (get\(key\), ") S
(saved/) str
(") p n
(123) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ key\);) N
(124) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (addResPane\(panel, ") S
(Results) str
("\);) p n
(RightPanel.java) (Page 2/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/RightPanel.java) (119/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 120
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(125) # () p 8 T () S 16 T () S 24 T () S 32 T (}) N
(126) # () N
(127) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(// delete files not attached to the project) c n
(128) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \(String path : pathsToRemove\) {) p n
(129) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (controler.getProject\(\).removeImagePath\(p) N
0 T (ath\);) N
(130) # () S 8 T () S 16 T () S 24 T () S 32 T (}) N
(131) # () S 8 T () S 16 T () S 24 T (}) N
(132) # () S 8 T () S 16 T (}) N
(133) # () N
(134) # () S 8 T () S 16 T () S
(// otherwise, visualisations are updated) c n
(135) # () S
() p 8 T () S 16 T () S
(else) K
( {) p n
(136) # () S 8 T () S 16 T () S 24 T () S
(for) K
( \(VisualizationPanel vp : listVisuPanels\) {) p n
(137) # () S 8 T () S 16 T () S 24 T () S 32 T (vp.update\(\);) N
(138) # () S 8 T () S 16 T () S 24 T (}) N
(139) # () N
(140) # () S 8 T () S 16 T (}) N
(141) # () N
(142) # () S 8 T (}) N
(143) # () N
(144) # () S 8 T () S
(// add close button to all the Tab) c n
(145) # () S
() p 8 T () S
(public) K
( ) p
(void) k
( initCloseTab\(\) {) p n
(146) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 2; i < this.getTabCount\(\); i++\) {) p n
(147) # () S 8 T () S 16 T () S 24 T (setTabComponentAt\(i, ) S
(new) K
( ButtonTabComponent\() p
(this) k
(\)\);) p n
(148) # () S 8 T () S 16 T (}) N
(149) # () S 8 T (}) N
(150) # (}) N
(RightPanel.java) (Page 3/3) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./view/RightPanel.java) (120/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 121
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (/*) c n
(2) # (    This file is part of J-Varo.) N
(3) # (    Authors: Elodie Cassan, Christophe Djemiel, Thomas Faux, Aur\303\251lie Leli\303\250vre,) N
0 T ( Lucas Marmiesse) N
(4) # () N
(5) # (    J-Varo is free software: you can redistribute it and/or modify) N
(6) # (    it under the terms of the GNU General Public License as published by) N
(7) # (    the Free Software Foundation, either version 3 of the License, or) N
(8) # (    \(at your option\) any later version.) N
(9) # () N
(10) # (    J-Varo is distributed in the hope that it will be useful,) N
(11) # (    but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(12) # (    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(13) # (    GNU General Public License for more details.) N
(14) # () N
(15) # (    You should have received a copy of the GNU General Public License) N
(16) # (    along with J-Varo.  If not, see <http://www.gnu.org/licenses/>.) N
(17) # ( */) N
(18) # () N
(19) # () S
(import) K
( java.io.File;) p n
(20) # () N
(21) # () S
(import) K
( javax.swing.UIManager;) p n
(22) # () N
(23) # () S
(import) K
( view.GeneralFrame;) p n
(24) # () S
(import) K
( controler.MainControler;) p n
(25) # () N
(26) # () S
(public) K
( ) p
(class) K
( ) p
(Main) L
( {) p n
(27) # () N
(28) # () S 8 T () S
(static) K
( GeneralFrame frame;) p n
(29) # () N
(30) # () S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String[] args\) {) p n
(31) # () N
(32) # () S 8 T () S 16 T () S
(// Changing the default appearance) c n
(33) # () S
() p 8 T () S 16 T (String system_lf = UIManager.getSystemLookAndFeelClassName\(\)) N
(34) # () S 8 T () S 16 T () S 24 T () S 32 T (.toLowerCase\(\);) N
(35) # () S 8 T () S 16 T () S
(if) K
( \(system_lf.contains\(") p
(metal) str
("\)\) {) p n
(36) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(37) # () S 8 T () S 16 T () S 24 T () S 32 T (UIManager) N
(38) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.setLookAndFeel\(") S
(com.sun.java.swing.pl) str n
0 T (af.nimbus.NimbusLookAndFeel) S
("\);) p n
(39) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(Exception e\) {) p n
(40) # () S 8 T () S 16 T () S 24 T (}) N
(41) # () S 8 T () S 16 T (} ) S
(else) K
( {) p n
(42) # () S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
(43) # () S 8 T () S 16 T () S 24 T () S 32 T (UIManager.setLookAndFeel\(UIManager) N
(44) # () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getSystemLookAndFeelClassName\(\)) N
0 T (\);) N
(45) # () S 8 T () S 16 T () S 24 T (} ) S
(catch) K
( \(Exception e\) {) p n
(46) # () S 8 T () S 16 T () S 24 T (}) N
(47) # () S 8 T () S 16 T (}) N
(48) # () N
(49) # () S 8 T () S 16 T () S
(// Main) c n
(50) # () S
() p 8 T () S 16 T (MainControler controler = ) S
(new) K
( MainControler\(\);) p n
(51) # () S 8 T () S 16 T (frame = GeneralFrame.getInstance\(controler\);) N
(52) # () S 8 T () S 16 T (controler.addObserver\(frame\);) N
(53) # () N
(54) # () S 8 T () S 16 T (String files;) N
(55) # () S 8 T () S 16 T (File folder = ) S
(new) K
( File\(") p
(./res/genFiles/) str
("\);) p n
(56) # () S 8 T () S 16 T (File[] listOfFiles = folder.listFiles\(\);) N
(57) # () N
(58) # () S 8 T () S 16 T () S
(// delete generated files of the previous session) c n
(59) # () S
() p 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < listOfFiles.length; i++\) {) p n
(60) # () N
(61) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(listOfFiles[i].isFile\(\)\) {) p n
(62) # () S 8 T () S 16 T () S 24 T () S 32 T (files = listOfFiles[i].getName\(\);) N
(63) # () S 8 T () S 16 T () S 24 T () S 32 T (listOfFiles[i].deleteOnExit\(\);) N
(Main.java) (Page 1/2) (f\303\251vr. 15, 13 14:24) title
border
/v 1 store
/x0 x v get 3.167824 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(64) # () p 8 T () S 16 T () S 24 T (}) N
(65) # () S 8 T () S 16 T (}) N
(66) # () N
(67) # () S 8 T () S 16 T (folder = ) S
(new) K
( File\(") p
(./res/) str
("\);) p n
(68) # () S 8 T () S 16 T (listOfFiles = folder.listFiles\(\);) N
(69) # () N
(70) # () S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < listOfFiles.length; i++\) {) p n
(71) # () N
(72) # () S 8 T () S 16 T () S 24 T () S
(if) K
( \(listOfFiles[i].isFile\(\)\) {) p n
(73) # () S 8 T () S 16 T () S 24 T () S 32 T (files = listOfFiles[i].getName\(\);) N
(74) # () S 8 T () S 16 T () S 24 T () S 32 T (listOfFiles[i].deleteOnExit\(\);) N
(75) # () S 8 T () S 16 T () S 24 T (}) N
(76) # () S 8 T () S 16 T (}) N
(77) # () N
(78) # () S 8 T (}) N
(79) # () N
(80) # (}) N
(Main.java) (Page 2/2) (f\303\251vr. 15, 13 14:24) title
border
grestore
(Printed by Lucas Marmiesse) rhead
(./Main.java) (121/121) (vendredi f\303\251vrier 15, 2013) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
